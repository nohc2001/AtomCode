#A64 instruction set encoding
2 10
31 31
25 28
0 0000 Reserved
1 0000 SME encodings
- 0001 Unallocated.
- 0010 SVE encodings
- 0011 Unallocated.
- 100x Data Processing -- Immediate
- 101x Branches, Exception Generating and System instructions
- x1x0 Loads and Stores
- x101 Data Processing -- Register
- x111 Data Processing -- Scalar Floating-Point and Advanced SIMD
#Reserved
2 3
29 30
16 24
00 000000000 UDF
- !=000000000 Unallocated.
!=00 - Unallocated.
#SME encodings
3 44
29 30
10 24
2 4
0x x11xxxxxxxxxxxx x0x SME Outer Product - 64 bit
0x x11xxxxxxxxxxxx x1x Unallocated.
00 x0xxxxxxxxxxxxx - Unallocated.
00 x10xxxxxxxxxxxx x00 SME FP Outer Product - 32 bit
00 010xxxxxxxxxxxx xx1 Unallocated.
00 010xxxxxxxxxxxx x10 SME2 Binary Outer Product - 32 bit
00 110xxxxxxxxxxxx x01 Unallocated.
01 x10xxxxxxxxxxxx xx0 SME Integer Outer Product - 32 bit
01 x10xxxxxxxxxxxx xx1 Unallocated.
01 00xxxxxxxxxxxxx - SME2 Multi-vector - Memory (Contiguous)
01 10xxxxxxxxxxxxx - SME2 Multi-vector - Memory (Strided)
10 0xx000x0xxxxxxx 0xx SME Move into Array
10 0xx000x0xxxxxxx 1xx Unallocated.
10 0xx000x1xxxxxxx - SME Move from Array
10 0xx010xxxxxxxxx x0x SME Add Vector to Array
10 0xx010xxxxxxxxx x1x Unallocated.
10 0xx011xxxxxxxxx - Unallocated.
10 0xx1xxxxxxxxxxx - Unallocated.
10 0000010xxxxxxxx - SME Zero
10 0000011xxxxxxxx - Unallocated.
10 0010010xxxxxxxx - SME2 Zero Lookup Table
10 0010011xxxxxxxx - SME2 Move Lookup Table
10 01x001xxxxxxxxx - SME2 Expand Lookup Table (Contiguous)
10 1xx00xxxxxxxxxx - SME2 Multi-vector - Indexed (One register)
10 1xx01xxxx0xxxxx - SME2 Multi-vector - Indexed (Two registers)
10 1xx01xxxx1xxxxx - SME2 Multi-vector - Indexed (Four registers)
10 1xx1xxxxx100xxx - SME2 Multi-vector - SVE Select
10 1xx1xxxxx110xxx - SME2 Multi-vector - SVE Constructive Binary
10 1xx1xxxxx111000 - SME2 Multi-vector - SVE Constructive Unary
10 1xx1xxxxx111001 - Unallocated.
10 1xx1xxxxx11101x - Unallocated.
10 1xx1xxxx010110x - SME2 Multi-vector - Multiple Vectors SVE Destructive (Two registers)
10 1xx1xxxx010111x - SME2 Multi-vector - Multiple Vectors SVE Destructive (Four registers)
10 1xx10xxxx10100x - SME2 Multi-vector - Multiple and Single SVE Destructive (Two registers)
10 1xx10xxxx10101x - SME2 Multi-vector - Multiple and Single SVE Destructive (Four registers)
10 1xx10xxx01111xx - Unallocated.
10 1xx10xxx11x11xx - Unallocated.
10 1xx11xxxx1111xx - Unallocated.
10 1xx11xxx01010xx - Unallocated.
10 1xx11xxx1101xxx - Unallocated.
10 10x1xxxxx0xxxxx - SME2 Multi-vector - Multiple and Single Array Vectors
10 11x1xxxx00xxxxx - SME2 Multi-vector - Multiple Array Vectors (Two registers)
10 11x1xxxx10xxxxx - SME2 Multi-vector - Multiple Array Vectors (Four registers)
11 - - SME Memory
#SME Outer Product - 64 bit
3 4
29 29
24 24
21 21
0 0 0 SME FP64 outer product
0 0 1 Unallocated.
0 1 - Unallocated.
1 - - SME Int16 outer product
#SME FP64 outer product
1 2
4 4
0 FMOPA (non-widening) FEAT_SME_F64F64
1 FMOPS (non-widening) FEAT_SME_F64F64
#SME Int16 outer product
3 8
24 24
21 21
4 4
0 0 0 SMOPA (4-way) FEAT_SME_I16I64
0 0 1 SMOPS (4-way) FEAT_SME_I16I64
0 1 0 SUMOPA FEAT_SME_I16I64
0 1 1 SUMOPS FEAT_SME_I16I64
1 0 0 USMOPA FEAT_SME_I16I64
1 0 1 USMOPS FEAT_SME_I16I64
1 1 0 UMOPA (4-way) FEAT_SME_I16I64
1 1 1 UMOPS (4-way) FEAT_SME_I16I64
#SME FP Outer Product - 32 bit
2 3
24 24
21 21
0 0 SME FP32 outer product
1 0 SME widening BF16 outer product
1 1 SME FP16 widening outer product
#SME FP32 outer product
1 2
4 4
0 FMOPA (non-widening) FEAT_SME
1 FMOPS (non-widening) FEAT_SME
#SME widening BF16 outer product
1 2
4 4
0 BFMOPA FEAT_SME
1 BFMOPS FEAT_SME
#SME FP16 widening outer product
1 2
4 4
0 FMOPA (widening) FEAT_SME
1 FMOPS (widening) FEAT_SME
#SME2 Binary Outer Product - 32 bit
1 2
21 21
0 SME2 32-bit binary outer product
1 Unallocated.
#SME2 32-bit binary outer product
1 2
4 4
0 BMOPA FEAT_SME2
1 BMOPS FEAT_SME2
#SME Integer Outer Product - 32 bit
2 3
21 21
3 3
0 1 SME2 Int16 two-way outer product
1 1 Unallocated.
- 0 SME Int8 outer product
#SME2 Int16 two-way outer product
2 4
24 24
4 4
0 0 SMOPA (2-way) FEAT_SME2
0 1 SMOPS (2-way) FEAT_SME2
1 0 UMOPA (2-way) FEAT_SME2
1 1 UMOPS (2-way) FEAT_SME2
#SME Int8 outer product
3 8
24 24
21 21
4 4
0 0 0 SMOPA (4-way) FEAT_SME
0 0 1 SMOPS (4-way) FEAT_SME
0 1 0 SUMOPA FEAT_SME
0 1 1 SUMOPS FEAT_SME
1 0 0 USMOPA FEAT_SME
1 0 1 USMOPS FEAT_SME
1 1 0 UMOPA (4-way) FEAT_SME
1 1 1 UMOPS (4-way) FEAT_SME
#SME2 Multi-vector - Memory (Contiguous)
3 11
20 22
15 15
1 1
00x 0 - SME2 multi-vec contiguous load (scalar plus scalar, two registers)
00x 1 0 SME2 multi-vec contiguous load (scalar plus scalar, four registers)
01x 0 - SME2 multi-vec contiguous store (scalar plus scalar, two registers)
01x 1 0 SME2 multi-vec contiguous store (scalar plus scalar, four registers)
0xx 1 1 Unallocated.
100 0 - SME2 multi-vec contiguous load (scalar plus immediate, two registers)
100 1 0 SME2 multi-vec contiguous load (scalar plus immediate, four registers)
110 0 - SME2 multi-vec contiguous store (scalar plus immediate, two registers)
110 1 0 SME2 multi-vec contiguous store (scalar plus immediate, four registers)
1x0 1 1 Unallocated.
1x1 - - Unallocated.
#SME2 multi-vec contiguous load (scalar plus scalar, two registers)
2 8
13 14
0 0
00 0 LD1B (scalar plus scalar, consecutive registers) FEAT_SME2
00 1 LDNT1B (scalar plus scalar, consecutive registers) FEAT_SME2
01 0 LD1H (scalar plus scalar, consecutive registers) FEAT_SME2
01 1 LDNT1H (scalar plus scalar, consecutive registers) FEAT_SME2
10 0 LD1W (scalar plus scalar, consecutive registers) FEAT_SME2
10 1 LDNT1W (scalar plus scalar, consecutive registers) FEAT_SME2
11 0 LD1D (scalar plus scalar, consecutive registers) FEAT_SME2
11 1 LDNT1D (scalar plus scalar, consecutive registers) FEAT_SME2
#SME2 multi-vec contiguous load (scalar plus scalar, four registers)
2 8
13 14
0 0
00 0 LD1B (scalar plus scalar, consecutive registers) FEAT_SME2
00 1 LDNT1B (scalar plus scalar, consecutive registers) FEAT_SME2
01 0 LD1H (scalar plus scalar, consecutive registers) FEAT_SME2
01 1 LDNT1H (scalar plus scalar, consecutive registers) FEAT_SME2
10 0 LD1W (scalar plus scalar, consecutive registers) FEAT_SME2
10 1 LDNT1W (scalar plus scalar, consecutive registers) FEAT_SME2
11 0 LD1D (scalar plus scalar, consecutive registers) FEAT_SME2
11 1 LDNT1D (scalar plus scalar, consecutive registers) FEAT_SME2
#SME2 multi-vec contiguous store (scalar plus scalar, two registers)
2 8
13 14
0 0
00 0 ST1B (scalar plus scalar, consecutive registers) FEAT_SME2
00 1 STNT1B (scalar plus scalar, consecutive registers) FEAT_SME2
01 0 ST1H (scalar plus scalar, consecutive registers) FEAT_SME2
01 1 STNT1H (scalar plus scalar, consecutive registers) FEAT_SME2
10 0 ST1W (scalar plus scalar, consecutive registers) FEAT_SME2
10 1 STNT1W (scalar plus scalar, consecutive registers) FEAT_SME2
11 0 ST1D (scalar plus scalar, consecutive registers) FEAT_SME2
11 1 STNT1D (scalar plus scalar, consecutive registers) FEAT_SME2
#SME2 multi-vec contiguous store (scalar plus scalar, four registers)
2 8
13 14
0 0
00 0 ST1B (scalar plus scalar, consecutive registers) FEAT_SME2
00 1 STNT1B (scalar plus scalar, consecutive registers) FEAT_SME2
01 0 ST1H (scalar plus scalar, consecutive registers) FEAT_SME2
01 1 STNT1H (scalar plus scalar, consecutive registers) FEAT_SME2
10 0 ST1W (scalar plus scalar, consecutive registers) FEAT_SME2
10 1 STNT1W (scalar plus scalar, consecutive registers) FEAT_SME2
11 0 ST1D (scalar plus scalar, consecutive registers) FEAT_SME2
11 1 STNT1D (scalar plus scalar, consecutive registers) FEAT_SME2
#SME2 multi-vec contiguous load (scalar plus immediate, two registers)
2 8
13 14
0 0
00 0 LD1B (scalar plus immediate, consecutive registers) FEAT_SME2
00 1 LDNT1B (scalar plus immediate, consecutive registers) FEAT_SME2
01 0 LD1H (scalar plus immediate, consecutive registers) FEAT_SME2
01 1 LDNT1H (scalar plus immediate, consecutive registers) FEAT_SME2
10 0 LD1W (scalar plus immediate, consecutive registers) FEAT_SME2
10 1 LDNT1W (scalar plus immediate, consecutive registers) FEAT_SME2
11 0 LD1D (scalar plus immediate, consecutive registers) FEAT_SME2
11 1 LDNT1D (scalar plus immediate, consecutive registers) FEAT_SME2
#SME2 multi-vec contiguous load (scalar plus immediate, four registers)
2 8
13 14
0 0
00 0 LD1B (scalar plus immediate, consecutive registers) FEAT_SME2
00 1 LDNT1B (scalar plus immediate, consecutive registers) FEAT_SME2
01 0 LD1H (scalar plus immediate, consecutive registers) FEAT_SME2
01 1 LDNT1H (scalar plus immediate, consecutive registers) FEAT_SME2
10 0 LD1W (scalar plus immediate, consecutive registers) FEAT_SME2
10 1 LDNT1W (scalar plus immediate, consecutive registers) FEAT_SME2
11 0 LD1D (scalar plus immediate, consecutive registers) FEAT_SME2
11 1 LDNT1D (scalar plus immediate, consecutive registers) FEAT_SME2
#SME2 multi-vec contiguous store (scalar plus immediate, two registers)
2 8
13 14
0 0
00 0 ST1B (scalar plus immediate, consecutive registers) FEAT_SME2
00 1 STNT1B (scalar plus immediate, consecutive registers) FEAT_SME2
01 0 ST1H (scalar plus immediate, consecutive registers) FEAT_SME2
01 1 STNT1H (scalar plus immediate, consecutive registers) FEAT_SME2
10 0 ST1W (scalar plus immediate, consecutive registers) FEAT_SME2
10 1 STNT1W (scalar plus immediate, consecutive registers) FEAT_SME2
11 0 ST1D (scalar plus immediate, consecutive registers) FEAT_SME2
11 1 STNT1D (scalar plus immediate, consecutive registers) FEAT_SME2
#SME2 multi-vec contiguous store (scalar plus immediate, four registers)
2 8
13 14
0 0
00 0 ST1B (scalar plus immediate, consecutive registers) FEAT_SME2
00 1 STNT1B (scalar plus immediate, consecutive registers) FEAT_SME2
01 0 ST1H (scalar plus immediate, consecutive registers) FEAT_SME2
01 1 STNT1H (scalar plus immediate, consecutive registers) FEAT_SME2
10 0 ST1W (scalar plus immediate, consecutive registers) FEAT_SME2
10 1 STNT1W (scalar plus immediate, consecutive registers) FEAT_SME2
11 0 ST1D (scalar plus immediate, consecutive registers) FEAT_SME2
11 1 STNT1D (scalar plus immediate, consecutive registers) FEAT_SME2
#SME2 Multi-vector - Memory (Strided)
3 11
20 22
15 15
2 2
00x 0 - SME2 multi-vec non-contiguous load (scalar plus scalar, two registers)
00x 1 0 SME2 multi-vec non-contiguous load (scalar plus scalar, four registers)
01x 0 - SME2 multi-vec non-contiguous store (scalar plus scalar, two registers)
01x 1 0 SME2 multi-vec non-contiguous store (scalar plus scalar, four registers)
0xx 1 1 Unallocated.
100 0 - SME2 multi-vec non-contiguous load (scalar plus immediate, two registers)
100 1 0 SME2 multi-vec non-contiguous load (scalar plus immediate, four registers)
110 0 - SME2 multi-vec non-contiguous store (scalar plus immediate, two registers)
110 1 0 SME2 multi-vec non-contiguous store (scalar plus immediate, four registers)
1x0 1 1 Unallocated.
1x1 - - Unallocated.
#SME2 multi-vec non-contiguous load (scalar plus scalar, two registers)
2 8
13 14
3 3
00 0 LD1B (scalar plus scalar, strided registers) FEAT_SME2
00 1 LDNT1B (scalar plus scalar, strided registers) FEAT_SME2
01 0 LD1H (scalar plus scalar, strided registers) FEAT_SME2
01 1 LDNT1H (scalar plus scalar, strided registers) FEAT_SME2
10 0 LD1W (scalar plus scalar, strided registers) FEAT_SME2
10 1 LDNT1W (scalar plus scalar, strided registers) FEAT_SME2
11 0 LD1D (scalar plus scalar, strided registers) FEAT_SME2
11 1 LDNT1D (scalar plus scalar, strided registers) FEAT_SME2
#SME2 multi-vec non-contiguous load (scalar plus scalar, four registers)
2 8
13 14
3 3
00 0 LD1B (scalar plus scalar, strided registers) FEAT_SME2
00 1 LDNT1B (scalar plus scalar, strided registers) FEAT_SME2
01 0 LD1H (scalar plus scalar, strided registers) FEAT_SME2
01 1 LDNT1H (scalar plus scalar, strided registers) FEAT_SME2
10 0 LD1W (scalar plus scalar, strided registers) FEAT_SME2
10 1 LDNT1W (scalar plus scalar, strided registers) FEAT_SME2
11 0 LD1D (scalar plus scalar, strided registers) FEAT_SME2
11 1 LDNT1D (scalar plus scalar, strided registers) FEAT_SME2
#SME2 multi-vec non-contiguous store (scalar plus scalar, two registers)
2 8
13 14
3 3
00 0 ST1B (scalar plus scalar, strided registers) FEAT_SME2
00 1 STNT1B (scalar plus scalar, strided registers) FEAT_SME2
01 0 ST1H (scalar plus scalar, strided registers) FEAT_SME2
01 1 STNT1H (scalar plus scalar, strided registers) FEAT_SME2
10 0 ST1W (scalar plus scalar, strided registers) FEAT_SME2
10 1 STNT1W (scalar plus scalar, strided registers) FEAT_SME2
11 0 ST1D (scalar plus scalar, strided registers) FEAT_SME2
11 1 STNT1D (scalar plus scalar, strided registers) FEAT_SME2
#SME2 multi-vec non-contiguous store (scalar plus scalar, four registers)
2 8
13 14
3 3
00 0 ST1B (scalar plus scalar, strided registers) FEAT_SME2
00 1 STNT1B (scalar plus scalar, strided registers) FEAT_SME2
01 0 ST1H (scalar plus scalar, strided registers) FEAT_SME2
01 1 STNT1H (scalar plus scalar, strided registers) FEAT_SME2
10 0 ST1W (scalar plus scalar, strided registers) FEAT_SME2
10 1 STNT1W (scalar plus scalar, strided registers) FEAT_SME2
11 0 ST1D (scalar plus scalar, strided registers) FEAT_SME2
11 1 STNT1D (scalar plus scalar, strided registers) FEAT_SME2
#SME2 multi-vec non-contiguous load (scalar plus immediate, two registers)
2 8
13 14
3 3
00 0 LD1B (scalar plus immediate, strided registers) FEAT_SME2
00 1 LDNT1B (scalar plus immediate, strided registers) FEAT_SME2
01 0 LD1H (scalar plus immediate, strided registers) FEAT_SME2
01 1 LDNT1H (scalar plus immediate, strided registers) FEAT_SME2
10 0 LD1W (scalar plus immediate, strided registers) FEAT_SME2
10 1 LDNT1W (scalar plus immediate, strided registers) FEAT_SME2
11 0 LD1D (scalar plus immediate, strided registers) FEAT_SME2
11 1 LDNT1D (scalar plus immediate, strided registers) FEAT_SME2
#SME2 multi-vec non-contiguous load (scalar plus immediate, four registers)
2 8
13 14
3 3
00 0 LD1B (scalar plus immediate, strided registers) FEAT_SME2
00 1 LDNT1B (scalar plus immediate, strided registers) FEAT_SME2
01 0 LD1H (scalar plus immediate, strided registers) FEAT_SME2
01 1 LDNT1H (scalar plus immediate, strided registers) FEAT_SME2
10 0 LD1W (scalar plus immediate, strided registers) FEAT_SME2
10 1 LDNT1W (scalar plus immediate, strided registers) FEAT_SME2
11 0 LD1D (scalar plus immediate, strided registers) FEAT_SME2
11 1 LDNT1D (scalar plus immediate, strided registers) FEAT_SME2
#SME2 multi-vec non-contiguous store (scalar plus immediate, two registers)
2 8
13 14
3 3
00 0 ST1B (scalar plus immediate, strided registers) FEAT_SME2
00 1 STNT1B (scalar plus immediate, strided registers) FEAT_SME2
01 0 ST1H (scalar plus immediate, strided registers) FEAT_SME2
01 1 STNT1H (scalar plus immediate, strided registers) FEAT_SME2
10 0 ST1W (scalar plus immediate, strided registers) FEAT_SME2
10 1 STNT1W (scalar plus immediate, strided registers) FEAT_SME2
11 0 ST1D (scalar plus immediate, strided registers) FEAT_SME2
11 1 STNT1D (scalar plus immediate, strided registers) FEAT_SME2
#SME2 multi-vec non-contiguous store (scalar plus immediate, four registers)
2 8
13 14
3 3
00 0 ST1B (scalar plus immediate, strided registers) FEAT_SME2
00 1 STNT1B (scalar plus immediate, strided registers) FEAT_SME2
01 0 ST1H (scalar plus immediate, strided registers) FEAT_SME2
01 1 STNT1H (scalar plus immediate, strided registers) FEAT_SME2
10 0 ST1W (scalar plus immediate, strided registers) FEAT_SME2
10 1 STNT1W (scalar plus immediate, strided registers) FEAT_SME2
11 0 ST1D (scalar plus immediate, strided registers) FEAT_SME2
11 1 STNT1D (scalar plus immediate, strided registers) FEAT_SME2
#SME Move into Array
6 22
22 23
18 18
15 16
10 12
5 6
3 3
00 1 00 010 x0 0 MOVA (vector to array, two registers) FEAT_SME2
00 1 00 011 00 0 MOVA (vector to array, four registers) FEAT_SME2
00 1 00 0x0 x0 1 Unallocated.
00 1 00 0x0 x1 - Unallocated.
00 1 00 0x1 00 1 Unallocated.
00 1 00 0x1 !=00 - Unallocated.
00 1 01 000 x0 1 Unallocated.
00 1 01 000 x1 - Unallocated.
00 1 01 001 00 1 Unallocated.
00 1 01 001 !=00 - Unallocated.
00 1 01 01x - - Unallocated.
!=00 1 0x 000 x0 1 Unallocated.
!=00 1 0x 000 x1 - Unallocated.
!=00 1 0x 001 00 1 Unallocated.
!=00 1 0x 001 01 - Unallocated.
!=00 1 0x 001 1x - Unallocated.
!=00 1 0x 01x - - Unallocated.
- 0 - - - - SME move vector to array
- 1 0x 000 x0 0 SME2 move vector to tile, two registers
- 1 0x 001 00 0 SME2 move vector to tile, four registers
- 1 0x 1xx - - Unallocated.
- 1 1x - - - Unallocated.
#SME move vector to array
2 7
22 23
16 16
0x 1 Unallocated.
00 0 MOVA (vector to tile, single) - Encoding FEAT_SME
01 0 MOVA (vector to tile, single) - Encoding FEAT_SME
10 0 MOVA (vector to tile, single) - Encoding FEAT_SME
10 1 Unallocated.
11 0 MOVA (vector to tile, single) - Encoding FEAT_SME
11 1 MOVA (vector to tile, single) - Encoding FEAT_SME
#SME2 move vector to tile, two registers
1 4
22 23
00 MOVA (vector to tile, two registers) - Encoding FEAT_SME2
01 MOVA (vector to tile, two registers) - Encoding FEAT_SME2
10 MOVA (vector to tile, two registers) - Encoding FEAT_SME2
11 MOVA (vector to tile, two registers) - Encoding FEAT_SME2
#SME2 move vector to tile, four registers
2 6
22 23
0 2
0x 1xx Unallocated.
00 0xx MOVA (vector to tile, four registers) - Encoding FEAT_SME2
01 0xx MOVA (vector to tile, four registers) - Encoding FEAT_SME2
10 0xx MOVA (vector to tile, four registers) - Encoding FEAT_SME2
10 1xx Unallocated.
11 - MOVA (vector to tile, four registers) - Encoding FEAT_SME2
#SME Move from Array
6 21
22 23
18 18
15 16
10 12
8 9
0 1
00 1 00 010 00 x0 MOVA (array to vector, two registers) FEAT_SME2
00 1 00 011 00 00 MOVA (array to vector, four registers) FEAT_SME2
00 1 00 0x0 00 x1 Unallocated.
00 1 00 0x1 00 !=00 Unallocated.
00 1 00 0xx !=00 - Unallocated.
00 1 01 000 00 x1 Unallocated.
00 1 01 001 00 !=00 Unallocated.
00 1 01 00x !=00 - Unallocated.
00 1 01 01x - - Unallocated.
!=00 1 0x 000 00 x1 Unallocated.
!=00 1 0x 001 00 01 Unallocated.
!=00 1 0x 001 00 1x Unallocated.
!=00 1 0x 00x 01 - Unallocated.
!=00 1 0x 00x 1x - Unallocated.
!=00 1 0x 01x - - Unallocated.
- 0 - - 0x - SME move array to vector
- 0 - - 1x - Unallocated.
- 1 0x 000 00 x0 SME2 move tile to vector, two registers
- 1 0x 001 00 00 SME2 move tile to vector, four registers
- 1 0x 1xx - - Unallocated.
- 1 1x - - - Unallocated.
#SME2 move tile to vector, four registers
2 6
22 23
5 7
0x 1xx Unallocated.
00 0xx MOVA (tile to vector, four registers) - Encoding FEAT_SME2
01 0xx MOVA (tile to vector, four registers) - Encoding FEAT_SME2
10 0xx MOVA (tile to vector, four registers) - Encoding FEAT_SME2
10 1xx Unallocated.
11 - MOVA (tile to vector, four registers) - Encoding FEAT_SME2
#SME2 move tile to vector, two registers
1 4
22 23
00 MOVA (tile to vector, two registers) - Encoding FEAT_SME2
01 MOVA (tile to vector, two registers) - Encoding FEAT_SME2
10 MOVA (tile to vector, two registers) - Encoding FEAT_SME2
11 MOVA (tile to vector, two registers) - Encoding FEAT_SME2
#SME move array to vector
2 7
22 23
16 16
0x 1 Unallocated.
00 0 MOVA (tile to vector, single) - Encoding FEAT_SME
01 0 MOVA (tile to vector, single) - Encoding FEAT_SME
10 0 MOVA (tile to vector, single) - Encoding FEAT_SME
10 1 Unallocated.
11 0 MOVA (tile to vector, single) - Encoding FEAT_SME
11 1 MOVA (tile to vector, single) - Encoding FEAT_SME
#SME Add Vector to Array
3 4
23 23
17 18
4 4
0 - - Unallocated.
1 00 0 SME add vector to array
1 00 1 Unallocated.
1 !=00 - Unallocated.
#SME add vector to array
3 5
22 22
16 16
0 2
0 - 1xx Unallocated.
0 0 0xx ADDHA - Encoding FEAT_SME
0 1 0xx ADDVA - Encoding FEAT_SME
1 0 - ADDHA - Encoding FEAT_SME_I16I64
1 1 - ADDVA - Encoding FEAT_SME_I16I64
#SME Zero
1 2
8 17
0000000000 ZERO (tile) FEAT_SME
!=0000000000 Unallocated.
#SME2 Zero Lookup Table
1 2
4 17
00000000000000 SME2 zero lookup table
!=00000000000000 Unallocated.
#SME2 zero lookup table
1 5
0 3
0000 Unallocated.
0001 ZERO (ZT0) FEAT_SME2
001x Unallocated.
01xx Unallocated.
1xxx Unallocated.
#SME2 Move Lookup Table
2 3
17 17
15 16
0 00 SME2 move from lookup table
1 00 SME2 move into lookup table
- !=00 Unallocated.
#SME2 move from lookup table
1 8
5 11
000xxxx Unallocated.
0010xxx Unallocated.
00110xx Unallocated.
001110x Unallocated.
0011110 Unallocated.
0011111 MOVT (ZT0 to scalar) FEAT_SME2
01xxxxx Unallocated.
1xxxxxx Unallocated.
#SME2 move into lookup table
1 8
5 11
000xxxx Unallocated.
0010xxx Unallocated.
00110xx Unallocated.
001110x Unallocated.
0011110 Unallocated.
0011111 MOVT (scalar to ZT0) FEAT_SME2
01xxxxx Unallocated.
1xxxxxx Unallocated.
#SME2 Expand Lookup Table (Contiguous)
3 6
22 22
14 15
0 1
0 00 - Unallocated.
0 10 00 SME2 lookup table expand four contiguous registers
0 10 !=00 Unallocated.
0 x1 x0 SME2 lookup table expand two contiguous registers
0 x1 x1 Unallocated.
1 - - SME2 lookup table expand one register
#SME2 lookup table expand four contiguous registers
2 7
16 18
10 11
00x - Unallocated.
01x 00 LUTI4 (four registers) FEAT_SME2
01x 01 Unallocated.
01x 1x Unallocated.
1xx 00 LUTI2 (four registers) FEAT_SME2
1xx 01 Unallocated.
1xx 1x Unallocated.
#SME2 lookup table expand two contiguous registers
2 7
15 18
10 11
00xx - Unallocated.
01xx 00 LUTI4 (two registers) FEAT_SME2
01xx 01 Unallocated.
01xx 1x Unallocated.
1xxx 00 LUTI2 (two registers) FEAT_SME2
1xxx 01 Unallocated.
1xxx 1x Unallocated.
#SME2 lookup table expand one register
2 7
14 18
10 11
00xxx - Unallocated.
01xxx 00 LUTI4 (single) FEAT_SME2
01xxx 01 Unallocated.
01xxx 1x Unallocated.
1xxxx 00 LUTI2 (single) FEAT_SME2
1xxxx 01 Unallocated.
1xxxx 1x Unallocated.
#SME2 Multi-vector - Indexed (One register)
3 7
22 23
12 12
2 2
00 - - SME2 multi-vec indexed long long MLA one source 32-bit
01 - - Unallocated.
10 0 0 SME2 multi-vec indexed long long MLA one source 64-bit
10 0 1 Unallocated.
10 1 - SME2 multi-vec indexed long FMA one source
11 0 - Unallocated.
11 1 - SME2 multi-vec indexed long MLA one source
#SME2 multi-vec indexed long long MLA one source 32-bit
3 7
4 4
3 3
2 2
- 1 1 Unallocated.
0 0 0 SMLALL (multiple and indexed vector) FEAT_SME2
0 0 1 USMLALL (multiple and indexed vector) FEAT_SME2
0 1 0 SMLSLL (multiple and indexed vector) FEAT_SME2
1 0 0 UMLALL (multiple and indexed vector) FEAT_SME2
1 0 1 SUMLALL (multiple and indexed vector) FEAT_SME2
1 1 0 UMLSLL (multiple and indexed vector) FEAT_SME2
#SME2 multi-vec indexed long long MLA one source 64-bit
2 4
4 4
3 3
0 0 SMLALL (multiple and indexed vector) FEAT_SME_I16I64
0 1 SMLSLL (multiple and indexed vector) FEAT_SME_I16I64
1 0 UMLALL (multiple and indexed vector) FEAT_SME_I16I64
1 1 UMLSLL (multiple and indexed vector) FEAT_SME_I16I64
#SME2 multi-vec indexed long FMA one source
2 4
4 4
3 3
0 0 FMLAL (multiple and indexed vector) FEAT_SME2
0 1 FMLSL (multiple and indexed vector) FEAT_SME2
1 0 BFMLAL (multiple and indexed vector) FEAT_SME2
1 1 BFMLSL (multiple and indexed vector) FEAT_SME2
#SME2 multi-vec indexed long MLA one source
2 4
4 4
3 3
0 0 SMLAL (multiple and indexed vector) FEAT_SME2
0 1 SMLSL (multiple and indexed vector) FEAT_SME2
1 0 UMLAL (multiple and indexed vector) FEAT_SME2
1 1 UMLSL (multiple and indexed vector) FEAT_SME2
#SME2 Multi-vector - Indexed (Two registers)
3 11
22 23
11 12
5 5
00 0x - SME2 multi-vec indexed long long MLA two sources 32-bit
00 1x - Unallocated.
01 - - SME2 multi-vec ternary indexed two registers 32-bit
10 00 0 SME2 multi-vec indexed long long MLA two sources 64-bit
10 00 1 Unallocated.
10 01 - Unallocated.
10 1x 0 SME2 multi-vec indexed long FMA two sources
10 1x 1 Unallocated.
11 00 0 SME2 multi-vec ternary indexed two registers 64-bit
11 01 0 Unallocated.
11 1x 0 SME2 multi-vec indexed long MLA two sources
#SME2 multi-vec indexed long long MLA two sources 32-bit
3 7
5 5
4 4
3 3
0 0 0 SMLALL (multiple and indexed vector) FEAT_SME2
0 0 1 SMLSLL (multiple and indexed vector) FEAT_SME2
0 1 0 UMLALL (multiple and indexed vector) FEAT_SME2
0 1 1 UMLSLL (multiple and indexed vector) FEAT_SME2
1 - 1 Unallocated.
1 0 0 USMLALL (multiple and indexed vector) FEAT_SME2
1 1 0 SUMLALL (multiple and indexed vector) FEAT_SME2
#SME2 multi-vec ternary indexed two registers 32-bit
2 15
12 12
3 5
0 000 FMLA (multiple and indexed vector) FEAT_SME2
0 001 FVDOT FEAT_SME2
0 010 FMLS (multiple and indexed vector) FEAT_SME2
0 011 BFVDOT FEAT_SME2
0 100 SVDOT (2-way) FEAT_SME2
0 101 Unallocated.
0 110 UVDOT (2-way) FEAT_SME2
1 000 SDOT (2-way, multiple and indexed vector) FEAT_SME2
1 001 FDOT (multiple and indexed vector) FEAT_SME2
1 010 UDOT (2-way, multiple and indexed vector) FEAT_SME2
1 011 BFDOT (multiple and indexed vector) FEAT_SME2
1 100 SDOT (4-way, multiple and indexed vector) FEAT_SME2
1 101 USDOT (multiple and indexed vector) FEAT_SME2
1 110 UDOT (4-way, multiple and indexed vector) FEAT_SME2
1 111 SUDOT (multiple and indexed vector) FEAT_SME2
#SME2 multi-vec indexed long long MLA two sources 64-bit
2 4
4 4
3 3
0 0 SMLALL (multiple and indexed vector) FEAT_SME_I16I64
0 1 SMLSLL (multiple and indexed vector) FEAT_SME_I16I64
1 0 UMLALL (multiple and indexed vector) FEAT_SME_I16I64
1 1 UMLSLL (multiple and indexed vector) FEAT_SME_I16I64
#SME2 multi-vec indexed long FMA two sources
2 4
4 4
3 3
0 0 FMLAL (multiple and indexed vector) FEAT_SME2
0 1 FMLSL (multiple and indexed vector) FEAT_SME2
1 0 BFMLAL (multiple and indexed vector) FEAT_SME2
1 1 BFMLSL (multiple and indexed vector) FEAT_SME2
#SME2 multi-vec ternary indexed two registers 64-bit
1 4
3 4
00 FMLA (multiple and indexed vector) FEAT_SME_F64F64
01 SDOT (4-way, multiple and indexed vector) FEAT_SME_I16I64
10 FMLS (multiple and indexed vector) FEAT_SME_F64F64
11 UDOT (4-way, multiple and indexed vector) FEAT_SME_I16I64
#SME2 multi-vec indexed long MLA two sources
2 4
4 4
3 3
0 0 SMLAL (multiple and indexed vector) FEAT_SME2
0 1 SMLSL (multiple and indexed vector) FEAT_SME2
1 0 UMLAL (multiple and indexed vector) FEAT_SME2
1 1 UMLSL (multiple and indexed vector) FEAT_SME2
#SME2 Multi-vector - Indexed (Four registers)
3 13
22 23
11 12
5 6
00 0x 0x SME2 multi-vec indexed long long MLA four sources 32-bit
00 0x 1x Unallocated.
00 1x - Unallocated.
01 - 0x SME2 multi-vec ternary indexed four registers 32-bit
10 00 00 SME2 multi-vec indexed long long MLA four sources 64-bit
10 00 !=00 Unallocated.
10 01 - Unallocated.
10 1x 00 SME2 multi-vec indexed long FMA four sources
10 1x !=00 Unallocated.
11 0x 00 SME2 multi-vec ternary indexed four registers 64-bit
11 0x 01 Unallocated.
11 1x 00 SME2 multi-vec indexed long MLA four sources
x1 - 1x Unallocated.
#SME2 multi-vec indexed long long MLA four sources 32-bit
3 7
5 5
4 4
3 3
0 0 0 SMLALL (multiple and indexed vector) FEAT_SME2
0 0 1 SMLSLL (multiple and indexed vector) FEAT_SME2
0 1 0 UMLALL (multiple and indexed vector) FEAT_SME2
0 1 1 UMLSLL (multiple and indexed vector) FEAT_SME2
1 - 1 Unallocated.
1 0 0 USMLALL (multiple and indexed vector) FEAT_SME2
1 1 0 SUMLALL (multiple and indexed vector) FEAT_SME2
#SME2 multi-vec ternary indexed four registers 32-bit
2 14
12 12
3 5
0 000 FMLA (multiple and indexed vector) FEAT_SME2
0 010 FMLS (multiple and indexed vector) FEAT_SME2
0 100 SVDOT (4-way) FEAT_SME2
0 101 USVDOT FEAT_SME2
0 110 UVDOT (4-way) FEAT_SME2
0 111 SUVDOT FEAT_SME2
1 000 SDOT (2-way, multiple and indexed vector) FEAT_SME2
1 001 FDOT (multiple and indexed vector) FEAT_SME2
1 010 UDOT (2-way, multiple and indexed vector) FEAT_SME2
1 011 BFDOT (multiple and indexed vector) FEAT_SME2
1 100 SDOT (4-way, multiple and indexed vector) FEAT_SME2
1 101 USDOT (multiple and indexed vector) FEAT_SME2
1 110 UDOT (4-way, multiple and indexed vector) FEAT_SME2
1 111 SUDOT (multiple and indexed vector) FEAT_SME2
#SME2 multi-vec indexed long long MLA four sources 64-bit
2 4
4 4
3 3
0 0 SMLALL (multiple and indexed vector) FEAT_SME_I16I64
0 1 SMLSLL (multiple and indexed vector) FEAT_SME_I16I64
1 0 UMLALL (multiple and indexed vector) FEAT_SME_I16I64
1 1 UMLSLL (multiple and indexed vector) FEAT_SME_I16I64
#SME2 multi-vec indexed long FMA four sources
2 4
4 4
3 3
0 0 FMLAL (multiple and indexed vector) FEAT_SME2
0 1 FMLSL (multiple and indexed vector) FEAT_SME2
1 0 BFMLAL (multiple and indexed vector) FEAT_SME2
1 1 BFMLSL (multiple and indexed vector) FEAT_SME2
#SME2 multi-vec ternary indexed four registers 64-bit
2 7
11 11
3 4
0 00 FMLA (multiple and indexed vector) FEAT_SME_F64F64
0 01 SDOT (4-way, multiple and indexed vector) FEAT_SME_I16I64
0 10 FMLS (multiple and indexed vector) FEAT_SME_F64F64
0 11 UDOT (4-way, multiple and indexed vector) FEAT_SME_I16I64
1 x0 Unallocated.
1 01 SVDOT (4-way) FEAT_SME_I16I64
1 11 UVDOT (4-way) FEAT_SME_I16I64
#SME2 multi-vec indexed long MLA four sources
2 4
4 4
3 3
0 0 SMLAL (multiple and indexed vector) FEAT_SME2
0 1 SMLSL (multiple and indexed vector) FEAT_SME2
1 0 UMLAL (multiple and indexed vector) FEAT_SME2
1 1 UMLSL (multiple and indexed vector) FEAT_SME2
#SME2 Multi-vector - SVE Select
3 7
16 17
5 6
0 1
01 00 00 SEL - Encoding FEAT_SME2
01 00 !=00 Unallocated.
01 !=00 - Unallocated.
11 - - Unallocated.
x0 x0 x0 SEL - Encoding FEAT_SME2
x0 x0 x1 Unallocated.
x0 x1 - Unallocated.
#SME2 Multi-vector - SVE Constructive Binary
3 13
22 23
10 12
0 1
00 101 - SME2 multi-vec quadwords ZIP two registers -
01 101 - Unallocated.
10 101 - Unallocated.
11 101 - SME2 multi-vec saturating shift right narrow two registers -
- 000 x0 FCLAMP - Encoding FEAT_SME2
- 000 x1 Unallocated.
- 001 - SME2 multi-vec CLAMP two registers -
- 010 00 FCLAMP - Encoding FEAT_SME2
- 010 01 Unallocated.
- 011 0x SME2 multi-vec CLAMP four registers -
- 1x 1x Unallocated.
- 100 - SME2 multi-vec ZIP two registers -
- 11x - SME2 multi-vec saturating shift right narrow four registers -
#SME2 multi-vec quadwords ZIP two registers -
1 2
0 0
0 ZIP (two registers) FEAT_SME2
1 UZP (two registers) FEAT_SME2
#SME2 multi-vec saturating shift right narrow two registers -
2 4
20 20
5 5
0 0 SQRSHR (two registers) FEAT_SME2
0 1 UQRSHR (two registers) FEAT_SME2
1 0 SQRSHRU (two registers) FEAT_SME2
1 1 Unallocated.
#SME2 multi-vec CLAMP two registers -
1 2
0 0
0 SCLAMP FEAT_SME2
1 UCLAMP FEAT_SME2
#SME2 multi-vec CLAMP four registers -
1 2
0 0
0 SCLAMP FEAT_SME2
1 UCLAMP FEAT_SME2
#SME2 multi-vec ZIP two registers -
1 2
0 0
0 ZIP (two registers) FEAT_SME2
1 UZP (two registers) FEAT_SME2
#SME2 multi-vec saturating shift right narrow four registers -
3 7
10 10
6 6
5 5
- 1 1 Unallocated.
0 0 0 SQRSHR (four registers) FEAT_SME2
0 0 1 UQRSHR (four registers) FEAT_SME2
0 1 0 SQRSHRU (four registers) FEAT_SME2
1 0 0 SQRSHRN FEAT_SME2
1 0 1 UQRSHRN FEAT_SME2
1 1 0 SQRSHRUN FEAT_SME2
#SME2 Multi-vector - SVE Constructive Unary
4 40
22 23
16 20
5 6
0 1
00 00001 - x0 SME2 multi-vec FP to int convert two registers
00 00001 - x1 Unallocated.
00 00010 - x0 SME2 multi-vec int to FP two registers
00 00010 - x1 Unallocated.
00 00111 - - Unallocated.
00 10001 0x 00 SME2 multi-vec FP to int convert four registers
00 10001 0x !=00 Unallocated.
00 1000x 1x - Unallocated.
00 10010 0x 00 SME2 multi-vec int to FP four registers
00 10010 0x !=00 Unallocated.
00 10010 1x - Unallocated.
00 10111 00 x0 SME2 multi-vec quadwords ZIP four registers
00 1011x 00 x1 Unallocated.
00 1011x !=00 - Unallocated.
01 00001 - - Unallocated.
01 x0010 - - Unallocated.
0x 00000 - - SME2 multi-vec FP down convert two registers
0x 00011 - - SME2 multi-vec int down convert two registers
0x 00100 x1 - Unallocated.
0x 10100 - - Unallocated.
1x 000xx - - Unallocated.
1x 10010 - - Unallocated.
1x x0100 - - Unallocated.
!=00 1000x - - Unallocated.
!=00 10110 00 x1 Unallocated.
!=00 10110 01 - Unallocated.
!=00 10110 1x - Unallocated.
!=00 x0111 - - Unallocated.
- 00101 - - SME2 multi-vec unpack two registers
- 01xxx x0 x0 SME2 multi-vec FRINT two registers
- 01xxx x0 x1 Unallocated.
- 01xxx x1 - Unallocated.
- 10011 - - SME2 multi-vec int down convert four registers
- 10101 x0 0x SME2 multi-vec unpack four registers
- 10101 x0 1x Unallocated.
- 10101 x1 - Unallocated.
- 10110 00 x0 SME2 multi-vec ZIP four registers
- 11xxx 00 00 SME2 multi-vec FRINT four registers
- 11xxx 00 !=00 Unallocated.
- 11xxx !=00 - Unallocated.

#SME2 multi-vec FP to int convert two registers
1 2
5 5
0 FCVTZS FEAT_SME2
1 FCVTZU FEAT_SME2
#SME2 multi-vec int to FP two registers
1 2
5 5
0 SCVTF FEAT_SME2
1 UCVTF FEAT_SME2
#SME2 multi-vec FP to int convert four registers
1 2
5 5
0 FCVTZS FEAT_SME2
1 FCVTZU FEAT_SME2
#SME2 multi-vec int to FP four registers
1 2
5 5
0 SCVTF FEAT_SME2
1 UCVTF FEAT_SME2
#SME2 multi-vec quadwords ZIP four registers
1 2
1 1
0 ZIP (four registers) FEAT_SME2
1 UZP (four registers) FEAT_SME2
#SME2 multi-vec FP down convert two registers
2 4
22 22
5 5
0 0 FCVT FEAT_SME2
0 1 FCVTN FEAT_SME2
1 0 BFCVT FEAT_SME2
1 1 BFCVTN FEAT_SME2
#SME2 multi-vec int down convert two registers
2 4
22 22
5 5
0 0 SQCVT (two registers) FEAT_SME2
0 1 UQCVT (two registers) FEAT_SME2
1 0 SQCVTU (two registers) FEAT_SME2
1 1 Unallocated.
#SME2 multi-vec unpack two registers
1 2
0 0
0 SUNPK FEAT_SME2
1 UUNPK FEAT_SME2
#SME2 multi-vec FRINT two registers
2 9
22 23
16 18
0x - Unallocated.
10 000 FRINTN FEAT_SME2
10 001 FRINTP FEAT_SME2
10 010 FRINTM FEAT_SME2
10 011 Unallocated.
10 100 FRINTA FEAT_SME2
10 101 Unallocated.
10 11x Unallocated.
11 - Unallocated.
#SME2 multi-vec int down convert four registers
3 7
22 22
6 6
5 5
0 0 0 SQCVT (four registers) FEAT_SME2
0 0 1 UQCVT (four registers) FEAT_SME2
0 1 0 SQCVTN FEAT_SME2
0 1 1 UQCVTN FEAT_SME2
1 - 1 Unallocated.
1 0 0 SQCVTU (four registers) FEAT_SME2
1 1 0 SQCVTUN FEAT_SME2
#SME2 multi-vec unpack four registers
1 2
0 0
0 SUNPK FEAT_SME2
1 UUNPK FEAT_SME2
#SME2 multi-vec ZIP four registers
1 2
1 1
0 ZIP (four registers) FEAT_SME2
1 UZP (four registers) FEAT_SME2
#SME2 multi-vec FRINT four registers
2 9
22 23
16 18
0x - Unallocated.
10 000 FRINTN FEAT_SME2
10 001 FRINTP FEAT_SME2
10 010 FRINTM FEAT_SME2
10 011 Unallocated.
10 100 FRINTA FEAT_SME2
10 101 Unallocated.
10 11x Unallocated.
11 - Unallocated.

#SME2 Multi-vector - Multiple Vectors SVE Destructive (Two registers)
3 8
10 10
5 9
0 0
0 0000x - SME2 multiple vectors int min/max two registers -
0 0100x - SME2 multiple vectors FP min/max two registers -
0 0x!=00x - Unallocated.
0 10xxx - SME2 multiple vectors shift two registers -
0 11xxx - Unallocated.
1 00000 0 SQDMULH (multiple vectors) - Encoding FEAT_SME2
1 00000 1 Unallocated.
1 !=00000 - Unallocated.
#SME2 multiple vectors int min/max two registers -
2 4
5 5
0 0
0 0 SMAX (multiple vectors) FEAT_SME2
0 1 UMAX (multiple vectors) FEAT_SME2
1 0 SMIN (multiple vectors) FEAT_SME2
1 1 UMIN (multiple vectors) FEAT_SME2
#SME2 multiple vectors FP min/max two registers -
2 4
5 5
0 0
0 0 FMAX (multiple vectors) FEAT_SME2
0 1 FMIN (multiple vectors) FEAT_SME2
1 0 FMAXNM (multiple vectors) FEAT_SME2
1 1 FMINNM (multiple vectors) FEAT_SME2
#SME2 multiple vectors shift two registers -
2 5
5 7
0 0
000 - Unallocated.
001 0 SRSHL (multiple vectors) FEAT_SME2
001 1 URSHL (multiple vectors) FEAT_SME2
01x - Unallocated.
1xx - Unallocated.
#SME2 Multi-vector - Multiple Vectors SVE Destructive (Four registers)
4 11
17 17
10 10
5 9
0 1
0 0 0000x 0x SME2 multiple vectors int min/max four registers -
0 0 0100x 0x SME2 multiple vectors FP min/max four registers -
0 0 0x00x 1x Unallocated.
0 0 0x!=00x - Unallocated.
0 0 10xxx 0x SME2 multiple vectors shift four registers -
0 0 10xxx 1x Unallocated.
0 0 11xxx - Unallocated.
0 1 00000 00 SQDMULH (multiple vectors) - Encoding FEAT_SME2
0 1 00000 !=00 Unallocated.
0 1 !=00000 - Unallocated.
1 - - - Unallocated.
#SME2 multiple vectors int min/max four registers -
2 4
5 5
0 0
0 0 SMAX (multiple vectors) FEAT_SME2
0 1 UMAX (multiple vectors) FEAT_SME2
1 0 SMIN (multiple vectors) FEAT_SME2
1 1 UMIN (multiple vectors) FEAT_SME2
#SME2 multiple vectors FP min/max four registers -
2 4
5 5
0 0
0 0 FMAX (multiple vectors) FEAT_SME2
0 1 FMIN (multiple vectors) FEAT_SME2
1 0 FMAXNM (multiple vectors) FEAT_SME2
1 1 FMINNM (multiple vectors) FEAT_SME2
#SME2 multiple vectors shift four registers -
2 5
5 7
0 0
000 - Unallocated.
001 0 SRSHL (multiple vectors) FEAT_SME2
001 1 URSHL (multiple vectors) FEAT_SME2
01x - Unallocated.
1xx - Unallocated.
#SME2 Multi-vector - Multiple and Single SVE Destructive (Two registers)
3 10
10 10
5 9
0 0
0 0000x - SME2 single-multi int min/max two registers -
0 0100x - SME2 single-multi FP min/max two registers -
0 0x!=00x - Unallocated.
0 10xxx - SME2 single-multi shift two registers -
0 11000 0 ADD (to vector) - Encoding FEAT_SME2
0 11000 1 Unallocated.
0 11!=000 - Unallocated.
1 00000 0 SQDMULH (multiple and single vector) - Encoding FEAT_SME2
1 00000 1 Unallocated.
1 !=00000 - Unallocated.
#SME2 single-multi int min/max two registers -
2 4
5 5
0 0
0 0 SMAX (multiple and single vector) FEAT_SME2
0 1 UMAX (multiple and single vector) FEAT_SME2
1 0 SMIN (multiple and single vector) FEAT_SME2
1 1 UMIN (multiple and single vector) FEAT_SME2
#SME2 single-multi FP min/max two registers -
2 4
5 5
0 0
0 0 FMAX (multiple and single vector) FEAT_SME2
0 1 FMIN (multiple and single vector) FEAT_SME2
1 0 FMAXNM (multiple and single vector) FEAT_SME2
1 1 FMINNM (multiple and single vector) FEAT_SME2
#SME2 single-multi shift two registers -
2 5
5 7
0 0
000 - Unallocated.
001 0 SRSHL (multiple and single vector) FEAT_SME2
001 1 URSHL (multiple and single vector) FEAT_SME2
01x - Unallocated.
1xx - Unallocated.
#SME2 Multi-vector - Multiple and Single SVE Destructive (Four registers)
3 12
10 10
5 9
0 1
0 0000x 0x SME2 single-multi int min/max four registers -
0 0100x 0x SME2 single-multi FP min/max four registers -
0 0x00x 1x Unallocated.
0 0x!=00x - Unallocated.
0 10xxx 0x SME2 single-multi shift four registers -
0 10xxx 1x Unallocated.
0 11000 00 ADD (to vector) - Encoding FEAT_SME2
0 11000 !=00 Unallocated.
0 11!=000 - Unallocated.
1 00000 00 SQDMULH (multiple and single vector) - Encoding FEAT_SME2
1 00000 !=00 Unallocated.
1 !=00000 - Unallocated.
#SME2 single-multi int min/max four registers -
2 4
5 5
0 0
0 0 SMAX (multiple and single vector) FEAT_SME2
0 1 UMAX (multiple and single vector) FEAT_SME2
1 0 SMIN (multiple and single vector) FEAT_SME2
1 1 UMIN (multiple and single vector) FEAT_SME2
#SME2 single-multi FP min/max four registers -
2 4
5 5
0 0
0 0 FMAX (multiple and single vector) FEAT_SME2
0 1 FMIN (multiple and single vector) FEAT_SME2
1 0 FMAXNM (multiple and single vector) FEAT_SME2
1 1 FMINNM (multiple and single vector) FEAT_SME2
#SME2 single-multi shift four registers -
2 5
5 7
0 0
000 - Unallocated.
001 0 SRSHL (multiple and single vector) FEAT_SME2
001 1 URSHL (multiple and single vector) FEAT_SME2
01x - Unallocated.
1xx - Unallocated.
#SME2 Multi-vector - Multiple and Single Array Vectors
4 25
22 22
20 20
10 12
1 4
0 0 010 xx0x SME2 single-multi long FMA two sources
0 0 011 - SME2 multiple and single vector long FMA one source
0 0 101 x1xx SME2 single-multi mixed dot product two registers
0 1 010 xx0x SME2 single-multi long FMA four sources
0 1 101 x1xx SME2 single-multi mixed dot product four registers
1 0 010 xx0x SME2 single-multi long MLA two sources
1 0 011 - SME2 multiple and single vector long MLA one source
1 0 101 x1xx SME2 single-multi two-way dot product two registers
1 1 010 xx0x SME2 single-multi long MLA four sources
1 1 101 x1xx SME2 single-multi two-way dot product four registers
- 0 000 xxx0 SME2 single-multi long long MLA two sources
- 0 001 - SME2 multiple and single vector long long FMA one source
- 0 100 - SME2 single-multi FP dot product two registers
- 0 101 x0xx SME2 single-multi four-way dot product two registers
- 0 110 0xxx SME2 single-multi ternary FP two registers
- 0 110 1xxx SME2 single-multi ternary int two registers
- 1 000 xxx0 SME2 single-multi long long MLA four sources
- 1 0x1 - Unallocated.
- 1 100 - SME2 single-multi FP dot product four registers
- 1 101 x0xx SME2 single-multi four-way dot product four registers
- 1 110 0xxx SME2 single-multi ternary FP four registers
- 1 110 1xxx SME2 single-multi ternary int four registers
- - 000 xxx1 Unallocated.
- - 010 xx1x Unallocated.
- - 111 - Unallocated.
#SME2 single-multi long FMA two sources
2 4
4 4
3 3
0 0 FMLAL (multiple and single vector) FEAT_SME2
0 1 FMLSL (multiple and single vector) FEAT_SME2
1 0 BFMLAL (multiple and single vector) FEAT_SME2
1 1 BFMLSL (multiple and single vector) FEAT_SME2
#SME2 multiple and single vector long FMA one source
2 4
4 4
3 3
0 0 FMLAL (multiple and single vector) FEAT_SME2
0 1 FMLSL (multiple and single vector) FEAT_SME2
1 0 BFMLAL (multiple and single vector) FEAT_SME2
1 1 BFMLSL (multiple and single vector) FEAT_SME2
#SME2 single-multi mixed dot product two registers
1 2
4 4
0 USDOT (multiple and single vector) FEAT_SME2
1 SUDOT (multiple and single vector) FEAT_SME2
#SME2 single-multi long FMA four sources
2 4
4 4
3 3
0 0 FMLAL (multiple and single vector) FEAT_SME2
0 1 FMLSL (multiple and single vector) FEAT_SME2
1 0 BFMLAL (multiple and single vector) FEAT_SME2
1 1 BFMLSL (multiple and single vector) FEAT_SME2
#SME2 single-multi mixed dot product four registers
1 2
4 4
0 USDOT (multiple and single vector) FEAT_SME2
1 SUDOT (multiple and single vector) FEAT_SME2
#SME2 single-multi long MLA two sources
2 4
4 4
3 3
0 0 SMLAL (multiple and single vector) FEAT_SME2
0 1 SMLSL (multiple and single vector) FEAT_SME2
1 0 UMLAL (multiple and single vector) FEAT_SME2
1 1 UMLSL (multiple and single vector) FEAT_SME2
#SME2 multiple and single vector long MLA one source
2 4
4 4
3 3
0 0 SMLAL (multiple and single vector) FEAT_SME2
0 1 SMLSL (multiple and single vector) FEAT_SME2
1 0 UMLAL (multiple and single vector) FEAT_SME2
1 1 UMLSL (multiple and single vector) FEAT_SME2
#SME2 single-multi two-way dot product two registers
1 2
4 4
0 SDOT (2-way, multiple and single vector) FEAT_SME2
1 UDOT (2-way, multiple and single vector) FEAT_SME2
#SME2 single-multi long MLA four sources
2 4
4 4
3 3
0 0 SMLAL (multiple and single vector) FEAT_SME2
0 1 SMLSL (multiple and single vector) FEAT_SME2
1 0 UMLAL (multiple and single vector) FEAT_SME2
1 1 UMLSL (multiple and single vector) FEAT_SME2
#SME2 single-multi two-way dot product four registers
1 2
4 4
0 SDOT (2-way, multiple and single vector) FEAT_SME2
1 UDOT (2-way, multiple and single vector) FEAT_SME2
#SME2 single-multi long long MLA two sources
4 8
22 22
4 4
3 3
2 2
- 0 0 0 SMLALL (multiple and single vector) FEAT_SME2
- 0 1 0 SMLSLL (multiple and single vector) FEAT_SME2
- 1 1 0 0 UMLALL (multiple and single vector) FEAT_SME2
- 1 1 0 UMLSLL (multiple and single vector) FEAT_SME2
0 - 1 1 Unallocated.
0 0 0 1 USMLALL (multiple and single vector) FEAT_SME2
0 1 0 1 SUMLALL (multiple and single vector) FEAT_SME2
1 - - 1 Unallocated.
#SME2 multiple and single vector long long FMA one source
4 8
22 22
4 4
3 3
2 2
- 0 0 0 SMLALL (multiple and single vector) FEAT_SME2
- 0 1 0 SMLSLL (multiple and single vector) FEAT_SME2
- 1 0 0 UMLALL (multiple and single vector) FEAT_SME2
- 1 1 0 UMLSLL (multiple and single vector) FEAT_SME2
0 0 0 1 USMLALL (multiple and single vector) FEAT_SME2
0 0 1 1 Unallocated.
0 1 - 1 Unallocated.
1 - - 1 Unallocated.
#SME2 single-multi FP dot product two registers
2 4
22 22
3 4
0 00 FDOT (multiple and single vector) FEAT_SME2
0 10 BFDOT (multiple and single vector) FEAT_SME2
1 01 Unallocated.
1 1x Unallocated.
#SME2 single-multi four-way dot product two registers
1 2
4 4
0 SDOT (4-way, multiple and single vector) FEAT_SME2
1 UDOT (4-way, multiple and single vector) FEAT_SME2
#SME2 single-multi ternary FP two registers
1 2
3 3
0 FMLA (multiple and single vector) FEAT_SME2
1 FMLS (multiple and single vector) FEAT_SME2
#SME2 single-multi ternary int two registers
1 2
3 3
0 ADD (array results, multiple and single vector) FEAT_SME2
1 SUB (array results, multiple and single vector) FEAT_SME2
#SME2 single-multi long long MLA four sources
4 8
22 22
4 4
3 3
2 2
- 0 0 0 SMLALL (multiple and single vector) FEAT_SME2
- 0 1 0 SMLSLL (multiple and single vector) FEAT_SME2
- 1 0 0 UMLALL (multiple and single vector) FEAT_SME2
- 1 1 0 UMLSLL (multiple and single vector) FEAT_SME2
0 - 1 1 Unallocated.
0 0 0 1 USMLALL (multiple and single vector) FEAT_SME2
0 1 0 1 SUMLALL (multiple and single vector) FEAT_SME2
1 - - 1 Unallocated.
#SME2 single-multi FP dot product four registers
2 4
22 22
3 4
0 00 FDOT (multiple and single vector) FEAT_SME2
0 10 BFDOT (multiple and single vector) FEAT_SME2
1 01 Unallocated.
1 1x Unallocated.
#SME2 single-multi four-way dot product four registers
1 2
4 4
0 SDOT (4-way, multiple and single vector) FEAT_SME2
1 UDOT (4-way, multiple and single vector) FEAT_SME2
#SME2 single-multi ternary FP four registers
1 2
3 3
0 FMLA (multiple and single vector) FEAT_SME2
1 FMLS (multiple and single vector) FEAT_SME2
#SME2 single-multi ternary int four registers
1 2
3 3
0 ADD (array results, multiple and single vector) FEAT_SME2
1 SUB (array results, multiple and single vector) FEAT_SME2
#SME2 Multi-vector - Multiple Array Vectors (Two registers)
4 21
22 22
17 20
10 12
1 5
0 - 010 0xx0x SME2 multiple vectors long FMA two sources -
0 - 101 001xx USDOT (multiple vectors) - Encoding FEAT_SME2
0 - 101 011xx Unallocated.
1 - 010 0xx0x SME2 multiple vectors long MLA two sources -
1 - 101 0x1xx SME2 multiple vectors two-way dot product two registers -
- 0000 111 00xxx SME2 multiple vectors binary FP two registers -
- 0000 111 01xxx SME2 multiple vectors binary int two registers -
- 0000 11x 1xxxx Unallocated.
- !=0000 110 1xxxx Unallocated.
- !=0000 111 - Unallocated.
- - 000 0xxx0 SME2 multiple vectors long long MLA two sources -
- - 000 0xxx1 Unallocated.
- - 010 0xx1x Unallocated.
- - 0x0 1xxxx Unallocated.
- - 0x1 - Unallocated.
- - 100 xx0xx SME2 multiple vectors FP dot product two registers -
- - 100 xx1xx Unallocated.
- - 101 0x0xx SME2 multiple vectors four-way dot product two registers -
- - 101 1xxxx Unallocated.
- - 110 00xxx SME2 multiple vectors ternary FP two registers -
- - 110 01xxx SME2 multiple vectors ternary int two registers -
#SME2 multiple vectors long FMA two sources -
2 4
4 4
3 3
0 0 FMLAL (multiple vectors) FEAT_SME2
0 1 FMLSL (multiple vectors) FEAT_SME2
1 0 BFMLAL (multiple vectors) FEAT_SME2
1 1 BFMLSL (multiple vectors) FEAT_SME2
#SME2 multiple vectors long MLA two sources -
2 4
4 4
3 3
0 0 SMLAL (multiple vectors) FEAT_SME2
0 1 SMLSL (multiple vectors) FEAT_SME2
1 0 UMLAL (multiple vectors) FEAT_SME2
1 1 UMLSL (multiple vectors) FEAT_SME2
#SME2 multiple vectors two-way dot product two registers -
1 2
4 4
0 SDOT (2-way, multiple vectors) FEAT_SME2
1 UDOT (2-way, multiple vectors) FEAT_SME2
#SME2 multiple vectors binary FP two registers -
1 2
3 3
0 FADD FEAT_SME2
1 FSUB FEAT_SME2
#SME2 multiple vectors binary int two registers -
1 2
3 3
0 ADD (array accumulators) FEAT_SME2
1 SUB (array accumulators) FEAT_SME2
#SME2 multiple vectors long long MLA two sources -
4 8
22 22
4 4
3 3
2 2
- 0 0 0 SMLALL (multiple vectors) FEAT_SME2
- 0 1 0 SMLSLL (multiple vectors) FEAT_SME2
- 1 0 0 UMLALL (multiple vectors) FEAT_SME2
- 1 1 0 UMLSLL (multiple vectors) FEAT_SME2
0 0 0 1 USMLALL (multiple vectors) FEAT_SME2
0 0 1 1 Unallocated.
0 1 - 1 Unallocated.
1 - - 1 Unallocated.
#SME2 multiple vectors FP dot product two registers -
2 4
22 22
4 5
0 00 FDOT (multiple vectors) FEAT_SME2
0 01 BFDOT (multiple vectors) FEAT_SME2
1 01 Unallocated.
1 1x Unallocated.
#SME2 multiple vectors four-way dot product two registers -
1 2
4 4
0 SDOT (4-way, multiple vectors) FEAT_SME2
1 UDOT (4-way, multiple vectors) FEAT_SME2
#SME2 multiple vectors ternary FP two registers -
1 2
3 3
0 FMLA (multiple vectors) FEAT_SME2
1 FMLS (multiple vectors) FEAT_SME2
#SME2 multiple vectors ternary int two registers -
1 2
3 3
0 ADD (array results, multiple vectors) FEAT_SME2
1 SUB (array results, multiple vectors) FEAT_SME2
#SME2 Multi-vector - Multiple Array Vectors (Four registers)
6 25
22 22
18 20
17 17
10 12
5 6
1 4
0 - 0 010 00 xx0x SME2 multiple vectors long FMA four sources -
0 - 0 101 00 01xx USDOT (multiple vectors) - Encoding
0 - 0 101 00 11xx Unallocated.
1 - 0 010 00 xx0x SME2 multiple vectors long MLA four sources -
1 - 0 101 00 x1xx SME2 multiple vectors two-way dot product four registers -
- 000 0 111 00 0xxx SME2 multiple vectors binary FP four registers -
- 000 0 111 00 1xxx SME2 multiple vectors binary int four registers -
- 000 0 11x 01 - Unallocated.
- 000 0 1xx 1x - Unallocated.
- !=000 0 10x 1x - Unallocated.
- !=000 0 110 01 - Unallocated.
- !=000 0 110 1x - Unallocated.
- !=000 0 111 - - Unallocated.
- - 0 000 00 xxx0 SME2 multiple vectors long long MLA four sources
- - 0 000 00 xxx1 Unallocated. 
- - 0 010 00 xx1x Unallocated.
- - 0 0x0 !=00 - Unallocated.
- - 0 0x1 - - Unallocated.
- - 0 100 0x x0xx SME2 multiple vectors FP dot product four registers
- - 0 100 0x x1xx Unallocated.
- - 0 101 00 x0xx SME2 multiple vectors four-way dot product four registers
- - 0 101 01 - Unallocated.
- - 0 110 00 0xxx SME2 multiple vectors ternary FP four registers
- - 0 110 00 1xxx SME2 multiple vectors ternary int four registers
- - 1 - - - Unallocated.
#SME2 multiple vectors long FMA four sources -
2 4
4 4
3 3
0 0 FMLAL (multiple vectors) FEAT_SME2
0 1 FMLSL (multiple vectors) FEAT_SME2
1 0 BFMLAL (multiple vectors) FEAT_SME2
1 1 BFMLSL (multiple vectors) FEAT_SME2
#SME2 multiple vectors long MLA four sources -
2 4
4 4
3 3
0 0 SMLAL (multiple vectors) FEAT_SME2
0 1 SMLSL (multiple vectors) FEAT_SME2
1 0 UMLAL (multiple vectors) FEAT_SME2
1 1 UMLSL (multiple vectors) FEAT_SME2
#SME2 multiple vectors two-way dot product four registers -
1 2
4 4
0 SDOT (2-way, multiple vectors) FEAT_SME2
1 UDOT (2-way, multiple vectors) FEAT_SME2
#SME2 multiple vectors binary FP four registers -
1 2
3 3
0 FADD FEAT_SME2
1 FSUB FEAT_SME2
#SME2 multiple vectors binary int four registers -
1 2
3 3
0 ADD (array accumulators) FEAT_SME2
1 SUB (array accumulators) FEAT_SME2
#SME2 multiple vectors long long MLA four sources
4 8
22 22
4 4
3 3
2 2
- 0 0 0 SMLALL (multiple vectors) FEAT_SME2
- 0 1 0 SMLSLL (multiple vectors) FEAT_SME2
- 1 0 0 UMLALL (multiple vectors) FEAT_SME2
- 1 1 0 UMLSLL (multiple vectors) FEAT_SME2
0 0 0 1 USMLALL (multiple vectors) FEAT_SME2
0 0 1 1 Unallocated.
0 1 - 1 Unallocated.
1 - - 1 Unallocated.
#SME2 multiple vectors FP dot product four registers
2 4
22 22
4 5
0 00 FDOT (multiple vectors) FEAT_SME2
0 01 BFDOT (multiple vectors) FEAT_SME2
1 01 Unallocated.
1 1x Unallocated.
#SME2 multiple vectors four-way dot product four registers
1 2
4 4
0 SDOT (4-way, multiple vectors) FEAT_SME2
1 UDOT (4-way, multiple vectors) FEAT_SME2
#SME2 multiple vectors ternary FP four registers
1 2
3 3
0 FMLA (multiple vectors) FEAT_SME2
1 FMLS (multiple vectors) FEAT_SME2
#SME2 multiple vectors ternary int four registers
1 2
3 3
0 ADD (array results, multiple vectors) FEAT_SME2
1 SUB (array results, multiple vectors) FEAT_SME2
#SME Memory
5 15
21 24
16 20
15 15
10 14
2 4
0xx0 - - - 0xx SME load array vector (elements) -
0xx1 - - - 0xx SME store array vector (elements) -
0xxx - - - 1xx Unallocated.
100x 00000 0 xx000 0xx SME save and restore array -
100x 00000 0 xx000 1xx Unallocated.
100x 00000 0 xx!=000 - Unallocated.
100x !=00000 0 - - Unallocated.
100x - 1 00000 000 SME2 lookup table load/store -
100x - 1 00000 !=000 Unallocated.
100x - 1 !=00000 - Unallocated.
101x - - - - Unallocated.
110x - - - - Unallocated.
1110 - - - 0xx LD1Q FEAT_SME
1111 - - - 0xx ST1Q FEAT_SME
111x - - - 1xx Unallocated.
#SME load array vector (elements) -
1 4
22 23
00 LD1B (scalar plus scalar, tile slice) FEAT_SME
01 LD1H (scalar plus scalar, tile slice) FEAT_SME
10 LD1W (scalar plus scalar, tile slice) FEAT_SME
11 LD1D (scalar plus scalar, tile slice) FEAT_SME
#SME store array vector (elements) -
1 4
22 23
00 ST1B (scalar plus scalar, tile slice) FEAT_SME
01 ST1H (scalar plus scalar, tile slice) FEAT_SME
10 ST1W (scalar plus scalar, tile slice) FEAT_SME
11 ST1D (scalar plus scalar, tile slice) FEAT_SME
#SME save and restore array -
1 2
21 21
0 LDR (vector) FEAT_SME
1 STR (vector) FEAT_SME
#SME2 lookup table load/store -
2 9
16 21
0 1
x0xxxx - Unallocated.
x10xxx - Unallocated.
x110xx - Unallocated.
x1110x - Unallocated.
x11110 - Unallocated.
x11111 01 Unallocated.
x11111 1x Unallocated.
011111 00 LDR (ZT0) FEAT_SME2
111111 00 STR (ZT0) FEAT_SME2
#SVE encodings
3 113
29 31
10 24
4 4
000 0xx0xxxxxx1xxxx - SVE Integer Multiply-Add - Predicated -
000 0xx0xxxxx000xxx - SVE Integer Binary Arithmetic - Predicated -
000 0xx0xxxxx001xxx - SVE Integer Reduction -
000 0xx0xxxxx100xxx - SVE Bitwise Shift - Predicated -
000 0xx0xxxxx101xxx - SVE Integer Unary Arithmetic - Predicated -
000 0xx1xxxxx000xxx - SVE integer add/subtract vectors (unpredicated) -
000 0xx1xxxxx001xxx - SVE Bitwise Logical - Unpredicated -
000 0xx1xxxxx0100xx - SVE Index Generation -
000 0xx1xxxxx0101xx - SVE Stack Allocation -
000 0xx1xxxxx011xxx - SVE2 Integer Multiply - Unpredicated -
000 0xx1xxxxx100xxx - SVE Bitwise Shift - Unpredicated -
000 0xx1xxxxx1010xx - SVE address generation -
000 0xx1xxxxx1011xx - SVE Integer Misc - Unpredicated -
000 0xx1xxxxx11xxxx - SVE Element Count -
000 1xx00xxxxxxxxxx - SVE Bitwise Immediate -
000 1xx01xxxxxxxxxx - SVE Integer Wide Immediate - Predicated -
000 1xx1xxxxx001000 - DUP (indexed) -
000 1xx1xxxxx001001 - Unallocated.
000 1xx1xxxxx00101x - SVE table lookup (three sources) -
000 1xx1xxxxx0011x1 - Unallocated.
000 1xx1xxxxx001100 - TBL - Encoding -
000 1xx1xxxxx001110 - SVE Permute Vector - Unpredicated -
000 1xx1xxxxx010xxx - SVE Permute Predicate -
000 1xx1xxxxx011xxx - SVE permute vector elements -
000 1xx1xxxxx10xxxx - SVE Permute Vector - Predicated -
000 1xx1xxxxx11xxxx - SEL (vectors) -
000 10x1xxxxx000xxx - SVE Permute Vector - Extract -
000 11x1xxxxx000xxx - SVE Permute Vector - Segments -
001 0xx0xxxxxxxxxxx - SVE Integer Compare - Vectors -
001 0xx1xxxxxxxxxxx - SVE integer compare with unsigned immediate -
001 1xx0xxxxxx0xxxx - SVE integer compare with signed immediate -
001 1xx00xxxx01xxxx - SVE predicate logical operations -
001 1xx00xxxx11xxxx - SVE Propagate Break -
001 1xx01xxxx01xxxx - SVE Partition Break -
001 1xx01xxxx11xxxx - SVE Predicate Misc -
001 1xx1xxxxx00xxxx - SVE Integer Compare - Scalars -
001 1xx1xxxxx01xxxx 0 SVE broadcast predicate element -
001 1xx1xxxxx01xxxx 1 SVE Scalar Integer Compare - Predicate-as-counter -
001 1xx1xxxxx11xxxx - SVE Integer Wide Immediate - Unpredicated -
001 1xx100xxx10xxxx - SVE Predicate Count -
001 1xx101xxx1000xx - SVE Inc/Dec by Predicate Count -
001 1xx101xxx1001xx - SVE Write FFR -
001 1xx101xxx101xxx - Unallocated.
001 1xx11xxxx10xxxx - Unallocated.
010 0xx0xxxxx0xxxxx - SVE Integer Multiply-Add - Unpredicated -
010 0xx0xxxxx10xxxx - SVE2 Integer - Predicated -
010 0xx0xxxxx11000x - SVE integer clamp -
010 0xx0xxxxx1101xx - Unallocated.
010 0xx0xxxxx111xxx - Unallocated.
010 0xx1xxxxxxxxxxx - SVE Multiply - Indexed -
010 0x10xxxxx11001x - Unallocated.
010 0000xxxxx11001x - SVE two-way dot product -
010 0100xxxxx11001x - SVE two-way dot product (indexed) -
010 1xx0xxxxx0xxxxx - SVE2 Widening Integer Arithmetic -
010 1xx0xxxxx10xxxx - SVE Misc -
010 1xx0xxxxx11xxxx - SVE2 Accumulate -
010 1xx1xxxxx0xxxxx - SVE2 Narrowing -
010 1xx1xxxxx100xxx - SVE2 character match -
010 1xx1xxxxx101xxx - SVE2 Histogram Computation - Segment -
010 1xx1xxxxx110xxx - HISTCNT -
010 1xx1xxxxx111xxx - SVE2 Crypto Extensions -
011 0xx0xxxxx0xxxxx - FCMLA (vectors) -
011 0xx00000x100xxx - FCADD -
011 0xx00000x101xxx - Unallocated.
011 0xx00000x11xxxx - Unallocated.
011 0xx00001x1xxxxx - Unallocated.
011 0xx0001xx1xxxxx - Unallocated.
011 0xx0010xx100xxx - Unallocated.
011 0xx0010xx101xxx - SVE floating-point convert precision odd elements -
011 0xx0010xx11xxxx - Unallocated.
011 0xx001100100xxx - Unallocated.
011 0xx00110011xxxx - Unallocated.
011 0xx0011011xxxxx - Unallocated.
011 0xx00111x1xxxxx - Unallocated.
011 0xx010xxx100xxx - SVE2 floating-point pairwise operations -
011 0xx010xxx101xxx - Unallocated.
011 0xx010xxx11xxxx - Unallocated.
011 0xx011xxx1xxxxx - Unallocated.
011 0xx1xxxxx0000xx - SVE floating-point multiply-add (indexed) -
011 0xx1xxxxx0001xx - SVE floating-point complex multiply-add (indexed) -
011 0xx1xxxxx0010x0 - SVE floating-point multiply (indexed) -
011 0xx1xxxxx001001 - FCLAMP FEAT_SME2
011 0xx1xxxxx001011 - Unallocated.
011 0xx1xxxxx0011xx - Unallocated.
011 0xx1xxxxx01x0xx - SVE Floating Point Widening Multiply-Add - Indexed -
011 0xx1xxxxx01x1xx - Unallocated.
011 0xx1xxxxx10x00x - SVE Floating Point Widening Multiply-Add -
011 0xx1xxxxx10x01x - Unallocated.
011 0xx1xxxxx10x1xx - Unallocated.
011 0xx1xxxxx110xxx - Unallocated.
011 0xx1xxxxx111000 - Unallocated.
011 0xx1xxxxx111001 - SVE floating point matrix multiply accumulate -
011 0xx1xxxxx11101x - Unallocated.
011 0xx1xxxxx1111xx - Unallocated.
011 1xx0xxxxxx1xxxx - SVE floating-point compare vectors -
011 1xx0xxxxx000xxx - SVE floating-point arithmetic (unpredicated) -
011 1xx0xxxxx100xxx - SVE Floating Point Arithmetic - Predicated -
011 1xx0xxxxx101xxx - SVE Floating Point Unary Operations - Predicated -
011 1xx000xxx001xxx - SVE floating-point recursive reduction -
011 1xx001xxx0010xx - Unallocated.
011 1xx001xxx0011xx - SVE Floating Point Unary Operations - Unpredicated -
011 1xx010xxx001xxx - SVE Floating Point Compare - with Zero -
011 1xx011xxx001xxx - SVE Floating Point Accumulating Reduction -
011 1xx1xxxxxxxxxxx - SVE Floating Point Multiply-Add -
100 - - SVE Memory - 32-bit Gather and Unsized Contiguous -
101 - - SVE Memory - Contiguous Load -
110 - - SVE Memory - 64-bit Gather -
111 xxxxxxxxx0x0xxx - SVE Memory - Contiguous Store and Unsized Contiguous -
111 xxxxxxxxx001xxx - SVE Memory - Non-temporal and Quadword Scatter Store -
111 xxxxxxxxx011xxx - SVE Memory - Non-temporal and Multi-register Contiguous Store -
111 xxxxxxxxx1x0xxx - SVE Memory - Scatter with Optional Sign Extend -
111 xxxxxxxxx101xxx - SVE Memory - Scatter -
111 xxxxxxxxx111xxx - SVE Memory - Contiguous Store with Immediate Offset -

#SVE Integer Multiply-Add - Predicated -
1 2
15 15
0 SVE integer multiply-accumulate writing addend (predicated)
1 SVE integer multiply-add writing multiplicand (predicated)
#SVE integer multiply-accumulate writing addend (predicated)
1 2
13 13
0 MLA (vectors)
1 MLS (vectors)
#SVE integer multiply-add writing multiplicand (predicated)
1 2
13 13
0 MAD
1 MSB
#SVE Integer Binary Arithmetic - Predicated -
1 5
18 20
00x SVE integer add/subtract vectors (predicated)
01x SVE integer min/max/difference (predicated)
100 SVE integer multiply vectors (predicated)
101 SVE integer divide vectors (predicated)
11x SVE bitwise logical operations (predicated)
#SVE integer add/subtract vectors (predicated)
1 5
16 18
000 ADD (vectors, predicated)
001 SUB (vectors, predicated)
010 Unallocated.
011 SUBR (vectors)
1xx Unallocated.
#SVE integer min/max/difference (predicated)
2 7
17 18
16 16
00 0 SMAX (vectors)
00 1 UMAX (vectors)
01 0 SMIN (vectors)
01 1 UMIN (vectors)
10 0 SABD
10 1 UABD
11 - Unallocated.
#SVE integer multiply vectors (predicated)
2 4
17 17
16 16
0 0 MUL (vectors, predicated)
0 1 Unallocated.
1 0 SMULH (predicated)
1 1 UMULH (predicated)
#SVE integer divide vectors (predicated)
2 4
17 17
16 16
0 0 SDIV
0 1 UDIV
1 0 SDIVR
1 1 UDIVR
#SVE bitwise logical operations (predicated)
1 5
16 18
000 ORR (vectors, predicated)
001 EOR (vectors, predicated)
010 AND (vectors, predicated)
011 BIC (vectors, predicated)
1xx Unallocated.
#SVE Integer Reduction -
1 6
18 20
000 SVE integer add reduction (predicated)
010 SVE integer min/max reduction (predicated)
0x1 Unallocated.
10x SVE constructive prefix (predicated)
110 SVE bitwise logical reduction (predicated)
111 Unallocated.
#SVE integer add reduction (predicated)
2 3
17 17
16 16
0 0 SADDV
0 1 UADDV
1 - Unallocated.
#SVE integer min/max reduction (predicated)
2 4
17 17
16 16
0 0 SMAXV
0 1 UMAXV
1 0 SMINV
1 1 UMINV
#SVE constructive prefix (predicated)
1 3
17 18
00 MOVPRFX (predicated)
01 Unallocated.
1x Unallocated.
#SVE bitwise logical reduction (predicated)
1 4
16 17
00 ORV
01 EORV
10 ANDV
11 Unallocated.
#SVE Bitwise Shift - Predicated -
1 3
19 20
0x SVE bitwise shift by immediate (predicated)
10 SVE bitwise shift by vector (predicated)
11 SVE bitwise shift by wide elements (predicated)
#SVE bitwise shift by immediate (predicated)
3 13
18 19
17 17
16 16
00 0 0 ASR (immediate, predicated)
00 0 1 LSR (immediate, predicated)
00 1 0 Unallocated.
00 1 1 LSL (immediate, predicated)
01 0 0 ASRD
01 0 1 Unallocated.
01 1 0 SQSHL (immediate)
01 1 1 UQSHL (immediate)
10 - - Unallocated.
11 0 0 SRSHR
11 0 1 URSHR
11 1 0 Unallocated.
11 1 1 SQSHLU
#SVE bitwise shift by vector (predicated)
3 7
18 18
17 17
16 16
- 1 0 Unallocated.
0 0 0 ASR (vectors)
0 0 1 LSR (vectors)
0 1 1 LSL (vectors)
1 0 0 ASRR
1 0 1 LSRR
1 1 1 LSLR
#SVE bitwise shift by wide elements (predicated)
3 5
18 18
17 17
16 16
0 0 0 ASR (wide elements, predicated)
0 0 1 LSR (wide elements, predicated)
0 1 0 Unallocated.
0 1 1 LSL (wide elements, predicated)
1 - - Unallocated.
#SVE Integer Unary Arithmetic - Predicated -
1 3
19 20
0x Unallocated.
10 SVE integer unary operations (predicated)
11 SVE bitwise unary operations (predicated)
#SVE integer unary operations (predicated)
1 8
16 18
000 SXTB, SXTH, SXTW - Encoding
001 UXTB, UXTH, UXTW - Encoding
010 SXTB, SXTH, SXTW - Encoding
011 UXTB, UXTH, UXTW - Encoding
100 SXTB, SXTH, SXTW - Encoding
101 UXTB, UXTH, UXTW - Encoding
110 ABS
111 NEG
#SVE bitwise unary operations (predicated)
1 8
16 18
000 CLS
001 CLZ
010 CNT
011 CNOT
100 FABS
101 FNEG
110 NOT (vector)
111 Unallocated.
#SVE integer add/subtract vectors (unpredicated) -
1 7
10 12
000 ADD (vectors, unpredicated)
001 SUB (vectors, unpredicated)
01x Unallocated.
100 SQADD (vectors, unpredicated)
101 UQADD (vectors, unpredicated)
110 SQSUB (vectors, unpredicated)
111 UQSUB (vectors, unpredicated)
#SVE Bitwise Logical - Unpredicated -
1 4
10 12
0xx Unallocated.
100 SVE bitwise logical operations (unpredicated)
101 XAR
11x SVE2 bitwise ternary operations
#SVE bitwise logical operations (unpredicated)
1 4
22 23
00 AND (vectors, unpredicated)
01 ORR (vectors, unpredicated)
10 EOR (vectors, unpredicated)
11 BIC (vectors, unpredicated)
#SVE2 bitwise ternary operations
2 7
22 23
10 10
00 0 EOR3
00 1 BSL
01 0 BCAX
01 1 BSL1N
1x 0 Unallocated.
10 1 BSL2N
11 1 NBSL
#SVE Index Generation -
1 4
10 11
00 INDEX (immediates)
01 INDEX (scalar, immediate)
10 INDEX (immediate, scalar)
11 INDEX (scalars)
#SVE Stack Allocation -
2 4
23 23
11 11
0 0 SVE stack frame adjustment
0 1 Streaming SVE stack frame adjustment
1 0 SVE stack frame size
1 1 Streaming SVE stack frame size
#SVE stack frame adjustment
1 2
22 22
0 ADDVL
1 ADDPL
#Streaming SVE stack frame adjustment
1 2
22 22
0 ADDSVL FEAT_SME
1 ADDSPL FEAT_SME
#SVE stack frame size
2 7
22 22
16 20
0 0xxxx Unallocated.
0 10xxx Unallocated.
0 110xx Unallocated.
0 1110x Unallocated.
0 11110 Unallocated.
0 11111 RDVL
1 - Unallocated.
#Streaming SVE stack frame size
2 7
22 22
16 20
0 0xxxx Unallocated.
0 10xxx Unallocated.
0 110xx Unallocated.
0 1110x Unallocated.
0 11110 Unallocated.
0 11111 RDSVL FEAT_SME
1 - Unallocated.
#SVE2 Integer Multiply - Unpredicated -
1 3
11 12
0x SVE2 integer multiply vectors (unpredicated)
10 SVE2 signed saturating doubling multiply high (unpredicated)
11 Unallocated.
#SVE2 integer multiply vectors (unpredicated)
2 6
22 23
10 11
- 00 MUL (vectors, unpredicated)
- 10 SMULH (unpredicated)
- 11 UMULH (unpredicated)
00 01 PMUL
01 01 Unallocated.
1x 01 Unallocated.
#SVE2 signed saturating doubling multiply high (unpredicated)
1 2
10 10
0 SQDMULH (vectors)
1 SQRDMULH (vectors)
#SVE Bitwise Shift - Unpredicated -
1 2
12 12
0 SVE bitwise shift by wide elements (unpredicated)
1 SVE bitwise shift by immediate (unpredicated)
#SVE bitwise shift by wide elements (unpredicated)
1 4
10 11
00 ASR (wide elements, unpredicated)
01 LSR (wide elements, unpredicated)
10 Unallocated.
11 LSL (wide elements, unpredicated)
#SVE bitwise shift by immediate (unpredicated)
1 4
10 11
00 ASR (immediate, unpredicated)
01 LSR (immediate, unpredicated)
10 Unallocated.
11 LSL (immediate, unpredicated)
#SVE address generation -
1 3
22 23
00 ADR - Encoding
01 ADR - Encoding
1x ADR - Encoding
#SVE Integer Misc - Unpredicated -
1 3
10 11
0x SVE floating-point trig select coefficient
10 SVE floating-point exponential accelerator
11 SVE constructive prefix (unpredicated)
#SVE floating-point trig select coefficient
1 2
10 10
0 FTSSEL
1 Unallocated.
#SVE floating-point exponential accelerator
1 6
16 20
00000 FEXPA
00001 Unallocated.
0001x Unallocated.
001xx Unallocated.
01xxx Unallocated.
1xxxx Unallocated.
#SVE constructive prefix (unpredicated)
2 8
22 23
16 20
00 00000 MOVPRFX (unpredicated)
00 00001 Unallocated.
00 0001x Unallocated.
00 001xx Unallocated.
00 01xxx Unallocated.
00 1xxxx Unallocated.
01 - Unallocated.
1x - Unallocated.
#SVE Element Count -
2 8
20 20
11 13
0 00x SVE saturating inc/dec vector by element count
0 100 SVE element count
0 101 Unallocated.
1 000 SVE inc/dec vector by element count
1 100 SVE inc/dec register by element count
1 x01 Unallocated.
- 01x Unallocated.
- 11x SVE saturating inc/dec register by element count
#SVE saturating inc/dec vector by element count
3 13
22 23
11 11
10 10
00 - - Unallocated.
01 0 0 SQINCH (vector)
01 0 1 UQINCH (vector)
01 1 0 SQDECH (vector)
01 1 1 UQDECH (vector)
10 0 0 SQINCW (vector)
10 0 1 UQINCW (vector)
10 1 0 SQDECW (vector)
10 1 1 UQDECW (vector)
11 0 0 SQINCD (vector)
11 0 1 UQINCD (vector)
11 1 0 SQDECD (vector)
11 1 1 UQDECD (vector)
#SVE element count
2 5
22 23
10 10
- 1 Unallocated.
00 0 CNTB, CNTD, CNTH, CNTW - Encoding
01 0 CNTB, CNTD, CNTH, CNTW - Encoding
10 0 CNTB, CNTD, CNTH, CNTW - Encoding
11 0 CNTB, CNTD, CNTH, CNTW - Encoding
#SVE inc/dec vector by element count
2 7
22 23
10 10
00 - Unallocated.
01 0 INCD, INCH, INCW (vector) - Encoding
01 1 DECD, DECH, DECW (vector) - Encoding
10 0 INCD, INCH, INCW (vector) - Encoding
10 1 DECD, DECH, DECW (vector) - Encoding
11 0 INCD, INCH, INCW (vector) - Encoding
11 1 DECD, DECH, DECW (vector) - Encoding
#SVE inc/dec register by element count
2 8
22 23
10 10
00 0 INCB, INCD, INCH, INCW (scalar) - Encoding
00 1 DECB, DECD, DECH, DECW (scalar) - Encoding
01 0 INCB, INCD, INCH, INCW (scalar) - Encoding
01 1 DECB, DECD, DECH, DECW (scalar) - Encoding
10 0 INCB, INCD, INCH, INCW (scalar) - Encoding
10 1 DECB, DECD, DECH, DECW (scalar) - Encoding
11 0 INCB, INCD, INCH, INCW (scalar) - Encoding
11 1 DECB, DECD, DECH, DECW (scalar) - Encoding
#SVE saturating inc/dec register by element count
4 32
22 23
20 20
11 11
10 10
00 0 0 0 SQINCB - Encoding
00 0 0 1 UQINCB - Encoding
00 0 1 0 SQDECB - Encoding
00 0 1 1 UQDECB - Encoding
00 1 0 0 SQINCB - Encoding
00 1 0 1 UQINCB - Encoding
00 1 1 0 SQDECB - Encoding
00 1 1 1 UQDECB - Encoding
01 0 0 0 SQINCH (scalar) - Encoding
01 0 0 1 UQINCH (scalar) - Encoding
01 0 1 0 SQDECH (scalar) - Encoding
01 0 1 1 UQDECH (scalar) - Encoding
01 1 0 0 SQINCH (scalar) - Encoding
01 1 0 1 UQINCH (scalar) - Encoding
01 1 1 0 SQDECH (scalar) - Encoding
01 1 1 1 UQDECH (scalar) - Encoding
10 0 0 0 SQINCW (scalar) - Encoding
10 0 0 1 UQINCW (scalar) - Encoding
10 0 1 0 SQDECW (scalar) - Encoding
10 0 1 1 UQDECW (scalar) - Encoding
10 1 0 0 SQINCW (scalar) - Encoding
10 1 0 1 UQINCW (scalar) - Encoding
10 1 1 0 SQDECW (scalar) - Encoding
10 1 1 1 UQDECW (scalar) - Encoding
11 0 0 0 SQINCD (scalar) - Encoding
11 0 0 1 UQINCD (scalar) - Encoding
11 0 1 0 SQDECD (scalar) - Encoding
11 0 1 1 UQDECD (scalar) - Encoding
11 1 0 0 SQINCD (scalar) - Encoding
11 1 0 1 UQINCD (scalar) - Encoding
11 1 1 0 SQDECD (scalar) - Encoding
11 1 1 1 UQDECD (scalar) - Encoding
#SVE Bitwise Immediate -
2 3
22 23
18 19
11 00 DUPM
!=11 00 SVE bitwise logical with immediate (unpredicated)
- !=00 Unallocated.
#SVE bitwise logical with immediate (unpredicated)
1 3
22 23
00 ORR (immediate)
01 EOR (immediate)
10 AND (immediate)
#SVE Integer Wide Immediate - Predicated -
1 4
13 15
0xx SVE copy integer immediate (predicated)
10x Unallocated.
110 FCPY
111 Unallocated.
#SVE copy integer immediate (predicated)
1 2
14 14
0 CPY (immediate, zeroing)
1 CPY (immediate, merging)
#SVE table lookup (three sources) -
1 2
10 10
0 TBL
1 TBX
#SVE Permute Vector - Unpredicated -
2 11
19 20
16 18
00 000 DUP (scalar)
00 100 INSR (scalar)
00 x10 Unallocated.
00 xx1 Unallocated.
01 - Unallocated.
10 0xx SVE unpack vector elements
10 100 INSR (SIMD&FP scalar)
10 110 Unallocated.
10 1x1 Unallocated.
11 000 REV (vector)
11 !=000 Unallocated.
#SVE unpack vector elements
2 4
17 17
16 16
0 0 SUNPKHI, SUNPKLO - Encoding
0 1 SUNPKHI, SUNPKLO - Encoding
1 0 UUNPKHI, UUNPKLO - Encoding
1 1 UUNPKHI, UUNPKLO - Encoding
#SVE Permute Predicate -
4 15
22 23
16 20
9 12
4 4
00 1000x 0000 0 SVE unpack predicate elements
01 1000x 0000 0 Unallocated.
10 1000x 0000 0 Unallocated.
11 1000x 0000 0 Unallocated.
- 0xxxx xxx0 0 SVE permute predicate elements
- 0xxxx xxx1 0 Unallocated.
- 10100 0000 0 REV (predicate)
- 10101 0000 0 Unallocated.
- 10x0x 1000 0 Unallocated.
- 10x0x x100 0 Unallocated.
- 10x0x xx10 0 Unallocated.
- 10x0x xxx1 0 Unallocated.
- 10x1x - 0 Unallocated.
- 11xxx - 0 Unallocated.
- - - 1 Unallocated.
#SVE unpack predicate elements
1 2
16 16
0 PUNPKHI, PUNPKLO - Encoding
1 PUNPKHI, PUNPKLO - Encoding
#SVE permute predicate elements
2 7
11 12
10 10
00 0 ZIP1, ZIP2 (predicates) - Encoding
00 1 ZIP1, ZIP2 (predicates) - Encoding
01 0 UZP1, UZP2 (predicates) - Encoding
01 1 UZP1, UZP2 (predicates) - Encoding
10 0 TRN1, TRN2 (predicates) - Encoding
10 1 TRN1, TRN2 (predicates) - Encoding
11 - Unallocated.
#SVE permute vector elements -
4 20
20 20
17 19
16 16
13 13
0 000 0 0 CPY (SIMD&FP scalar)
0 000 1 0 COMPACT
0 000 - 1 SVE extract element to general register
0 001 - 0 SVE extract element to SIMD&FP scalar register
0 01x - 0 SVE reverse within elements
0 01x - 1 Unallocated.
0 100 0 1 CPY (scalar)
0 100 1 1 Unallocated.
0 100 - 0 SVE conditionally broadcast element to vector
0 101 - 0 SVE conditionally extract element to SIMD&FP scalar
0 110 0 0 SPLICE - Encoding
0 110 1 0 SPLICE - Encoding
0 110 - 1 Unallocated.
0 111 0 0 SVE reverse doublewords
0 111 0 1 Unallocated.
0 111 1 - Unallocated.
0 x01 - 1 Unallocated.
1 000 - 0 Unallocated.
1 000 - 1 SVE conditionally extract element to general register
1 !=000 - - Unallocated.
#SVE extract element to general register
1 2
16 16
0 LASTA (scalar)
1 LASTB (scalar)
#SVE extract element to SIMD&FP scalar register
1 2
16 16
0 LASTA (SIMD&FP scalar)
1 LASTB (SIMD&FP scalar)
#SVE reverse within elements
1 4
16 17
00 REVB, REVH, REVW - Encoding
01 REVB, REVH, REVW - Encoding
10 REVB, REVH, REVW - Encoding
11 RBIT
#SVE conditionally broadcast element to vector
1 2
16 16
0 CLASTA (vectors)
1 CLASTB (vectors)
#SVE conditionally extract element to SIMD&FP scalar
1 2
16 16
0 CLASTA (SIMD&FP scalar)
1 CLASTB (SIMD&FP scalar)
#SVE reverse doublewords
1 3
22 23
00 REVD FEAT_SME
01 Unallocated.
1x Unallocated.
#SVE conditionally extract element to general register
1 2
16 16
0 CLASTA (scalar)
1 CLASTB (scalar)
#SVE Permute Vector - Predicated -
4 20
20 20
17 19
16 16
13 13
0 000 0 0 CPY (SIMD&FP scalar)
0 000 1 0 COMPACT
0 000 - 1 SVE extract element to general register
0 001 - 0 SVE extract element to SIMD&FP scalar register
0 01x - 0 SVE reverse within elements
0 01x - 1 Unallocated.
0 100 0 1 CPY (scalar)
0 100 1 1 Unallocated.
0 100 - 0 SVE conditionally broadcast element to vector
0 101 - 0 SVE conditionally extract element to SIMD&FP scalar
0 110 0 0 SPLICE - Encoding
0 110 1 0 SPLICE - Encoding
0 110 - 1 Unallocated.
0 111 0 0 SVE reverse doublewords
0 111 0 1 Unallocated.
0 111 1 - Unallocated.
0 x01 - 1 Unallocated.
1 000 - 0 Unallocated.
1 000 - 1 SVE conditionally extract element to general register
1 !=000 - - Unallocated.
#SVE extract element to general register
1 2
16 16
0 LASTA (scalar)
1 LASTB (scalar)
#SVE extract element to SIMD&FP scalar register
1 2
16 16
0 LASTA (SIMD&FP scalar)
1 LASTB (SIMD&FP scalar)
#SVE reverse within elements
1 4
16 17
00 REVB, REVH, REVW - Encoding
01 REVB, REVH, REVW - Encoding
10 REVB, REVH, REVW - Encoding
11 RBIT
#SVE conditionally broadcast element to vector
1 2
16 16
0 CLASTA (vectors)
1 CLASTB (vectors)
#SVE conditionally extract element to SIMD&FP scalar
1 2
16 16
0 CLASTA (SIMD&FP scalar)
1 CLASTB (SIMD&FP scalar)
#SVE reverse doublewords
1 3
22 23
00 REVD FEAT_SME
01 Unallocated.
1x Unallocated.
#SVE conditionally extract element to general register
1 2
16 16
0 CLASTA (scalar)
1 CLASTB (scalar)
#SVE Permute Vector - Extract -
1 2
22 22
0 EXT - Encoding
1 EXT - Encoding
#SVE Permute Vector - Segments -
1 2
22 22
0 SVE permute vector segments
1 Unallocated.
#SVE permute vector segments
2 7
11 12
10 10
00 0 ZIP1, ZIP2 (vectors) - Encoding FEAT_F64MM
00 1 ZIP1, ZIP2 (vectors) - Encoding FEAT_F64MM
01 0 UZP1, UZP2 (vectors) - Encoding FEAT_F64MM
01 1 UZP1, UZP2 (vectors) - Encoding FEAT_F64MM
10 - Unallocated.
11 0 TRN1, TRN2 (vectors) - Encoding FEAT_F64MM
11 1 TRN1, TRN2 (vectors) - Encoding FEAT_F64MM
#SVE Integer Compare - Vectors -
1 2
14 14
0 SVE integer compare vectors
1 SVE integer compare with wide elements
#SVE integer compare vectors
3 8
15 15
13 13
4 4
0 0 0 CMP<cc> (vectors) - Encoding
0 0 1 CMP<cc> (vectors) - Encoding
0 1 0 CMP<cc> (wide elements) - Encoding
0 1 1 CMP<cc> (wide elements) - Encoding
1 0 0 CMP<cc> (vectors) - Encoding
1 0 1 CMP<cc> (vectors) - Encoding
1 1 0 CMP<cc> (vectors) - Encoding
1 1 1 CMP<cc> (vectors) - Encoding
#SVE integer compare with wide elements
3 8
15 15
13 13
4 4
0 0 0 CMP<cc> (wide elements) - Encoding
0 0 1 CMP<cc> (wide elements) - Encoding
0 1 0 CMP<cc> (wide elements) - Encoding
0 1 1 CMP<cc> (wide elements) - Encoding
1 0 0 CMP<cc> (wide elements) - Encoding
1 0 1 CMP<cc> (wide elements) - Encoding
1 1 0 CMP<cc> (wide elements) - Encoding
1 1 1 CMP<cc> (wide elements) - Encoding
#SVE integer compare with unsigned immediate -
2 4
13 13
4 4
0 0 CMP<cc> (immediate) - Encoding
0 1 CMP<cc> (immediate) - Encoding
1 0 CMP<cc> (immediate) - Encoding
1 1 CMP<cc> (immediate) - Encoding
#SVE integer compare with signed immediate -
3 7
15 15
13 13
4 4
0 0 0 CMP<cc> (immediate) - Encoding
0 0 1 CMP<cc> (immediate) - Encoding
0 1 0 CMP<cc> (immediate) - Encoding
0 1 1 CMP<cc> (immediate) - Encoding
1 0 0 CMP<cc> (immediate) - Encoding
1 0 1 CMP<cc> (immediate) - Encoding
1 1 - Unallocated.
#SVE predicate logical operations -
4 16
23 23
22 22
9 9
4 4
0 0 0 0 AND (predicates)
0 0 0 1 BIC (predicates)
0 0 1 0 EOR (predicates)
0 0 1 1 SEL (predicates)
0 1 0 0 ANDS
0 1 0 1 BICS
0 1 1 0 EORS
0 1 1 1 Unallocated.
1 0 0 0 ORR (predicates)
1 0 0 1 ORN (predicates)
1 0 1 0 NOR
1 0 1 1 NAND
1 1 0 0 ORRS
1 1 0 1 ORNS
1 1 1 0 NORS
1 1 1 1 NANDS
#SVE Propagate Break -
1 2
9 9
0 SVE propagate break from previous partition
1 Unallocated.
#SVE propagate break from previous partition
3 5
23 23
22 22
4 4
0 0 0 BRKPA
0 0 1 BRKPB
0 1 0 BRKPAS
0 1 1 BRKPBS
1 - - Unallocated.
#SVE Partition Break -
4 9
23 23
16 19
9 9
4 4
0 1000 0 0 SVE propagate break to next partition
0 1000 0 1 Unallocated.
0 x000 1 - Unallocated.
0 x1xx - - Unallocated.
0 xx1x - - Unallocated.
0 xxx1 - - Unallocated.
1 0000 1 - Unallocated.
1 !=0000 - - Unallocated.
- 0000 0 - SVE partition break condition
#SVE propagate break to next partition
1 2
22 22
0 BRKN
1 BRKNS
#SVE partition break condition
3 5
23 23
22 22
4 4
- 1 1 Unallocated.
0 0 - BRKA
0 1 0 BRKAS
1 0 - BRKB
1 1 0 BRKBS
#SVE Predicate Misc -
5 24
16 19
11 13
9 10
5 8
4 4
0000 - x0 - 0 SVE predicate test
0100 - x0 - 0 Unallocated.
0x10 - x0 - 0 Unallocated.
0xx1 - x0 - 0 Unallocated.
0xxx - x1 - 0 Unallocated.
1000 000 00 - 0 SVE predicate first active
1000 000 !=00 - 0 Unallocated.
1000 100 10 0000 0 SVE predicate zero
1000 100 10 !=0000 0 Unallocated.
1000 110 00 - 0 SVE predicate read from FFR (predicated)
1001 000 0x - 0 Unallocated.
1001 000 10 - 0 PNEXT
1001 000 11 - 0 Unallocated.
1001 100 10 - 0 Unallocated.
1001 110 00 0000 0 SVE predicate read from FFR (unpredicated)
1001 110 00 !=0000 0 Unallocated.
100x 010 - - 0 Unallocated.
100x 100 0x - 0 SVE predicate initialize
100x 100 11 - 0 Unallocated.
100x 110 !=00 - 0 Unallocated.
100x xx1 - - 0 Unallocated.
110x - - - 0 Unallocated.
1x1x - - - 0 Unallocated.
- - - - 1 Unallocated.
#SVE predicate test
3 7
23 23
22 22
0 3
0 0 - Unallocated.
0 1 0000 PTEST
0 1 0001 Unallocated.
0 1 001x Unallocated.
0 1 01xx Unallocated.
0 1 1xxx Unallocated.
1 - - Unallocated.
#SVE predicate first active
2 3
23 23
22 22
0 0 Unallocated.
0 1 PFIRST
1 - Unallocated.
#SVE predicate zero
2 3
23 23
22 22
0 0 PFALSE
0 1 Unallocated.
1 - Unallocated.
#SVE predicate read from FFR (predicated)
2 3
23 23
22 22
0 0 RDFFR (predicated)
0 1 RDFFRS
1 - Unallocated.
#SVE predicate read from FFR (unpredicated)
2 3
23 23
22 22
0 0 RDFFR (unpredicated)
0 1 Unallocated.
1 - Unallocated.
#SVE predicate initialize
1 2
16 16
0 PTRUE
1 PTRUES
#SVE Integer Compare - Scalars -
3 5
12 13
10 11
0 3
0x - - SVE integer compare scalar count and limit
10 00 0000 SVE conditionally terminate scalars
10 00 !=0000 Unallocated.
11 00 - SVE pointer conflict compare
1x !=00 - Unallocated.
#SVE integer compare scalar count and limit
3 8
11 11
10 10
4 4
0 0 0 WHILEGE (predicate)
0 0 1 WHILEGT (predicate)
0 1 0 WHILELT (predicate)
0 1 1 WHILELE (predicate)
1 0 0 WHILEHS (predicate)
1 0 1 WHILEHI (predicate)
1 1 0 WHILELO (predicate)
1 1 1 WHILELS (predicate)
#SVE conditionally terminate scalars
2 3
23 23
4 4
0 - Unallocated.
1 0 CTERMEQ, CTERMNE - Encoding
1 1 CTERMEQ, CTERMNE - Encoding
#SVE pointer conflict compare
1 2
4 4
0 WHILEWR
1 WHILERW
#SVE broadcast predicate element -
1 2
9 9
0 PSEL FEAT_SME
1 Unallocated.
#SVE Scalar Integer Compare - Predicate-as-counter -
4 7
16 20
11 13
5 10
3 3
00000 110 - - SVE extract mask predicate from predicate-as-counter -
00000 111 000000 0 PTRUE FEAT_SME2
00000 111 000000 1 Unallocated.
00000 111 !=000000 - Unallocated.
!=00000 11x - - Unallocated.
- 01x - - SVE integer compare scalar count and limit (predicate pair) -
- x0x - - SVE integer compare scalar count and limit (predicate-as-counter) -
#SVE extract mask predicate from predicate-as-counter -
1 3
8 10
0xx PEXT (predicate) FEAT_SME2
10x PEXT (predicate pair) FEAT_SME2
11x Unallocated.
#SVE integer compare scalar count and limit (predicate pair) -
3 8
11 11
10 10
0 0
0 0 0 WHILEGE (predicate pair) FEAT_SME2
0 0 1 WHILEGT (predicate pair) FEAT_SME2
0 1 0 WHILELT (predicate pair) FEAT_SME2
0 1 1 WHILELE (predicate pair) FEAT_SME2
1 0 0 WHILEHS (predicate pair) FEAT_SME2
1 0 1 WHILEHI (predicate pair) FEAT_SME2
1 1 0 WHILELO (predicate pair) FEAT_SME2
1 1 1 WHILELS (predicate pair) FEAT_SME2
#SVE integer compare scalar count and limit (predicate-as-counter) -
3 8
11 11
10 10
3 3
0 0 0 WHILEGE FEAT_SME2
0 0 1 WHILEGT FEAT_SME2
0 1 0 WHILELT FEAT_SME2
0 1 1 WHILELE FEAT_SME2
1 0 0 WHILEHS FEAT_SME2
1 0 1 WHILEHI FEAT_SME2
1 1 0 WHILELO FEAT_SME2
1 1 1 WHILELS FEAT_SME2
#SVE Integer Wide Immediate - Unpredicated -
2 5
19 20
16 16
00 - SVE integer add/subtract immediate (unpredicated)
01 - SVE integer min/max immediate (unpredicated)
10 - SVE integer multiply immediate (unpredicated)
11 0 SVE broadcast integer immediate (unpredicated)
11 1 SVE broadcast floating-point immediate (unpredicated)
#SVE integer add/subtract immediate (unpredicated)
1 8
16 18
000 ADD (immediate)
001 SUB (immediate)
010 Unallocated.
011 SUBR (immediate)
100 SQADD (immediate)
101 UQADD (immediate)
110 SQSUB (immediate)
111 UQSUB (immediate)
#SVE integer min/max immediate (unpredicated)
2 6
16 18
13 13
0xx 1 Unallocated.
000 0 SMAX (immediate)
001 0 UMAX (immediate)
010 0 SMIN (immediate)
011 0 UMIN (immediate)
1xx - Unallocated.
#SVE integer multiply immediate (unpredicated)
2 5
16 18
13 13
000 0 MUL (immediate)
000 1 Unallocated.
001 - Unallocated.
01x - Unallocated.
1xx - Unallocated.
#SVE broadcast integer immediate (unpredicated)
1 3
17 18
00 DUP (immediate)
01 Unallocated.
1x Unallocated.
#SVE broadcast floating-point immediate (unpredicated)
2 4
17 18
13 13
00 0 FDUP
00 1 Unallocated.
01 - Unallocated.
1x - Unallocated.
#SVE Predicate Count -
2 3
11 13
9 9
000 1 SVE predicate count (predicate-as-counter)
!=000 1 Unallocated.
- 0 SVE predicate count
#SVE predicate count (predicate-as-counter)
1 4
16 18
000 CNTP FEAT_SME2
001 Unallocated.
01x Unallocated.
1xx Unallocated.
#SVE predicate count
1 4
16 18
000 CNTP
001 Unallocated.
01x Unallocated.
1xx Unallocated.
#SVE Inc/Dec by Predicate Count -
2 4
18 18
11 11
0 0 SVE saturating inc/dec vector by predicate count
0 1 SVE saturating inc/dec register by predicate count
1 0 SVE inc/dec vector by predicate count
1 1 SVE inc/dec register by predicate count
#SVE saturating inc/dec vector by predicate count
3 6
17 17
16 16
9 10
- - 01 Unallocated.
- - 1x Unallocated.
0 0 00 SQINCP (vector)
0 1 00 UQINCP (vector)
1 0 00 SQDECP (vector)
1 1 00 UQDECP (vector)
#SVE saturating inc/dec register by predicate count
4 9
17 17
16 16
10 10
9 9
- - - 1 Unallocated.
0 0 0 0 SQINCP (scalar) - Encoding
0 0 1 0 SQINCP (scalar) - Encoding
0 1 0 0 UQINCP (scalar) - Encoding
0 1 1 0 UQINCP (scalar) - Encoding
1 0 0 0 SQDECP (scalar) - Encoding
1 0 1 0 SQDECP (scalar) - Encoding
1 1 0 0 UQDECP (scalar) - Encoding
1 1 1 0 UQDECP (scalar) - Encoding
#SVE inc/dec vector by predicate count
3 5
17 17
16 16
9 10
0 - 01 Unallocated.
0 - 1x Unallocated.
0 0 00 INCP (vector)
0 1 00 DECP (vector)
1 - - Unallocated.
#SVE inc/dec register by predicate count
3 5
17 17
16 16
9 10
0 - 01 Unallocated.
0 - 1x Unallocated.
0 0 00 INCP (scalar)
0 1 00 DECP (scalar)
1 - - Unallocated.
#SVE Write FFR -
5 9
18 18
16 17
9 11
5 8
0 4
0 00 000 - 00000 SVE FFR write from predicate
1 00 000 0000 00000 SVE FFR initialise
1 00 000 1xxx 00000 Unallocated.
1 00 000 x1xx 00000 Unallocated.
1 00 000 xx1x 00000 Unallocated.
1 00 000 xxx1 00000 Unallocated.
- 00 000 - !=00000 Unallocated.
- 00 !=000 - - Unallocated.
- !=00 - - - Unallocated.
#SVE FFR write from predicate
1 3
22 23
00 WRFFR
01 Unallocated.
1x Unallocated.
#SVE FFR initialise
1 3
22 23
00 SETFFR
01 Unallocated.
1x Unallocated.
#SVE Integer Multiply-Add - Unpredicated -
1 9
10 14
0000x SVE integer dot product (unpredicated)
0001x SVE2 saturating multiply-add interleaved long
001xx CDOT (vectors)
01xxx SVE2 complex integer multiply-add
10xxx SVE2 integer multiply-add long
110xx SVE2 saturating multiply-add long
1110x SVE2 saturating multiply-add high
11110 SVE mixed sign dot product
11111 Unallocated.
#SVE integer dot product (unpredicated)
1 2
10 10
0 SDOT (4-way, vectors)
1 UDOT (4-way, vectors)
#SVE2 saturating multiply-add interleaved long
1 2
10 10
0 SQDMLALBT
1 SQDMLSLBT
#SVE2 complex integer multiply-add
1 2
12 12
0 CMLA (vectors)
1 SQRDCMLAH (vectors)
#SVE2 integer multiply-add long
3 8
12 12
11 11
10 10
0 0 0 SMLALB (vectors)
0 0 1 SMLALT (vectors)
0 1 0 UMLALB (vectors)
0 1 1 UMLALT (vectors)
1 0 0 SMLSLB (vectors)
1 0 1 SMLSLT (vectors)
1 1 0 UMLSLB (vectors)
1 1 1 UMLSLT (vectors)
#SVE2 saturating multiply-add long
2 4
11 11
10 10
0 0 SQDMLALB (vectors)
0 1 SQDMLALT (vectors)
1 0 SQDMLSLB (vectors)
1 1 SQDMLSLT (vectors)
#SVE2 saturating multiply-add high
1 2
10 10
0 SQRDMLAH (vectors)
1 SQRDMLSH (vectors)
#SVE mixed sign dot product
1 3
22 23
0x Unallocated.
10 USDOT (vectors) FEAT_I8MM
11 Unallocated.
#SVE2 Integer - Predicated -
2 9
17 20
13 13
0010 1 SVE2 integer pairwise add and accumulate long
0011 1 Unallocated.
011x 1 Unallocated.
0x0x 1 SVE2 integer unary operations (predicated)
0xxx 0 SVE2 saturating/rounding bitwise shift left (predicated)
10xx 0 SVE2 integer halving add/subtract (predicated)
10xx 1 SVE2 integer pairwise arithmetic
11xx 0 SVE2 saturating add/subtract
11xx 1 Unallocated.
#SVE2 integer pairwise add and accumulate long
1 2
16 16
0 SADALP
1 UADALP
#SVE2 integer unary operations (predicated)
2 5
19 19
16 17
- 1x Unallocated.
0 00 URECPE
0 01 URSQRTE
1 00 SQABS
1 01 SQNEG
#SVE2 saturating/rounding bitwise shift left (predicated)
4 13
19 19
18 18
17 17
16 16
0 - 0 - Unallocated.
0 0 1 0 SRSHL
0 0 1 1 URSHL
0 1 1 0 SRSHLR
0 1 1 1 URSHLR
1 0 0 0 SQSHL (vectors)
1 0 0 1 UQSHL (vectors)
1 0 1 0 SQRSHL
1 0 1 1 UQRSHL
1 1 0 0 SQSHLR
1 1 0 1 UQSHLR
1 1 1 0 SQRSHLR
1 1 1 1 UQRSHLR
#SVE2 integer halving add/subtract (predicated)
3 8
18 18
17 17
16 16
0 0 0 SHADD
0 0 1 UHADD
0 1 0 SHSUB
0 1 1 UHSUB
1 0 0 SRHADD
1 0 1 URHADD
1 1 0 SHSUBR
1 1 1 UHSUBR
#SVE2 integer pairwise arithmetic
2 7
17 18
16 16
00 0 Unallocated.
00 1 ADDP
01 - Unallocated.
10 0 SMAXP
10 1 UMAXP
11 0 SMINP
11 1 UMINP
#SVE2 saturating add/subtract
3 8
18 18
17 17
16 16
0 0 0 SQADD (vectors, predicated)
0 0 1 UQADD (vectors, predicated)
0 1 0 SQSUB (vectors, predicated)
0 1 1 UQSUB (vectors, predicated)
1 0 0 SUQADD
1 0 1 USQADD
1 1 0 SQSUBR
1 1 1 UQSUBR
#SVE integer clamp -
1 2
10 10
0 SCLAMP FEAT_SME
1 UCLAMP FEAT_SME
#SVE Multiply - Indexed -
1 15
10 15
00000x SVE integer dot product (indexed)
00001x SVE2 integer multiply-add (indexed)
00010x SVE2 saturating multiply-add high (indexed)
00011x SVE mixed sign dot product (indexed)
001xxx SVE2 saturating multiply-add (indexed)
0100xx SVE2 complex integer dot product (indexed)
0101xx Unallocated.
0110xx SVE2 complex integer multiply-add (indexed)
0111xx SVE2 complex saturating multiply-add (indexed)
10xxxx SVE2 integer multiply-add long (indexed)
110xxx SVE2 integer multiply long (indexed)
1110xx SVE2 saturating multiply (indexed)
11110x SVE2 saturating multiply high (indexed)
111110 SVE2 integer multiply (indexed)
111111 Unallocated.
#SVE integer dot product (indexed)
2 5
22 23
10 10
0x - Unallocated.
10 0 SDOT (4-way, indexed) - Encoding
10 1 UDOT (4-way, indexed) - Encoding
11 0 SDOT (4-way, indexed) - Encoding
11 1 UDOT (4-way, indexed) - Encoding
#SVE2 integer multiply-add (indexed)
2 6
22 23
10 10
0x 0 MLA (indexed) - Encoding
0x 1 MLS (indexed) - Encoding
10 0 MLA (indexed) - Encoding
10 1 MLS (indexed) - Encoding
11 0 MLA (indexed) - Encoding
11 1 MLS (indexed) - Encoding
#SVE2 saturating multiply-add high (indexed)
2 6
22 23
10 10
0x 0 SQRDMLAH (indexed) - Encoding
0x 1 SQRDMLSH (indexed) - Encoding
10 0 SQRDMLAH (indexed) - Encoding
10 1 SQRDMLSH (indexed) - Encoding
11 0 SQRDMLAH (indexed) - Encoding
11 1 SQRDMLSH (indexed) - Encoding
#SVE mixed sign dot product (indexed)
2 4
22 23
10 10
0x - Unallocated.
10 0 USDOT (indexed) FEAT_I8MM
10 1 SUDOT FEAT_I8MM
11 - Unallocated.
#SVE2 saturating multiply-add (indexed)
3 9
22 23
12 12
10 10
0x - - Unallocated.
10 0 0 SQDMLALB (indexed) - Encoding
10 0 1 SQDMLALT (indexed) - Encoding
10 1 0 SQDMLSLB (indexed) - Encoding
10 1 1 SQDMLSLT (indexed) - Encoding
11 0 0 SQDMLALB (indexed) - Encoding
11 0 1 SQDMLALT (indexed) - Encoding
11 1 0 SQDMLSLB (indexed) - Encoding
11 1 1 SQDMLSLT (indexed) - Encoding
#SVE2 complex integer dot product (indexed)
1 3
22 23
0x Unallocated.
10 CDOT (indexed) - Encoding
11 CDOT (indexed) - Encoding
#SVE2 complex integer multiply-add (indexed)
1 3
22 23
0x Unallocated.
10 CMLA (indexed) - Encoding
11 CMLA (indexed) - Encoding
#SVE2 complex saturating multiply-add (indexed)
1 3
22 23
0x Unallocated.
10 SQRDCMLAH (indexed) - Encoding
11 SQRDCMLAH (indexed) - Encoding
#SVE2 integer multiply-add long (indexed)
4 17
22 23
13 13
12 12
10 10
0x - - - Unallocated.
10 0 0 0 SMLALB (indexed) - Encoding
10 0 0 1 SMLALT (indexed) - Encoding
10 0 1 0 UMLALB (indexed) - Encoding
10 0 1 1 UMLALT (indexed) - Encoding
10 1 0 0 SMLSLB (indexed) - Encoding
10 1 0 1 SMLSLT (indexed) - Encoding
10 1 1 0 UMLSLB (indexed) - Encoding
10 1 1 1 UMLSLT (indexed) - Encoding
11 0 0 0 SMLALB (indexed) - Encoding
11 0 0 1 SMLALT (indexed) - Encoding
11 0 1 0 UMLALB (indexed) - Encoding
11 0 1 1 UMLALT (indexed) - Encoding
11 1 0 0 SMLSLB (indexed) - Encoding
11 1 0 1 SMLSLT (indexed) - Encoding
11 1 1 0 UMLSLB (indexed) - Encoding
11 1 1 1 UMLSLT (indexed) - Encoding
#SVE2 integer multiply long (indexed)
3 9
22 23
12 12
10 10
0x - - Unallocated.
10 0 0 SMULLB (indexed) - Encoding
10 0 1 SMULLT (indexed) - Encoding
10 1 0 UMULLB (indexed) - Encoding
10 1 1 UMULLT (indexed) - Encoding
11 0 0 SMULLB (indexed) - Encoding
11 0 1 SMULLT (indexed) - Encoding
11 1 0 UMULLB (indexed) - Encoding
11 1 1 UMULLT (indexed) - Encoding
#SVE2 saturating multiply (indexed)
2 5
22 23
10 10
0x - Unallocated.
10 0 SQDMULLB (indexed) - Encoding
10 1 SQDMULLT (indexed) - Encoding
11 0 SQDMULLB (indexed) - Encoding
11 1 SQDMULLT (indexed) - Encoding
#SVE2 saturating multiply high (indexed)
2 6
22 23
10 10
0x 0 SQDMULH (indexed) - Encoding
0x 1 SQRDMULH (indexed) - Encoding
10 0 SQDMULH (indexed) - Encoding
10 1 SQRDMULH (indexed) - Encoding
11 0 SQDMULH (indexed) - Encoding
11 1 SQRDMULH (indexed) - Encoding
#SVE2 integer multiply (indexed)
1 3
22 23
0x MUL (indexed) - Encoding
10 MUL (indexed) - Encoding
11 MUL (indexed) - Encoding
#SVE two-way dot product -
1 2
10 10
0 SDOT (2-way, vectors) FEAT_SME2
1 UDOT (2-way, vectors) FEAT_SME2
#SVE two-way dot product (indexed) -
1 2
10 10
0 SDOT (2-way, indexed) FEAT_SME2
1 UDOT (2-way, indexed) FEAT_SME2
#SVE2 Widening Integer Arithmetic -
1 3
13 14
0x SVE2 integer add/subtract long
10 SVE2 integer add/subtract wide
11 SVE2 integer multiply long
#SVE2 integer add/subtract long
4 13
13 13
12 12
11 11
10 10
0 0 0 0 SADDLB
0 0 0 1 SADDLT
0 0 1 0 UADDLB
0 0 1 1 UADDLT
0 1 0 0 SSUBLB
0 1 0 1 SSUBLT
0 1 1 0 USUBLB
0 1 1 1 USUBLT
1 0 - - Unallocated.
1 1 0 0 SABDLB
1 1 0 1 SABDLT
1 1 1 0 UABDLB
1 1 1 1 UABDLT
#SVE2 integer add/subtract wide
3 8
12 12
11 11
10 10
0 0 0 SADDWB
0 0 1 SADDWT
0 1 0 UADDWB
0 1 1 UADDWT
1 0 0 SSUBWB
1 0 1 SSUBWT
1 1 0 USUBWB
1 1 1 USUBWT
#SVE2 integer multiply long
4 10
22 23
12 12
11 11
10 10
- 0 0 0 SQDMULLB (vectors) -
- 0 0 1 SQDMULLT (vectors) -
- 1 0 0 SMULLB (vectors) -
- 1 0 1 SMULLT (vectors) -
- 1 1 0 UMULLB (vectors) -
- 1 1 1 UMULLT (vectors) -
!=00 0 1 0 PMULLB - Encoding -
!=00 0 1 1 PMULLT - Encoding -
00 0 1 0 PMULLB - Encoding FEAT_SVE_PMULL128
00 0 1 1 PMULLT - Encoding FEAT_SVE_PMULL128
#SVE Misc -
2 7
23 23
10 13
0 10xx SVE2 bitwise shift left long
1 10xx Unallocated.
- 00xx SVE2 integer add/subtract interleaved long
- 010x SVE2 bitwise exclusive-or interleaved
- 0110 SVE integer matrix multiply accumulate
- 0111 Unallocated.
- 11xx SVE2 bitwise permute
#SVE2 bitwise shift left long
2 4
11 11
10 10
0 0 SSHLLB
0 1 SSHLLT
1 0 USHLLB
1 1 USHLLT
#SVE2 integer add/subtract interleaved long
2 4
11 11
10 10
0 0 SADDLBT
0 1 Unallocated.
1 0 SSUBLBT
1 1 SSUBLTB
#SVE2 bitwise exclusive-or interleaved
1 2
10 10
0 EORBT
1 EORTB
#SVE integer matrix multiply accumulate
1 4
22 23
00 SMMLA FEAT_I8MM
01 Unallocated.
10 USMMLA FEAT_I8MM
11 UMMLA FEAT_I8MM
#SVE2 bitwise permute
1 4
10 11
00 BEXT FEAT_SVE_BitPerm
01 BDEP FEAT_SVE_BitPerm
10 BGRP FEAT_SVE_BitPerm
11 Unallocated.
#SVE2 Accumulate -
2 7
17 20
11 13
0000 011 SVE2 complex integer add
!=0000 011 Unallocated.
- 00x SVE2 integer absolute difference and accumulate long
- 010 SVE2 integer add/subtract long with carry
- 10x SVE2 bitwise shift right and accumulate
- 110 SVE2 bitwise shift and insert
- 111 SVE2 integer absolute difference and accumulate
#SVE2 complex integer add
1 2
16 16
0 CADD
1 SQCADD
#SVE2 integer absolute difference and accumulate long
2 4
11 11
10 10
0 0 SABALB
0 1 SABALT
1 0 UABALB
1 1 UABALT
#SVE2 integer add/subtract long with carry
2 4
22 23
10 10
0x 0 ADCLB
0x 1 ADCLT
1x 0 SBCLB
1x 1 SBCLT
#SVE2 bitwise shift right and accumulate
2 4
11 11
10 10
0 0 SSRA
0 1 USRA
1 0 SRSRA
1 1 URSRA
#SVE2 bitwise shift and insert
1 2
10 10
0 SRI
1 SLI
#SVE2 integer absolute difference and accumulate
1 2
10 10
0 SABA
1 UABA
#SVE2 Narrowing -
6 11
23 23
17 18
16 16
13 14
10 10
5 5
0 00 0 10 - - SVE2 saturating extract narrow
0 00 1 10 0 0 SME2 multi-vec extract narrow
0 00 1 10 0 1 Unallocated.
0 00 1 10 1 - Unallocated.
0 !=00 - 10 - - Unallocated.
0 - - 0x - - SVE2 bitwise shift right narrow
1 - - 0x 0 0 SME2 multi-vec shift narrow
1 - - 0x 0 1 Unallocated.
1 - - 0x 1 - Unallocated.
1 - - 10 - - Unallocated.
- - - 11 - - SVE2 integer add/subtract narrow high part
#SVE2 saturating extract narrow
2 7
11 12
10 10
00 0 SQXTNB
00 1 SQXTNT
01 0 UQXTNB
01 1 UQXTNT
10 0 SQXTUNB
10 1 SQXTUNT
11 - Unallocated.
#SME2 multi-vec extract narrow
3 7
22 22
19 20
11 12
0 0x - Unallocated.
0 10 00 SQCVTN FEAT_SME2
0 10 01 UQCVTN FEAT_SME2
0 10 10 SQCVTUN FEAT_SME2
0 10 11 Unallocated.
0 11 - Unallocated.
1 - - Unallocated.
#SVE2 bitwise shift right narrow
4 16
13 13
12 12
11 11
10 10
0 0 0 0 SQSHRUNB
0 0 0 1 SQSHRUNT
0 0 1 0 SQRSHRUNB
0 0 1 1 SQRSHRUNT
0 1 0 0 SHRNB
0 1 0 1 SHRNT
0 1 1 0 RSHRNB
0 1 1 1 RSHRNT
1 0 0 0 SQSHRNB
1 0 0 1 SQSHRNT
1 0 1 0 SQRSHRNB
1 0 1 1 SQRSHRNT
1 1 0 0 UQSHRNB
1 1 0 1 UQSHRNT
1 1 1 0 UQRSHRNB
1 1 1 1 UQRSHRNT
#SME2 multi-vec shift narrow
5 8
22 22
20 20
13 13
12 12
11 11
0 0 - - - Unallocated.
0 1 0 0 0 Unallocated.
0 1 0 0 1 SQRSHRUN FEAT_SME2
0 1 0 1 - Unallocated.
0 1 1 - 0 Unallocated.
0 1 1 0 1 SQRSHRN FEAT_SME2
0 1 1 1 1 UQRSHRN FEAT_SME2
1 - - - - Unallocated.
#SVE2 integer add/subtract narrow high part
3 8
12 12
11 11
10 10
0 0 0 ADDHNB
0 0 1 ADDHNT
0 1 0 RADDHNB
0 1 1 RADDHNT
1 0 0 SUBHNB
1 0 1 SUBHNT
1 1 0 RSUBHNB
1 1 1 RSUBHNT
#SVE2 character match -
1 2
4 4
0 MATCH
1 NMATCH
#SVE2 Histogram Computation - Segment -
1 2
10 12
000 HISTSEG
!=000 Unallocated.
#SVE2 Crypto Extensions -
4 10
18 20
16 17
11 12
5 9
000 00 00 00000 SVE2 crypto unary operations
000 00 00 !=00000 Unallocated.
000 00 x1 - Unallocated.
000 01 0x - Unallocated.
000 01 11 - Unallocated.
000 1x 00 - SVE2 crypto destructive binary operations
000 1x x1 - Unallocated.
!=000 - 0x - Unallocated.
!=000 - 11 - Unallocated.
- - 10 - SVE2 crypto constructive binary operations
#SVE2 crypto unary operations
2 4
22 23
10 10
00 0 AESMC FEAT_SVE_AES
00 1 AESIMC FEAT_SVE_AES
01 - Unallocated.
1x - Unallocated.
#SVE2 crypto destructive binary operations
3 6
22 23
16 16
10 10
00 0 0 AESE FEAT_SVE_AES
00 0 1 AESD FEAT_SVE_AES
00 1 0 SM4E FEAT_SVE_SM4
00 1 1 Unallocated.
01 - - Unallocated.
1x - - Unallocated.
#SVE2 crypto constructive binary operations
2 4
22 23
10 10
00 0 SM4EKEY FEAT_SVE_SM4
00 1 RAX1 FEAT_SVE_SHA3
01 - Unallocated.
1x - Unallocated.
#SVE2 Crypto Extensions -
4 10
18 20
16 17
11 12
5 9
000 00 00 00000 SVE2 crypto unary operations
000 00 00 !=00000 Unallocated.
000 00 x1 - Unallocated.
000 01 0x - Unallocated.
000 01 11 - Unallocated.
000 1x 00 - SVE2 crypto destructive binary operations
000 1x x1 - Unallocated.
!=000 - 0x - Unallocated.
!=000 - 11 - Unallocated.
- - 10 - SVE2 crypto constructive binary operations
#SVE2 crypto unary operations
2 4
22 23
10 10
00 0 AESMC FEAT_SVE_AES
00 1 AESIMC FEAT_SVE_AES
01 - Unallocated.
1x - Unallocated.
#SVE2 crypto destructive binary operations
3 6
22 23
16 16
10 10
00 0 0 AESE FEAT_SVE_AES
00 0 1 AESD FEAT_SVE_AES
00 1 0 SM4E FEAT_SVE_SM4
00 1 1 Unallocated.
01 - - Unallocated.
1x - - Unallocated.
#SVE2 crypto constructive binary operations
2 4
22 23
10 10
00 0 SM4EKEY FEAT_SVE_SM4
00 1 RAX1 FEAT_SVE_SHA3
01 - Unallocated.
1x - Unallocated.
#SVE floating-point convert precision odd elements -
2 10
22 23
16 17
x0 11 Unallocated.
00 0x Unallocated.
00 10 FCVTXNT -
01 - Unallocated.
10 00 FCVTNT - Encoding -
10 01 FCVTLT - Encoding -
10 10 BFCVTNT FEAT_BF16
11 0x Unallocated.
11 10 FCVTNT - Encoding -
11 11 FCVTLT - Encoding -
#SVE2 floating-point pairwise operations -
1 7
16 18
000 FADDP
001 Unallocated.
01x Unallocated.
100 FMAXNMP
101 FMINNMP
110 FMAXP
111 FMINP
#SVE floating-point multiply-add (indexed) -
3 7
22 23
11 11
10 10
- 1 - Unallocated.
0x 0 0 FMLA (indexed) - Encoding
0x 0 1 FMLS (indexed) - Encoding
10 0 0 FMLA (indexed) - Encoding
10 0 1 FMLS (indexed) - Encoding
11 0 0 FMLA (indexed) - Encoding
11 0 1 FMLS (indexed) - Encoding
#SVE floating-point complex multiply-add (indexed) -
1 3
22 23
0x Unallocated.
10 FCMLA (indexed) - Encoding
11 FCMLA (indexed) - Encoding
#SVE floating-point multiply (indexed) -
2 4
22 23
11 11
- 1 Unallocated.
0x 0 FMUL (indexed) - Encoding
10 0 FMUL (indexed) - Encoding
11 0 FMUL (indexed) - Encoding
#SVE Floating Point Widening Multiply-Add - Indexed -
2 3
23 23
13 13
0 0 SVE BFloat16 floating-point dot product (indexed)
0 1 Unallocated.
1 - SVE floating-point multiply-add long (indexed)
#SVE BFloat16 floating-point dot product (indexed)
2 3
22 22
10 11
0 00 FDOT (indexed) FEAT_SME2
1 00 BFDOT (indexed) FEAT_BF16
1 10 Unallocated.
#SVE floating-point multiply-add long (indexed)
3 8
22 22
13 13
10 10
0 0 0 FMLALB (indexed) -
0 0 1 FMLALT (indexed) -
0 1 0 FMLSLB (indexed) -
0 1 1 FMLSLT (indexed) -
1 0 0 BFMLALB (indexed) FEAT_BF16
1 0 1 BFMLALT (indexed) FEAT_BF16
1 1 0 BFMLSLB (indexed) FEAT_SME2
1 1 1 BFMLSLT (indexed) FEAT_SME2
#SVE Floating Point Widening Multiply-Add -
1 2
23 23
0 SVE BFloat16 floating-point dot product
1 SVE floating-point multiply-add long
#SVE BFloat16 floating-point dot product
3 4
22 22
13 13
10 10
0 0 0 FDOT (vectors) FEAT_SME2
0 1 1 Unallocated.
1 0 0 BFDOT (vectors) FEAT_BF16
1 1 - Unallocated.
#SVE floating-point multiply-add long
3 8
22 22
13 13
10 10
0 0 0 FMLALB (vectors) -
0 0 1 FMLALT (vectors) -
0 1 0 FMLSLB (vectors) -
0 1 1 FMLSLT (vectors) -
1 0 0 BFMLALB (vectors) FEAT_BF16
1 0 1 BFMLALT (vectors) FEAT_BF16
1 1 0 BFMLSLB (vectors) FEAT_SME2
1 1 1 BFMLSLT (vectors) FEAT_SME2
#SVE floating point matrix multiply accumulate -
1 4
22 23
00 Unallocated.
01 BFMMLA FEAT_BF16
10 FMMLA - Encoding FEAT_F32MM
11 FMMLA - Encoding FEAT_F64MM
#SVE floating-point compare vectors -
3 8
15 15
13 13
4 4
0 0 0 FCM<cc> (vectors) - Encoding
0 0 1 FCM<cc> (vectors) - Encoding
0 1 0 FCM<cc> (vectors) - Encoding
0 1 1 FCM<cc> (vectors) - Encoding
1 0 0 FCM<cc> (vectors) - Encoding
1 0 1 FAC<cc> - Encoding
1 1 0 Unallocated.
1 1 1 FAC<cc> - Encoding
#SVE floating-point arithmetic (unpredicated) -
1 7
10 12
000 FADD (vectors, unpredicated)
001 FSUB (vectors, unpredicated)
010 FMUL (vectors, unpredicated)
011 FTSMUL
10x Unallocated.
110 FRECPS
111 FRSQRTS
#SVE Floating Point Arithmetic - Predicated -
3 5
19 20
10 12
6 9
0x - - SVE floating-point arithmetic (predicated)
10 000 - FTMAD
10 !=000 - Unallocated.
11 - 0000 SVE floating-point arithmetic with immediate (predicated)
11 - !=0000 Unallocated.
#SVE floating-point arithmetic (predicated)
1 14
16 19
0000 FADD (vectors, predicated)
0001 FSUB (vectors, predicated)
0010 FMUL (vectors, predicated)
0011 FSUBR (vectors)
0100 FMAXNM (vectors)
0101 FMINNM (vectors)
0110 FMAX (vectors)
0111 FMIN (vectors)
1000 FABD
1001 FSCALE
1010 FMULX
1011 Unallocated.
1100 FDIVR
1101 FDIV
#SVE floating-point arithmetic with immediate (predicated)
1 8
16 18
000 FADD (immediate)
001 FSUB (immediate)
010 FMUL (immediate)
011 FSUBR (immediate)
100 FMAXNM (immediate)
101 FMINNM (immediate)
110 FMAX (immediate)
111 FMIN (immediate)
#SVE Floating Point Unary Operations - Predicated -
1 5
18 20
00x SVE floating-point round to integral value
010 SVE floating-point convert precision
011 SVE floating-point unary operations
10x SVE integer convert to floating-point
11x SVE floating-point convert to integer
#SVE floating-point round to integral value
1 8
16 18
000 FRINT<r> - Encoding
001 FRINT<r> - Encoding
010 FRINT<r> - Encoding
011 FRINT<r> - Encoding
100 FRINT<r> - Encoding
101 Unallocated.
110 FRINT<r> - Encoding
111 FRINT<r> - Encoding
#SVE floating-point convert precision
2 11
22 23
16 17
x0 11 Unallocated.
00 0x Unallocated.
00 10 FCVTX -
01 - Unallocated.
10 00 FCVT - Encoding -
10 01 FCVT - Encoding -
10 10 BFCVT FEAT_BF16
11 00 FCVT - Encoding -
11 01 FCVT - Encoding -
11 10 FCVT - Encoding -
11 11 FCVT - Encoding -
#SVE floating-point unary operations
1 3
16 17
00 FRECPX
01 FSQRT
1x Unallocated.
#SVE integer convert to floating-point
3 19
22 23
17 18
16 16
00 - - Unallocated.
01 00 - Unallocated.
01 01 0 SCVTF - Encoding
01 01 1 UCVTF - Encoding
01 10 0 SCVTF - Encoding
01 10 1 UCVTF - Encoding
01 11 0 SCVTF - Encoding
01 11 1 UCVTF - Encoding
10 0x - Unallocated.
10 10 0 SCVTF - Encoding
10 10 1 UCVTF - Encoding
10 11 - Unallocated.
11 00 0 SCVTF - Encoding
11 00 1 UCVTF - Encoding
11 01 - Unallocated.
11 10 0 SCVTF - Encoding
11 10 1 UCVTF - Encoding
11 11 0 SCVTF - Encoding
11 11 1 UCVTF - Encoding
#SVE floating-point convert to integer
3 20
22 23
17 18
16 16
00 - 0 FLOGB
00 - 1 Unallocated.
01 00 - Unallocated.
01 01 0 FCVTZS - Encoding
01 01 1 FCVTZU - Encoding
01 10 0 FCVTZS - Encoding
01 10 1 FCVTZU - Encoding
01 11 0 FCVTZS - Encoding
01 11 1 FCVTZU - Encoding
10 0x - Unallocated.
10 10 0 FCVTZS - Encoding
10 10 1 FCVTZU - Encoding
10 11 - Unallocated.
11 00 0 FCVTZS - Encoding
11 00 1 FCVTZU - Encoding
11 01 - Unallocated.
11 10 0 FCVTZS - Encoding
11 10 1 FCVTZU - Encoding
11 11 0 FCVTZS - Encoding
11 11 1 FCVTZU - Encoding
#SVE floating-point recursive reduction -
1 7
16 18
000 FADDV
001 Unallocated.
01x Unallocated.
100 FMAXNMV
101 FMINNMV
110 FMAXV
111 FMINV
#SVE Floating Point Unary Operations - Unpredicated -
1 2
10 11
00 SVE floating-point reciprocal estimate (unpredicated)
!=00 Unallocated.
#SVE floating-point reciprocal estimate (unpredicated)
1 4
16 18
0xx Unallocated.
10x Unallocated.
110 FRECPE
111 FRSQRTE
#SVE Floating Point Compare - with Zero -
1 2
18 18
0 SVE floating-point compare with zero
1 Unallocated.
#SVE floating-point compare with zero
3 7
17 17
16 16
4 4
0 0 0 FCM<cc> (zero) - Encoding
0 0 1 FCM<cc> (zero) - Encoding
0 1 0 FCM<cc> (zero) - Encoding
0 1 1 FCM<cc> (zero) - Encoding
1 - 1 Unallocated.
1 0 0 FCM<cc> (zero) - Encoding
1 1 0 FCM<cc> (zero) - Encoding
#SVE Floating Point Accumulating Reduction -
1 2
18 18
0 SVE floating-point serial reduction (predicated)
1 Unallocated.
#SVE floating-point serial reduction (predicated)
1 3
16 17
00 FADDA
01 Unallocated.
1x Unallocated.
#SVE Floating Point Multiply-Add -
1 2
15 15
0 SVE floating-point multiply-accumulate writing addend
1 SVE floating-point multiply-accumulate writing multiplicand
#SVE floating-point multiply-accumulate writing addend
1 4
13 14
00 FMLA (vectors)
01 FMLS (vectors)
10 FNMLA
11 FNMLS
#SVE floating-point multiply-accumulate writing multiplicand
1 4
13 14
00 FMAD
01 FMSB
10 FNMAD
11 FNMSB
#SVE Memory - 32-bit Gather and Unsized Contiguous -
4 17
23 24
21 22
13 15
4 4
00 x1 0xx 0 SVE 32-bit gather prefetch (scalar plus 32-bit scaled offsets)
00 x1 0xx 1 Unallocated.
01 x1 0xx - SVE 32-bit gather load halfwords (scalar plus 32-bit scaled offsets)
10 x1 0xx - SVE 32-bit gather load words (scalar plus 32-bit scaled offsets)
11 0x 000 0 LDR (predicate)
11 0x 000 1 Unallocated.
11 0x 010 - LDR (vector)
11 0x 0x1 - Unallocated.
11 1x 0xx 0 SVE contiguous prefetch (scalar plus immediate)
11 1x 0xx 1 Unallocated.
!=11 x0 0xx - SVE 32-bit gather load (scalar plus 32-bit unscaled offsets)
- 00 10x - SVE2 32-bit gather non-temporal load (vector plus scalar)
- 00 110 0 SVE contiguous prefetch (scalar plus scalar)
- 00 111 0 SVE 32-bit gather prefetch (vector plus immediate)
- 00 11x 1 Unallocated.
- 01 1xx - SVE 32-bit gather load (vector plus immediate)
- 1x 1xx - SVE load and broadcast element
#SVE 32-bit gather prefetch (scalar plus 32-bit scaled offsets)
1 4
13 14
00 PRFB (scalar plus vector)
01 PRFH (scalar plus vector)
10 PRFW (scalar plus vector)
11 PRFD (scalar plus vector)
#SVE 32-bit gather load halfwords (scalar plus 32-bit scaled offsets)
2 4
14 14
13 13
0 0 LD1SH (scalar plus vector)
0 1 LDFF1SH (scalar plus vector)
1 0 LD1H (scalar plus vector)
1 1 LDFF1H (scalar plus vector)
#SVE 32-bit gather load words (scalar plus 32-bit scaled offsets)
2 3
14 14
13 13
0 - Unallocated.
1 0 LD1W (scalar plus vector)
1 1 LDFF1W (scalar plus vector)
#SVE contiguous prefetch (scalar plus immediate)
1 4
13 14
00 PRFB (scalar plus immediate)
01 PRFH (scalar plus immediate)
10 PRFW (scalar plus immediate)
11 PRFD (scalar plus immediate)
#SVE 32-bit gather load (scalar plus 32-bit unscaled offsets)
3 11
23 24
14 14
13 13
00 0 0 LD1SB (scalar plus vector)
00 0 1 LDFF1SB (scalar plus vector)
00 1 0 LD1B (scalar plus vector)
00 1 1 LDFF1B (scalar plus vector)
01 0 0 LD1SH (scalar plus vector)
01 0 1 LDFF1SH (scalar plus vector)
01 1 0 LD1H (scalar plus vector)
01 1 1 LDFF1H (scalar plus vector)
10 0 - Unallocated.
10 1 0 LD1W (scalar plus vector)
10 1 1 LDFF1W (scalar plus vector)
#SVE2 32-bit gather non-temporal load (vector plus scalar)
2 7
23 24
13 13
00 0 LDNT1SB
00 1 LDNT1B (vector plus scalar)
01 0 LDNT1SH
01 1 LDNT1H (vector plus scalar)
10 0 Unallocated.
10 1 LDNT1W (vector plus scalar)
11 - Unallocated.
#SVE contiguous prefetch (scalar plus scalar)
1 4
23 24
00 PRFB (scalar plus scalar)
01 PRFH (scalar plus scalar)
10 PRFW (scalar plus scalar)
11 PRFD (scalar plus scalar)
#SVE 32-bit gather prefetch (vector plus immediate)
1 4
23 24
00 PRFB (vector plus immediate)
01 PRFH (vector plus immediate)
10 PRFW (vector plus immediate)
11 PRFD (vector plus immediate)
#SVE 32-bit gather load (vector plus immediate)
3 12
23 24
14 14
13 13
00 0 0 LD1SB (vector plus immediate)
00 0 1 LDFF1SB (vector plus immediate)
00 1 0 LD1B (vector plus immediate)
00 1 1 LDFF1B (vector plus immediate)
01 0 0 LD1SH (vector plus immediate)
01 0 1 LDFF1SH (vector plus immediate)
01 1 0 LD1H (vector plus immediate)
01 1 1 LDFF1H (vector plus immediate)
10 0 - Unallocated.
10 1 0 LD1W (vector plus immediate)
10 1 1 LDFF1W (vector plus immediate)
11 - - Unallocated.
#SVE load and broadcast element
2 16
23 24
13 14
00 00 LD1RB - Encoding
00 01 LD1RB - Encoding
00 10 LD1RB - Encoding
00 11 LD1RB - Encoding
01 00 LD1RSW
01 01 LD1RH - Encoding
01 10 LD1RH - Encoding
01 11 LD1RH - Encoding
10 00 LD1RSH - Encoding
10 01 LD1RSH - Encoding
10 10 LD1RW - Encoding
10 11 LD1RW - Encoding
11 00 LD1RSB - Encoding
11 01 LD1RSB - Encoding
11 10 LD1RSB - Encoding
11 11 LD1RD
#SVE Memory - Contiguous Load -
3 13
21 22
20 20
13 15
00 0 111 SVE contiguous non-temporal load (scalar plus immediate)
00 - 110 SVE contiguous non-temporal load (scalar plus scalar)
!=00 0 111 SVE load multiple structures (scalar plus immediate)
!=00 - 110 SVE load multiple structures (scalar plus scalar)
- 0 001 SVE load and broadcast quadword (scalar plus immediate)
- 0 101 SVE contiguous load (scalar plus immediate)
- 1 001 Unallocated.
- 1 101 SVE contiguous non-fault load (scalar plus immediate)
- 1 111 Unallocated.
- - 000 SVE load and broadcast quadword (scalar plus scalar)
- - 010 SVE contiguous load (scalar plus scalar)
- - 011 SVE contiguous first-fault load (scalar plus scalar)
- - 100 Unallocated.
#SVE contiguous non-temporal load (scalar plus immediate)
1 4
23 24
00 LDNT1B (scalar plus immediate, single register)
01 LDNT1H (scalar plus immediate, single register)
10 LDNT1W (scalar plus immediate, single register)
11 LDNT1D (scalar plus immediate, single register)
#SVE contiguous non-temporal load (scalar plus scalar)
1 4
23 24
00 LDNT1B (scalar plus scalar, single register)
01 LDNT1H (scalar plus scalar, single register)
10 LDNT1W (scalar plus scalar, single register)
11 LDNT1D (scalar plus scalar, single register)
#SVE load multiple structures (scalar plus immediate)
2 12
23 24
21 22
00 01 LD2B (scalar plus immediate)
00 10 LD3B (scalar plus immediate)
00 11 LD4B (scalar plus immediate)
01 01 LD2H (scalar plus immediate)
01 10 LD3H (scalar plus immediate)
01 11 LD4H (scalar plus immediate)
10 01 LD2W (scalar plus immediate)
10 10 LD3W (scalar plus immediate)
10 11 LD4W (scalar plus immediate)
11 01 LD2D (scalar plus immediate)
11 10 LD3D (scalar plus immediate)
11 11 LD4D (scalar plus immediate)
#SVE load multiple structures (scalar plus scalar)
2 12
23 24
21 22
00 01 LD2B (scalar plus scalar)
00 10 LD3B (scalar plus scalar)
00 11 LD4B (scalar plus scalar)
01 01 LD2H (scalar plus scalar)
01 10 LD3H (scalar plus scalar)
01 11 LD4H (scalar plus scalar)
10 01 LD2W (scalar plus scalar)
10 10 LD3W (scalar plus scalar)
10 11 LD4W (scalar plus scalar)
11 01 LD2D (scalar plus scalar)
11 10 LD3D (scalar plus scalar)
11 11 LD4D (scalar plus scalar)
#SVE load and broadcast quadword (scalar plus immediate)
2 9
23 24
21 22
- 1x Unallocated.
00 00 LD1RQB (scalar plus immediate) -
00 01 LD1ROB (scalar plus immediate) FEAT_F64MM
01 00 LD1RQH (scalar plus immediate) -
01 01 LD1ROH (scalar plus immediate) FEAT_F64MM
10 00 LD1RQW (scalar plus immediate) -
10 01 LD1ROW (scalar plus immediate) FEAT_F64MM
11 00 LD1RQD (scalar plus immediate) -
11 01 LD1ROD (scalar plus immediate) FEAT_F64MM
#SVE contiguous load (scalar plus immediate)
1 16
21 24
0000 LD1B (scalar plus immediate, single register) - Encoding
0001 LD1B (scalar plus immediate, single register) - Encoding
0010 LD1B (scalar plus immediate, single register) - Encoding
0011 LD1B (scalar plus immediate, single register) - Encoding
0100 LD1SW (scalar plus immediate)
0101 LD1H (scalar plus immediate, single register) - Encoding
0110 LD1H (scalar plus immediate, single register) - Encoding
0111 LD1H (scalar plus immediate, single register) - Encoding
1000 LD1SH (scalar plus immediate) - Encoding
1001 LD1SH (scalar plus immediate) - Encoding
1010 LD1W (scalar plus immediate, single register) - Encoding
1011 LD1W (scalar plus immediate, single register) - Encoding
1100 LD1SB (scalar plus immediate) - Encoding
1101 LD1SB (scalar plus immediate) - Encoding
1110 LD1SB (scalar plus immediate) - Encoding
1111 LD1D (scalar plus immediate, single register)
#SVE contiguous non-fault load (scalar plus immediate)
1 16
21 24
0000 LDNF1B - Encoding
0001 LDNF1B - Encoding
0010 LDNF1B - Encoding
0011 LDNF1B - Encoding
0100 LDNF1SW
0101 LDNF1H - Encoding
0110 LDNF1H - Encoding
0111 LDNF1H - Encoding
1000 LDNF1SH - Encoding
1001 LDNF1SH - Encoding
1010 LDNF1W - Encoding
1011 LDNF1W - Encoding
1100 LDNF1SB - Encoding
1101 LDNF1SB - Encoding
1110 LDNF1SB - Encoding
1111 LDNF1D
#SVE load and broadcast quadword (scalar plus scalar)
2 9
23 24
21 22
- 1x Unallocated.
00 00 LD1RQB (scalar plus scalar) -
00 01 LD1ROB (scalar plus scalar) FEAT_F64MM
01 00 LD1RQH (scalar plus scalar) -
01 01 LD1ROH (scalar plus scalar) FEAT_F64MM
10 00 LD1RQW (scalar plus scalar) -
10 01 LD1ROW (scalar plus scalar) FEAT_F64MM
11 00 LD1RQD (scalar plus scalar) -
11 01 LD1ROD (scalar plus scalar) FEAT_F64MM
#SVE contiguous load (scalar plus scalar)
1 16
21 24
0000 LD1B (scalar plus scalar, single register) - Encoding
0001 LD1B (scalar plus scalar, single register) - Encoding
0010 LD1B (scalar plus scalar, single register) - Encoding
0011 LD1B (scalar plus scalar, single register) - Encoding
0100 LD1SW (scalar plus scalar)
0101 LD1H (scalar plus scalar, single register) - Encoding
0110 LD1H (scalar plus scalar, single register) - Encoding
0111 LD1H (scalar plus scalar, single register) - Encoding
1000 LD1SH (scalar plus scalar) - Encoding
1001 LD1SH (scalar plus scalar) - Encoding
1010 LD1W (scalar plus scalar, single register) - Encoding
1011 LD1W (scalar plus scalar, single register) - Encoding
1100 LD1SB (scalar plus scalar) - Encoding
1101 LD1SB (scalar plus scalar) - Encoding
1110 LD1SB (scalar plus scalar) - Encoding
1111 LD1D (scalar plus scalar, single register)
#SVE contiguous first-fault load (scalar plus scalar)
1 16
21 24
0000 LDFF1B (scalar plus scalar) - Encoding
0001 LDFF1B (scalar plus scalar) - Encoding
0010 LDFF1B (scalar plus scalar) - Encoding
0011 LDFF1B (scalar plus scalar) - Encoding
0100 LDFF1SW (scalar plus scalar)
0101 LDFF1H (scalar plus scalar) - Encoding
0110 LDFF1H (scalar plus scalar) - Encoding
0111 LDFF1H (scalar plus scalar) - Encoding
1000 LDFF1SH (scalar plus scalar) - Encoding
1001 LDFF1SH (scalar plus scalar) - Encoding
1010 LDFF1W (scalar plus scalar) - Encoding
1011 LDFF1W (scalar plus scalar) - Encoding
1100 LDFF1SB (scalar plus scalar) - Encoding
1101 LDFF1SB (scalar plus scalar) - Encoding
1110 LDFF1SB (scalar plus scalar) - Encoding
1111 LDFF1D (scalar plus scalar)
#SVE Memory - 64-bit Gather -
4 13
23 24
21 22
13 15
4 4
00 01 0xx 1 Unallocated.
00 11 1xx 0 SVE 64-bit gather prefetch (scalar plus 64-bit scaled offsets)
00 11 - 1 Unallocated.
00 x1 0xx 0 SVE 64-bit gather prefetch (scalar plus unpacked 32-bit scaled offsets)
!=00 11 1xx - SVE 64-bit gather load (scalar plus 64-bit scaled offsets)
!=00 x1 0xx - SVE 64-bit gather load (scalar plus 32-bit unpacked scaled offsets)
- 00 101 - Unallocated.
- 00 111 0 SVE 64-bit gather prefetch (vector plus immediate)
- 00 111 1 Unallocated.
- 00 1x0 - SVE2 64-bit gather non-temporal load (vector plus scalar)
- 01 1xx - SVE 64-bit gather load (vector plus immediate)
- 10 1xx - SVE 64-bit gather load (scalar plus 64-bit unscaled offsets)
- x0 0xx - SVE 64-bit gather load (scalar plus unpacked 32-bit unscaled offsets)
#SVE 64-bit gather prefetch (scalar plus 64-bit scaled offsets)
1 4
13 14
00 PRFB (scalar plus vector)
01 PRFH (scalar plus vector)
10 PRFW (scalar plus vector)
11 PRFD (scalar plus vector)
#SVE 64-bit gather prefetch (scalar plus unpacked 32-bit scaled offsets)
1 4
13 14
00 PRFB (scalar plus vector)
01 PRFH (scalar plus vector)
10 PRFW (scalar plus vector)
11 PRFD (scalar plus vector)
#SVE 64-bit gather load (scalar plus 64-bit scaled offsets)
3 11
23 24
14 14
13 13
01 0 0 LD1SH (scalar plus vector)
01 0 1 LDFF1SH (scalar plus vector)
01 1 0 LD1H (scalar plus vector)
01 1 1 LDFF1H (scalar plus vector)
10 0 0 LD1SW (scalar plus vector)
10 0 1 LDFF1SW (scalar plus vector)
10 1 0 LD1W (scalar plus vector)
10 1 1 LDFF1W (scalar plus vector)
11 0 - Unallocated.
11 1 0 LD1D (scalar plus vector)
11 1 1 LDFF1D (scalar plus vector)
#SVE 64-bit gather load (scalar plus 32-bit unpacked scaled offsets)
3 11
23 24
14 14
13 13
01 0 0 LD1SH (scalar plus vector)
01 0 1 LDFF1SH (scalar plus vector)
01 1 0 LD1H (scalar plus vector)
01 1 1 LDFF1H (scalar plus vector)
10 0 0 LD1SW (scalar plus vector)
10 0 1 LDFF1SW (scalar plus vector)
10 1 0 LD1W (scalar plus vector)
10 1 1 LDFF1W (scalar plus vector)
11 0 - Unallocated.
11 1 0 LD1D (scalar plus vector)
11 1 1 LDFF1D (scalar plus vector)
#SVE 64-bit gather prefetch (vector plus immediate)
1 4
23 24
00 PRFB (vector plus immediate)
01 PRFH (vector plus immediate)
10 PRFW (vector plus immediate)
11 PRFD (vector plus immediate)
#SVE2 64-bit gather non-temporal load (vector plus scalar)
2 8
23 24
14 14
00 0 LDNT1SB
00 1 LDNT1B (vector plus scalar)
01 0 LDNT1SH
01 1 LDNT1H (vector plus scalar)
10 0 LDNT1SW
10 1 LDNT1W (vector plus scalar)
11 0 Unallocated.
11 1 LDNT1D (vector plus scalar)
#SVE 64-bit gather load (vector plus immediate)
3 15
23 24
14 14
13 13
00 0 0 LD1SB (vector plus immediate)
00 0 1 LDFF1SB (vector plus immediate)
00 1 0 LD1B (vector plus immediate)
00 1 1 LDFF1B (vector plus immediate)
01 0 0 LD1SH (vector plus immediate)
01 0 1 LDFF1SH (vector plus immediate)
01 1 0 LD1H (vector plus immediate)
01 1 1 LDFF1H (vector plus immediate)
10 0 0 LD1SW (vector plus immediate)
10 0 1 LDFF1SW (vector plus immediate)
10 1 0 LD1W (vector plus immediate)
10 1 1 LDFF1W (vector plus immediate)
11 0 - Unallocated.
11 1 0 LD1D (vector plus immediate)
11 1 1 LDFF1D (vector plus immediate)
#SVE 64-bit gather load (scalar plus 64-bit unscaled offsets)
3 15
23 24
14 14
13 13
00 0 0 LD1SB (scalar plus vector)
00 0 1 LDFF1SB (scalar plus vector)
00 1 0 LD1B (scalar plus vector)
00 1 1 LDFF1B (scalar plus vector)
01 0 0 LD1SH (scalar plus vector)
01 0 1 LDFF1SH (scalar plus vector)
01 1 0 LD1H (scalar plus vector)
01 1 1 LDFF1H (scalar plus vector)
10 0 0 LD1SW (scalar plus vector)
10 0 1 LDFF1SW (scalar plus vector)
10 1 0 LD1W (scalar plus vector)
10 1 1 LDFF1W (scalar plus vector)
11 0 - Unallocated.
11 1 0 LD1D (scalar plus vector)
11 1 1 LDFF1D (scalar plus vector)
#SVE 64-bit gather load (scalar plus unpacked 32-bit unscaled offsets)
3 15
23 24
14 14
13 13
00 0 0 LD1SB (scalar plus vector)
00 0 1 LDFF1SB (scalar plus vector)
00 1 0 LD1B (scalar plus vector)
00 1 1 LDFF1B (scalar plus vector)
01 0 0 LD1SH (scalar plus vector)
01 0 1 LDFF1SH (scalar plus vector)
01 1 0 LD1H (scalar plus vector)
01 1 1 LDFF1H (scalar plus vector)
10 0 0 LD1SW (scalar plus vector)
10 0 1 LDFF1SW (scalar plus vector)
10 1 0 LD1W (scalar plus vector)
10 1 1 LDFF1W (scalar plus vector)
11 0 - Unallocated.
11 1 0 LD1D (scalar plus vector)
11 1 1 LDFF1D (scalar plus vector)
#SVE Memory - Contiguous Store and Unsized Contiguous -
3 7
22 24
14 14
4 4
0xx 0 - Unallocated.
10x 0 - Unallocated.
110 0 0 STR (predicate)
110 0 1 Unallocated.
110 1 - STR (vector)
111 0 - Unallocated.
!=110 1 - SVE contiguous store (scalar plus scalar)
#SVE contiguous store (scalar plus scalar)
2 5
22 24
21 21
00x - ST1B (scalar plus scalar, single register)
01x - ST1H (scalar plus scalar, single register)
101 - ST1W (scalar plus scalar, single register)
111 0 Unallocated.
111 1 ST1D (scalar plus scalar, single register)
#SVE Memory - Non-temporal and Quadword Scatter Store -
2 5
22 24
21 21
00x - ST1B (scalar plus scalar, single register)
01x - ST1H (scalar plus scalar, single register)
101 - ST1W (scalar plus scalar, single register)
111 0 Unallocated.
111 1 ST1D (scalar plus scalar, single register)
#SVE Memory - Non-temporal and Multi-register Contiguous Store -
1 2
21 22
00 SVE contiguous non-temporal store (scalar plus scalar)
!=00 SVE store multiple structures (scalar plus scalar)
#SVE contiguous non-temporal store (scalar plus scalar)
1 4
23 24
00 STNT1B (scalar plus scalar, single register)
01 STNT1H (scalar plus scalar, single register)
10 STNT1W (scalar plus scalar, single register)
11 STNT1D (scalar plus scalar, single register)
#SVE store multiple structures (scalar plus scalar)
2 12
23 24
21 22
00 01 ST2B (scalar plus scalar)
00 10 ST3B (scalar plus scalar)
00 11 ST4B (scalar plus scalar)
01 01 ST2H (scalar plus scalar)
01 10 ST3H (scalar plus scalar)
01 11 ST4H (scalar plus scalar)
10 01 ST2W (scalar plus scalar)
10 10 ST3W (scalar plus scalar)
10 11 ST4W (scalar plus scalar)
11 01 ST2D (scalar plus scalar)
11 10 ST3D (scalar plus scalar)
11 11 ST4D (scalar plus scalar)
#SVE Memory - Scatter with Optional Sign Extend -
1 4
21 22
00 SVE 64-bit scatter store (scalar plus unpacked 32-bit unscaled offsets)
01 SVE 64-bit scatter store (scalar plus unpacked 32-bit scaled offsets)
10 SVE 32-bit scatter store (scalar plus 32-bit unscaled offsets)
11 SVE 32-bit scatter store (scalar plus 32-bit scaled offsets)
#SVE 64-bit scatter store (scalar plus unpacked 32-bit unscaled offsets)
1 4
23 24
00 ST1B (scalar plus vector)
01 ST1H (scalar plus vector)
10 ST1W (scalar plus vector)
11 ST1D (scalar plus vector)
#SVE 64-bit scatter store (scalar plus unpacked 32-bit scaled offsets)
1 4
23 24
00 Unallocated.
01 ST1H (scalar plus vector)
10 ST1W (scalar plus vector)
11 ST1D (scalar plus vector)
#SVE 32-bit scatter store (scalar plus 32-bit unscaled offsets)
1 4
23 24
00 ST1B (scalar plus vector)
01 ST1H (scalar plus vector)
10 ST1W (scalar plus vector)
11 Unallocated.
#SVE 32-bit scatter store (scalar plus 32-bit scaled offsets)
1 4
23 24
00 Unallocated.
01 ST1H (scalar plus vector)
10 ST1W (scalar plus vector)
11 Unallocated.
#SVE Memory - Scatter -
1 4
21 22
00 SVE 64-bit scatter store (scalar plus 64-bit unscaled offsets)
01 SVE 64-bit scatter store (scalar plus 64-bit scaled offsets)
10 SVE 64-bit scatter store (vector plus immediate)
11 SVE 32-bit scatter store (vector plus immediate)
#SVE 64-bit scatter store (scalar plus 64-bit unscaled offsets)
1 4
23 24
00 ST1B (scalar plus vector)
01 ST1H (scalar plus vector)
10 ST1W (scalar plus vector)
11 ST1D (scalar plus vector)
#SVE 64-bit scatter store (scalar plus 64-bit scaled offsets)
1 4
23 24
00 Unallocated.
01 ST1H (scalar plus vector)
10 ST1W (scalar plus vector)
11 ST1D (scalar plus vector)
#SVE 64-bit scatter store (vector plus immediate)
1 4
23 24
00 ST1B (vector plus immediate)
01 ST1H (vector plus immediate)
10 ST1W (vector plus immediate)
11 ST1D (vector plus immediate)
#SVE 32-bit scatter store (vector plus immediate)
1 4
23 24
00 ST1B (vector plus immediate)
01 ST1H (vector plus immediate)
10 ST1W (vector plus immediate)
11 Unallocated.
#SVE Memory - Contiguous Store with Immediate Offset -
2 3
21 22
20 20
00 1 SVE contiguous non-temporal store (scalar plus immediate)
!=00 1 SVE store multiple structures (scalar plus immediate)
- 0 SVE contiguous store (scalar plus immediate)
#SVE contiguous non-temporal store (scalar plus immediate)
1 4
23 24
00 STNT1B (scalar plus immediate, single register)
01 STNT1H (scalar plus immediate, single register)
10 STNT1W (scalar plus immediate, single register)
11 STNT1D (scalar plus immediate, single register)
#SVE store multiple structures (scalar plus immediate)
2 12
23 24
21 22
00 01 ST2B (scalar plus immediate)
00 10 ST3B (scalar plus immediate)
00 11 ST4B (scalar plus immediate)
01 01 ST2H (scalar plus immediate)
01 10 ST3H (scalar plus immediate)
01 11 ST4H (scalar plus immediate)
10 01 ST2W (scalar plus immediate)
10 10 ST3W (scalar plus immediate)
10 11 ST4W (scalar plus immediate)
11 01 ST2D (scalar plus immediate)
11 10 ST3D (scalar plus immediate)
11 11 ST4D (scalar plus immediate)
#SVE contiguous store (scalar plus immediate)
2 6
23 24
21 22
00 - ST1B (scalar plus immediate, single register)
01 - ST1H (scalar plus immediate, single register)
1x 0x Unallocated.
10 1x ST1W (scalar plus immediate, single register)
11 10 Unallocated.
11 11 ST1D (scalar plus immediate, single register)
#Data Processing -- Immediate
1 7
23 25
00x PC-rel. addressing
010 Add/subtract (immediate)
011 Add/subtract (immediate, with tags)
100 Logical (immediate)
101 Move wide (immediate)
110 Bitfield
111 Extract
#PC-rel. addressing
1 2
31 31
0 ADR
1 ADRP
#Add/subtract (immediate)
3 8
31 31
30 30
29 29
0 0 0 ADD (immediate) - 32-bit variant
0 0 1 ADDS (immediate) - 32-bit variant
0 1 0 SUB (immediate) - 32-bit variant
0 1 1 SUBS (immediate) - 32-bit variant
1 0 0 ADD (immediate) - 64-bit variant
1 0 1 ADDS (immediate) - 64-bit variant
1 1 0 SUB (immediate) - 64-bit variant
1 1 1 SUBS (immediate) - 64-bit variant
#Add/subtract (immediate, with tags)
4 5
31 31
30 30
29 29
22 22
- - - 1 Unallocated.
0 - - 0 Unallocated.
1 - 1 0 Unallocated.
1 0 0 0 ADDG FEAT_MTE
1 1 0 0 SUBG FEAT_MTE
#Logical (immediate)
3 9
31 31
29 30
22 22
0 - 1 Unallocated.
0 00 0 AND (immediate) - 32-bit variant
0 01 0 ORR (immediate) - 32-bit variant
0 10 0 EOR (immediate) - 32-bit variant
0 11 0 ANDS (immediate) - 32-bit variant
1 00 - AND (immediate) - 64-bit variant
1 01 - ORR (immediate) - 64-bit variant
1 10 - EOR (immediate) - 64-bit variant
1 11 - ANDS (immediate) - 64-bit variant
#Move wide (immediate)
3 8
31 31
29 30
21 22
- 01 - Unallocated.
0 - 1x Unallocated.
0 00 0x MOVN - 32-bit variant
0 10 0x MOVZ - 32-bit variant
0 11 0x MOVK - 32-bit variant
1 00 - MOVN - 64-bit variant
1 10 - MOVZ - 64-bit variant
1 11 - MOVK - 64-bit variant
#Bitfield
3 9
31 31
29 30
22 22
- 11 - Unallocated.
0 - 1 Unallocated.
0 00 0 SBFM - 32-bit variant
0 01 0 BFM - 32-bit variant
0 10 0 UBFM - 32-bit variant
1 - 0 Unallocated.
1 00 1 SBFM - 64-bit variant
1 01 1 BFM - 64-bit variant
1 10 1 UBFM - 64-bit variant
#Extract
5 8
31 31
29 30
22 22
21 21
10 15
- x1 - - - Unallocated.
- 00 - 1 - Unallocated.
- 1x - - - Unallocated.
0 - - - 1xxxxx Unallocated.
0 - 1 - - Unallocated.
0 00 0 0 0xxxxx EXTR - 32-bit variant
1 - 0 - - Unallocated.
1 00 1 0 - EXTR - 64-bit variant
#Branches, Exception Generating and System instructions
3 13
29 31
12 25
0 4
010 0xxxxxxxxxxxxx - Conditional branch (immediate)
110 00xxxxxxxxxxxx - Exception generation
110 01000000110001 - System instructions with register argument
110 01000000110010 11111 Hints
110 01000000110011 - Barriers
110 0100000xxx0100 - PSTATE
110 0100100xxxxxxx - System with result
110 0100x01xxxxxxx - System instructions
110 0100x1xxxxxxxx - System register move
110 1xxxxxxxxxxxxx - Unconditional branch (register)
x00 - - Unconditional branch (immediate)
x01 0xxxxxxxxxxxxx - Compare and branch (immediate)
x01 1xxxxxxxxxxxxx - Test and branch (immediate)
#Conditional branch (immediate)
2 3
24 24
4 4
0 0 B.cond -
0 1 BC.cond FEAT_HBC
1 - Unallocated.
#Exception generation
3 23
21 23
2 4
0 1
- 001 - Unallocated.
- 01x - Unallocated.
- 1xx - Unallocated.
000 000 00 Unallocated.
000 000 01 SVC -
000 000 10 HVC -
000 000 11 SMC -
001 000 x1 Unallocated.
001 000 00 BRK -
001 000 1x Unallocated.
010 000 x1 Unallocated.
010 000 00 HLT -
010 000 1x Unallocated.
011 000 00 TCANCEL FEAT_TME
011 000 01 Unallocated.
011 000 1x Unallocated.
100 000 - Unallocated.
101 000 00 Unallocated.
101 000 01 DCPS1 -
101 000 10 DCPS2 -
101 000 11 DCPS3 -
110 000 - Unallocated.
111 000 - Unallocated.
#System instructions with register argument
2 5
8 11
5 7
!=0000 - Unallocated.
0000 000 WFET FEAT_WFxT
0000 001 WFIT FEAT_WFxT
0000 01x Unallocated.
0000 1xx Unallocated.
#Hints
2 26
8 11
5 7
- - HINT -
0000 000 NOP -
0000 001 YIELD -
0000 010 WFE -
0000 011 WFI -
0000 100 SEV -
0000 101 SEVL -
0000 110 DGH FEAT_DGH
0000 111 XPACD, XPACI, XPACLRI FEAT_PAuth
0001 000 PACIA, PACIA1716, PACIASP, PACIAZ, PACIZA - PACIA1716 variant FEAT_PAuth
0001 010 PACIB, PACIB1716, PACIBSP, PACIBZ, PACIZB - PACIB1716 variant FEAT_PAuth
0001 100 AUTIA, AUTIA1716, AUTIASP, AUTIAZ, AUTIZA - AUTIA1716 variant FEAT_PAuth
0001 110 AUTIB, AUTIB1716, AUTIBSP, AUTIBZ, AUTIZB - AUTIB1716 variant FEAT_PAuth
0010 000 ESB FEAT_RAS
0010 001 PSB CSYNC FEAT_SPE
0010 010 TSB CSYNC FEAT_TRF
0010 100 CSDB -
0011 000 PACIA, PACIA1716, PACIASP, PACIAZ, PACIZA - PACIAZ variant FEAT_PAuth
0011 001 PACIA, PACIA1716, PACIASP, PACIAZ, PACIZA - PACIASP variant FEAT_PAuth
0011 010 PACIB, PACIB1716, PACIBSP, PACIBZ, PACIZB - PACIBZ variant FEAT_PAuth
0011 011 PACIB, PACIB1716, PACIBSP, PACIBZ, PACIZB - PACIBSP variant FEAT_PAuth
0011 100 AUTIA, AUTIA1716, AUTIASP, AUTIAZ, AUTIZA - AUTIAZ variant FEAT_PAuth
0011 101 AUTIA, AUTIA1716, AUTIASP, AUTIAZ, AUTIZA - AUTIASP variant FEAT_PAuth
0011 110 AUTIB, AUTIB1716, AUTIBSP, AUTIBZ, AUTIZB - AUTIBZ variant FEAT_PAuth
0011 111 AUTIB, AUTIB1716, AUTIBSP, AUTIBZ, AUTIZB - AUTIBSP variant FEAT_PAuth
0100 xx0 BTI FEAT_BTI
#Barriers
3 16
8 11
5 7
0 4
- 000 - Unallocated.
- 001 !=11111 Unallocated.
- 010 11111 CLREX -
- 100 11111 DSB - Encoding -
- 101 11111 DMB -
- 110 11111 ISB -
- 111 !=11111 Unallocated.
- 111 11111 SB FEAT_SB
xx0x 001 11111 Unallocated.
xx10 001 11111 DSB - Encoding FEAT_XS
xx11 001 11111 Unallocated.
0000 011 11111 TCOMMIT FEAT_TME
0001 011 - Unallocated.
001x 011 - Unallocated.
01xx 011 - Unallocated.
1xxx 011 - Unallocated.
#PSTATE
3 5
16 18
5 7
0 4
- - !=11111 Unallocated.
- - 11111 MSR (immediate) -
000 000 11111 CFINV FEAT_FlagM
000 001 11111 XAFLAG FEAT_FlagM2
000 010 11111 AXFLAG FEAT_FlagM2
#System with result
4 6
16 18
15 22
8 11
0 4
!=011 - - - Unallocated.
011 !=0011 - - Unallocated.
011 0011 - !=011 Unallocated.
011 0011 !=000x 011 Unallocated.
011 0011 0000 011 TSTART FEAT_TME
011 0011 0001 011 TTEST FEAT_TME
#System instructions
1 2
21 21
0 SYS
1 SYSL
#System register move
1 2
21 21
0 MSR (register)
1 MRS
#Unconditional branch (register)
5 56
21 24
16 20
10 15
5 9
0 4
- !=11111 - - - Unallocated.
0000 11111 000000 - !=00000 Unallocated.
0000 11111 000000 - 00000 BR -
0000 11111 000001 - - Unallocated.
0000 11111 000010 - !=11111 Unallocated.
0000 11111 000010 - 11111 BRAA, BRAAZ, BRAB, BRABZ - Key A, zero modifier variant FEAT_PAuth
0000 11111 000011 - !=11111 Unallocated.
0000 11111 000011 - 11111 BRAA, BRAAZ, BRAB, BRABZ - Key B, zero modifier variant FEAT_PAuth
0000 11111 0001xx - - Unallocated.
0000 11111 001xxx - - Unallocated.
0000 11111 01xxxx - - Unallocated.
0000 11111 1xxxxx - - Unallocated.
0001 11111 000000 - !=00000 Unallocated.
0001 11111 000000 - 00000 BLR -
0001 11111 000001 - - Unallocated.
0001 11111 000010 - !=11111 Unallocated.
0001 11111 000010 - 11111 BLRAA, BLRAAZ, BLRAB, BLRABZ - Key A, zero modifier variant FEAT_PAuth
0001 11111 000011 - !=11111 Unallocated.
0001 11111 000011 - 11111 BLRAA, BLRAAZ, BLRAB, BLRABZ - Key B, zero modifier variant FEAT_PAuth
0001 11111 0001xx - - Unallocated.
0001 11111 001xxx - - Unallocated.
0001 11111 01xxxx - - Unallocated.
0001 11111 1xxxxx - - Unallocated.
0010 11111 000000 - !=00000 Unallocated.
0010 11111 000000 - 00000 RET -
0010 11111 000001 - - Unallocated.
0010 11111 000010 !=11111 !=11111 Unallocated.
0010 11111 000010 !=11111 11111 Unallocated.
0010 11111 000010 11111 !=11111 Unallocated.
0010 11111 000010 11111 11111 RETAA, RETAB - RETAA variant FEAT_PAuth
0010 11111 000011 !=11111 !=11111 Unallocated.
0010 11111 000011 !=11111 11111 Unallocated.
0010 11111 000011 11111 !=11111 Unallocated.
0010 11111 000011 11111 11111 RETAA, RETAB - RETAB variant FEAT_PAuth
0010 11111 0001xx - - Unallocated.
0010 11111 001xxx - - Unallocated.
0010 11111 01xxxx - - Unallocated.
0010 11111 1xxxxx - - Unallocated.
0011 11111 - - - Unallocated.
0100 11111 000000 !=11111 !=00000 Unallocated.
0100 11111 000000 !=11111 00000 Unallocated.
0100 11111 000000 11111 !=00000 Unallocated.
0100 11111 000000 11111 00000 ERET -
0100 11111 000001 - - Unallocated.
0100 11111 000010 !=11111 !=11111 Unallocated.
0100 11111 000010 !=11111 11111 Unallocated.
0100 11111 000010 11111 !=11111 Unallocated.
0100 11111 000010 11111 11111 ERETAA, ERETAB - ERETAA variant FEAT_PAuth
0100 11111 000011 !=11111 !=11111 Unallocated.
0100 11111 000011 !=11111 11111 Unallocated.
0100 11111 000011 11111 !=11111 Unallocated.
0100 11111 000011 11111 11111 ERETAA, ERETAB - ERETAB variant FEAT_PAuth
0100 11111 0001xx - - Unallocated.
0100 11111 001xxx - - Unallocated.
0100 11111 01xxxx - - Unallocated.
0100 11111 1xxxxx - - Unallocated.
#Unconditional branch (immediate)
1 2
31 31
0 B
1 BL
#Compare and branch (immediate)
2 4
31 31
24 24
0 0 CBZ - 32-bit variant
0 1 CBNZ - 32-bit variant
1 0 CBZ - 64-bit variant
1 1 CBNZ - 64-bit variant
#Test and branch (immediate)
1 2
24 24
0 TBZ
1 TBNZ
#Loads and Stores
5 32
28 31
26 26
23 24
16 21
10 11
0x00 0 00 1xxxxx - Compare and swap pair
0x00 1 00 000000 - Advanced SIMD load/store multiple structures
0x00 1 01 0xxxxx - Advanced SIMD load/store multiple structures (post-indexed)
0x00 1 0x 1xxxxx - Unallocated.
0x00 1 10 x00000 - Advanced SIMD load/store single structure
0x00 1 11 - - Advanced SIMD load/store single structure (post-indexed)
0x00 1 x0 x1xxxx - Unallocated.
0x00 1 x0 xx1xxx - Unallocated.
0x00 1 x0 xxx1xx - Unallocated.
0x00 1 x0 xxxx1x - Unallocated.
0x00 1 x0 xxxxx1 - Unallocated.
1101 0 1x 1xxxxx - Load/store memory tags
1x00 0 00 1xxxxx - Load/store exclusive pair
1x00 1 - - - Unallocated.
xx00 0 00 0xxxxx - Load/store exclusive register
xx00 0 01 0xxxxx - Load/store ordered
xx00 0 01 1xxxxx - Compare and swap
xx01 0 1x 0xxxxx 00 LDAPR/STLR (unscaled immediate)
xx01 - 0x - - Load register (literal)
xx01 - 1x 0xxxxx 01 Memory Copy and Memory Set
xx10 - 00 - - Load/store no-allocate pair (offset)
xx10 - 01 - - Load/store register pair (post-indexed)
xx10 - 10 - - Load/store register pair (offset)
xx10 - 11 - - Load/store register pair (pre-indexed)
xx11 - 0x 0xxxxx 00 Load/store register (unscaled immediate)
xx11 - 0x 0xxxxx 01 Load/store register (immediate post-indexed)
xx11 - 0x 0xxxxx 10 Load/store register (unprivileged)
xx11 - 0x 0xxxxx 11 Load/store register (immediate pre-indexed)
xx11 - 0x 1xxxxx 00 Atomic memory operations
xx11 - 0x 1xxxxx 10 Load/store register (register offset)
xx11 - 0x 1xxxxx x1 Load/store register (pac)
xx11 - 1x - - Load/store register (unsigned immediate)
#Compare and swap pair
4 9
30 30
22 22
15 15
10 14
- - - !=11111 Unallocated.
0 0 0 11111 CASP, CASPA, CASPAL, CASPL - 32-bit CASP variant FEAT_LSE
0 0 1 11111 CASP, CASPA, CASPAL, CASPL - 32-bit CASPL variant FEAT_LSE
0 1 0 11111 CASP, CASPA, CASPAL, CASPL - 32-bit CASPA variant FEAT_LSE
0 1 1 11111 CASP, CASPA, CASPAL, CASPL - 32-bit CASPAL variant FEAT_LSE
1 0 0 11111 CASP, CASPA, CASPAL, CASPL - 64-bit CASP variant FEAT_LSE
1 0 1 11111 CASP, CASPA, CASPAL, CASPL - 64-bit CASPL variant FEAT_LSE
1 1 0 11111 CASP, CASPA, CASPAL, CASPL - 64-bit CASPA variant FEAT_LSE
1 1 1 11111 CASP, CASPA, CASPAL, CASPL - 64-bit CASPAL variant FEAT_LSE
#Advanced SIMD load/store multiple structures
2 26
22 22
12 15
0 0000 ST4 (multiple structures)
0 0001 Unallocated.
0 0010 ST1 (multiple structures) - Four registers variant
0 0011 Unallocated.
0 0100 ST3 (multiple structures)
0 0101 Unallocated.
0 0110 ST1 (multiple structures) - Three registers variant
0 0111 ST1 (multiple structures) - One register variant
0 1000 ST2 (multiple structures)
0 1001 Unallocated.
0 1010 ST1 (multiple structures) - Two registers variant
0 1011 Unallocated.
0 11xx Unallocated.
1 0000 LD4 (multiple structures)
1 0001 Unallocated.
1 0010 LD1 (multiple structures) - Four registers variant
1 0011 Unallocated.
1 0100 LD3 (multiple structures)
1 0101 Unallocated.
1 0110 LD1 (multiple structures) - Three registers variant
1 0111 LD1 (multiple structures) - One register variant
1 1000 LD2 (multiple structures)
1 1001 Unallocated.
1 1010 LD1 (multiple structures) - Two registers variant
1 1011 Unallocated.
1 11xx Unallocated.
#Advanced SIMD load/store multiple structures (post-indexed)
3 40
22 22
16 20
12 15
0 - 0001 Unallocated.
0 - 0011 Unallocated.
0 - 0101 Unallocated.
0 - 1001 Unallocated.
0 - 1011 Unallocated.
0 - 11xx Unallocated.
0 !=11111 0000 ST4 (multiple structures) - Register offset variant
0 !=11111 0010 ST1 (multiple structures) - Four registers, register offset variant
0 !=11111 0100 ST3 (multiple structures) - Register offset variant
0 !=11111 0110 ST1 (multiple structures) - Three registers, register offset variant
0 !=11111 0111 ST1 (multiple structures) - One register, register offset variant
0 !=11111 1000 ST2 (multiple structures) - Register offset variant
0 !=11111 1010 ST1 (multiple structures) - Two registers, register offset variant
0 11111 0000 ST4 (multiple structures) - Immediate offset variant
0 11111 0010 ST1 (multiple structures) - Four registers, immediate offset variant
0 11111 0100 ST3 (multiple structures) - Immediate offset variant
0 11111 0110 ST1 (multiple structures) - Three registers, immediate offset variant
0 11111 0111 ST1 (multiple structures) - One register, immediate offset variant
0 11111 1000 ST2 (multiple structures) - Immediate offset variant
0 11111 1010 ST1 (multiple structures) - Two registers, immediate offset variant
1 - 0001 Unallocated.
1 - 0011 Unallocated.
1 - 0101 Unallocated.
1 - 1001 Unallocated.
1 - 1011 Unallocated.
1 - 11xx Unallocated.
1 !=11111 0000 LD4 (multiple structures) - Register offset variant
1 !=11111 0010 LD1 (multiple structures) - Four registers, register offset variant
1 !=11111 0100 LD3 (multiple structures) - Register offset variant
1 !=11111 0110 LD1 (multiple structures) - Three registers, register offset variant
1 !=11111 0111 LD1 (multiple structures) - One register, register offset variant
1 !=11111 1000 LD2 (multiple structures) - Register offset variant
1 !=11111 1010 LD1 (multiple structures) - Two registers, register offset variant
1 11111 0000 LD4 (multiple structures) - Immediate offset variant
1 11111 0010 LD1 (multiple structures) - Four registers, immediate offset variant
1 11111 0100 LD3 (multiple structures) - Immediate offset variant
1 11111 0110 LD1 (multiple structures) - Three registers, immediate offset variant
1 11111 0111 LD1 (multiple structures) - One register, immediate offset variant
1 11111 1000 LD2 (multiple structures) - Immediate offset variant
1 11111 1010 LD1 (multiple structures) - Two registers, immediate offset variant
#Advanced SIMD load/store single structure
5 71
22 22
21 21
13 15
12 12
10 11
0 - 11x - - Unallocated.
0 0 000 - - ST1 (single structure) - 8-bit variant
0 0 001 - - ST3 (single structure) - 8-bit variant
0 0 010 - x0 ST1 (single structure) - 16-bit variant
0 0 010 - x1 Unallocated.
0 0 011 - x0 ST3 (single structure) - 16-bit variant
0 0 011 - x1 Unallocated.
0 0 100 - 00 ST1 (single structure) - 32-bit variant
0 0 100 - 1x Unallocated.
0 0 100 0 01 ST1 (single structure) - 64-bit variant
0 0 100 1 01 Unallocated.
0 0 101 - 00 ST3 (single structure) - 32-bit variant
0 0 101 - 10 Unallocated.
0 0 101 0 01 ST3 (single structure) - 64-bit variant
0 0 101 0 11 Unallocated.
0 0 101 1 x1 Unallocated.
0 1 000 - - ST2 (single structure) - 8-bit variant
0 1 001 - - ST4 (single structure) - 8-bit variant
0 1 010 - x0 ST2 (single structure) - 16-bit variant
0 1 010 - x1 Unallocated.
0 1 011 - x0 ST4 (single structure) - 16-bit variant
0 1 011 - x1 Unallocated.
0 1 100 - 00 ST2 (single structure) - 32-bit variant
0 1 100 - 10 Unallocated.
0 1 100 0 01 ST2 (single structure) - 64-bit variant
0 1 100 0 11 Unallocated.
0 1 100 1 x1 Unallocated.
0 1 101 - 00 ST4 (single structure) - 32-bit variant
0 1 101 - 10 Unallocated.
0 1 101 0 01 ST4 (single structure) - 64-bit variant
0 1 101 0 11 Unallocated.
0 1 101 1 x1 Unallocated.
1 0 000 - - LD1 (single structure) - 8-bit variant
1 0 001 - - LD3 (single structure) - 8-bit variant
1 0 010 - x0 LD1 (single structure) - 16-bit variant
1 0 010 - x1 Unallocated.
1 0 011 - x0 LD3 (single structure) - 16-bit variant
1 0 011 - x1 Unallocated.
1 0 100 - 00 LD1 (single structure) - 32-bit variant
1 0 100 - 1x Unallocated.
1 0 100 0 01 LD1 (single structure) - 64-bit variant
1 0 100 1 01 Unallocated.
1 0 101 - 00 LD3 (single structure) - 32-bit variant
1 0 101 - 10 Unallocated.
1 0 101 0 01 LD3 (single structure) - 64-bit variant
1 0 101 0 11 Unallocated.
1 0 101 1 x1 Unallocated.
1 0 110 0 - LD1R
1 0 110 1 - Unallocated.
1 0 111 0 - LD3R
1 0 111 1 - Unallocated.
1 1 000 - - LD2 (single structure) - 8-bit variant
1 1 001 - - LD4 (single structure) - 8-bit variant
1 1 010 - x0 LD2 (single structure) - 16-bit variant
1 1 010 - x1 Unallocated.
1 1 011 - x0 LD4 (single structure) - 16-bit variant
1 1 011 - x1 Unallocated.
1 1 100 - 00 LD2 (single structure) - 32-bit variant
1 1 100 - 10 Unallocated.
1 1 100 0 01 LD2 (single structure) - 64-bit variant
1 1 100 0 11 Unallocated.
1 1 100 1 x1 Unallocated.
1 1 101 - 00 LD4 (single structure) - 32-bit variant
1 1 101 - 10 Unallocated.
1 1 101 0 01 LD4 (single structure) - 64-bit variant
1 1 101 0 11 Unallocated.
1 1 101 1 x1 Unallocated.
1 1 110 0 - LD2R
1 1 110 1 - Unallocated.
1 1 111 0 - LD4R
1 1 111 1 - Unallocated.
#Advanced SIMD load/store single structure (post-indexed)
6 107
22 22
21 21
16 20
13 15
12 12
10 11
0 - - 11x - - Unallocated.
0 0 - 010 - x1 Unallocated.
0 0 - 011 - x1 Unallocated.
0 0 - 100 - 1x Unallocated.
0 0 - 100 1 01 Unallocated.
0 0 - 101 - 10 Unallocated.
0 0 - 101 0 11 Unallocated.
0 0 - 101 1 x1 Unallocated.
0 0 !=11111 000 - - ST1 (single structure) - 8-bit, register offset variant
0 0 !=11111 001 - - ST3 (single structure) - 8-bit, register offset variant
0 0 !=11111 010 - x0 ST1 (single structure) - 16-bit, register offset variant
0 0 !=11111 011 - x0 ST3 (single structure) - 16-bit, register offset variant
0 0 !=11111 100 - 00 ST1 (single structure) - 32-bit, register offset variant
0 0 !=11111 100 0 01 ST1 (single structure) - 64-bit, register offset variant
0 0 !=11111 101 - 00 ST3 (single structure) - 32-bit, register offset variant
0 0 !=11111 101 0 01 ST3 (single structure) - 64-bit, register offset variant
0 0 11111 000 - - ST1 (single structure) - 8-bit, immediate offset variant
0 0 11111 001 - - ST3 (single structure) - 8-bit, immediate offset variant
0 0 11111 010 - x0 ST1 (single structure) - 16-bit, immediate offset variant
0 0 11111 011 - x0 ST3 (single structure) - 16-bit, immediate offset variant
0 0 11111 100 - 00 ST1 (single structure) - 32-bit, immediate offset variant
0 0 11111 100 0 01 ST1 (single structure) - 64-bit, immediate offset variant
0 0 11111 101 - 00 ST3 (single structure) - 32-bit, immediate offset variant
0 0 11111 101 0 01 ST3 (single structure) - 64-bit, immediate offset variant
0 1 - 010 - x1 Unallocated.
0 1 - 011 - x1 Unallocated.
0 1 - 100 - 10 Unallocated.
0 1 - 100 0 11 Unallocated.
0 1 - 100 1 x1 Unallocated.
0 1 - 101 - 10 Unallocated.
0 1 - 101 0 11 Unallocated.
0 1 - 101 1 x1 Unallocated.
0 1 !=11111 000 - - ST2 (single structure) - 8-bit, register offset variant
0 1 !=11111 001 - - ST4 (single structure) - 8-bit, register offset variant
0 1 !=11111 010 - x0 ST2 (single structure) - 16-bit, register offset variant
0 1 !=11111 011 - x0 ST4 (single structure) - 16-bit, register offset variant
0 1 !=11111 100 - 00 ST2 (single structure) - 32-bit, register offset variant
0 1 !=11111 100 0 01 ST2 (single structure) - 64-bit, register offset variant
0 1 !=11111 101 - 00 ST4 (single structure) - 32-bit, register offset variant
0 1 !=11111 101 0 01 ST4 (single structure) - 64-bit, register offset variant
0 1 11111 000 - - ST2 (single structure) - 8-bit, immediate offset variant
0 1 11111 001 - - ST4 (single structure) - 8-bit, immediate offset variant
0 1 11111 010 - x0 ST2 (single structure) - 16-bit, immediate offset variant
0 1 11111 011 - x0 ST4 (single structure) - 16-bit, immediate offset variant
0 1 11111 100 - 00 ST2 (single structure) - 32-bit, immediate offset variant
0 1 11111 100 0 01 ST2 (single structure) - 64-bit, immediate offset variant
0 1 11111 101 - 00 ST4 (single structure) - 32-bit, immediate offset variant
0 1 11111 101 0 01 ST4 (single structure) - 64-bit, immediate offset variant
1 0 - 010 - x1 Unallocated.
1 0 - 011 - x1 Unallocated.
1 0 - 100 - 1x Unallocated.
1 0 - 100 1 01 Unallocated.
1 0 - 101 - 10 Unallocated.
1 0 - 101 0 11 Unallocated.
1 0 - 101 1 x1 Unallocated.
1 0 - 110 1 - Unallocated.
1 0 - 111 1 - Unallocated.
1 0 !=11111 000 - - LD1 (single structure) - 8-bit, register offset variant
1 0 !=11111 001 - - LD3 (single structure) - 8-bit, register offset variant
1 0 !=11111 010 - x0 LD1 (single structure) - 16-bit, register offset variant
1 0 !=11111 011 - x0 LD3 (single structure) - 16-bit, register offset variant
1 0 !=11111 100 - 00 LD1 (single structure) - 32-bit, register offset variant
1 0 !=11111 100 0 01 LD1 (single structure) - 64-bit, register offset variant
1 0 !=11111 101 - 00 LD3 (single structure) - 32-bit, register offset variant
1 0 !=11111 101 0 01 LD3 (single structure) - 64-bit, register offset variant
1 0 !=11111 110 0 - LD1R - Register offset variant
1 0 !=11111 111 0 - LD3R - Register offset variant
1 0 11111 000 - - LD1 (single structure) - 8-bit, immediate offset variant
1 0 11111 001 - - LD3 (single structure) - 8-bit, immediate offset variant
1 0 11111 010 - x0 LD1 (single structure) - 16-bit, immediate offset variant
1 0 11111 011 - x0 LD3 (single structure) - 16-bit, immediate offset variant
1 0 11111 100 - 00 LD1 (single structure) - 32-bit, immediate offset variant
1 0 11111 100 0 01 LD1 (single structure) - 64-bit, immediate offset variant
1 0 11111 101 - 00 LD3 (single structure) - 32-bit, immediate offset variant
1 0 11111 101 0 01 LD3 (single structure) - 64-bit, immediate offset variant
1 0 11111 110 0 - LD1R - Immediate offset variant
1 0 11111 111 0 - LD3R - Immediate offset variant
1 1 - 010 - x1 Unallocated.
1 1 - 011 - x1 Unallocated.
1 1 - 100 - 10 Unallocated.
1 1 - 100 0 11 Unallocated.
1 1 - 100 1 x1 Unallocated.
1 1 - 101 - 10 Unallocated.
1 1 - 101 0 11 Unallocated.
1 1 - 101 1 x1 Unallocated.
1 1 - 110 1 - Unallocated.
1 1 - 111 1 - Unallocated.
1 1 !=11111 000 - - LD2 (single structure) - 8-bit, register offset variant
1 1 !=11111 001 - - LD4 (single structure) - 8-bit, register offset variant
1 1 !=11111 010 - x0 LD2 (single structure) - 16-bit, register offset variant
1 1 !=11111 011 - x0 LD4 (single structure) - 16-bit, register offset variant
1 1 !=11111 100 - 00 LD2 (single structure) - 32-bit, register offset variant
1 1 !=11111 100 0 01 LD2 (single structure) - 64-bit, register offset variant
1 1 !=11111 101 - 00 LD4 (single structure) - 32-bit, register offset variant
1 1 !=11111 101 0 01 LD4 (single structure) - 64-bit, register offset variant
1 1 !=11111 110 0 - LD2R - Register offset variant
1 1 !=11111 111 0 - LD4R - Register offset variant
1 1 11111 000 - - LD2 (single structure) - 8-bit, immediate offset variant
1 1 11111 001 - - LD4 (single structure) - 8-bit, immediate offset variant
1 1 11111 010 - x0 LD2 (single structure) - 16-bit, immediate offset variant
1 1 11111 011 - x0 LD4 (single structure) - 16-bit, immediate offset variant
1 1 11111 100 - 00 LD2 (single structure) - 32-bit, immediate offset variant
1 1 11111 100 0 01 LD2 (single structure) - 64-bit, immediate offset variant
1 1 11111 101 - 00 LD4 (single structure) - 32-bit, immediate offset variant
1 1 11111 101 0 01 LD4 (single structure) - 64-bit, immediate offset variant
1 1 11111 110 0 - LD2R - Immediate offset variant
1 1 11111 111 0 - LD4R - Immediate offset variant
#Load/store memory tags
3 18
22 23
12 20
10 11
00 - 01 STG - Encoding FEAT_MTE
00 - 10 STG - Encoding FEAT_MTE
00 - 11 STG - Encoding FEAT_MTE
00 000000000 00 STZGM FEAT_MTE2
01 - 00 LDG FEAT_MTE
01 - 01 STZG - Encoding FEAT_MTE
01 - 10 STZG - Encoding FEAT_MTE
01 - 11 STZG - Encoding FEAT_MTE
10 - 01 ST2G - Encoding FEAT_MTE
10 - 10 ST2G - Encoding FEAT_MTE
10 - 11 ST2G - Encoding FEAT_MTE
10 !=000000000 00 Unallocated.
10 000000000 00 STGM FEAT_MTE2
11 - 01 STZ2G - Encoding FEAT_MTE
11 - 10 STZ2G - Encoding FEAT_MTE
11 - 11 STZ2G - Encoding FEAT_MTE
11 !=000000000 00 Unallocated.
11 000000000 00 LDGM FEAT_MTE2
#Load/store exclusive pair
3 8
30 30
22 22
15 15
0 0 0 STXP - 32-bit variant
0 0 1 STLXP - 32-bit variant
0 1 0 LDXP - 32-bit variant
0 1 1 LDAXP - 32-bit variant
1 0 0 STXP - 64-bit variant
1 0 1 STLXP - 64-bit variant
1 1 0 LDXP - 64-bit variant
1 1 1 LDAXP - 64-bit variant
#Load/store exclusive register
3 16
30 31
22 22
15 15
00 0 0 STXRB
00 0 1 STLXRB
00 1 0 LDXRB
00 1 1 LDAXRB
01 0 0 STXRH
01 0 1 STLXRH
01 1 0 LDXRH
01 1 1 LDAXRH
10 0 0 STXR - 32-bit variant
10 0 1 STLXR - 32-bit variant
10 1 0 LDXR - 32-bit variant
10 1 1 LDAXR - 32-bit variant
11 0 0 STXR - 64-bit variant
11 0 1 STLXR - 64-bit variant
11 1 0 LDXR - 64-bit variant
11 1 1 LDAXR - 64-bit variant
#Load/store ordered
3 16
30 31
22 22
15 15
00 0 STLLRB FEAT_LOR
00 0 1 STLRB -
00 1 0 LDLARB FEAT_LOR
00 1 1 LDARB -
01 0 0 STLLRH FEAT_LOR
01 0 1 STLRH -
01 1 0 LDLARH FEAT_LOR
01 1 1 LDARH -
10 0 0 STLLR - 32-bit variant FEAT_LOR
10 0 1 STLR - 32-bit variant -
10 1 0 LDLAR - 32-bit variant FEAT_LOR
10 1 1 LDAR - 32-bit variant -
11 0 0 STLLR - 64-bit variant FEAT_LOR
11 0 1 STLR - 64-bit variant -
11 1 0 LDLAR - 64-bit variant FEAT_LOR
11 1 1 LDAR - 64-bit variant -
#Compare and swap
4 17
30 31
22 22
15 15
10 14
- - - !=11111 Unallocated.
00 0 0 11111 CASB, CASAB, CASALB, CASLB - CASB variant FEAT_LSE
00 0 1 11111 CASB, CASAB, CASALB, CASLB - CASLB variant FEAT_LSE
00 1 0 11111 CASB, CASAB, CASALB, CASLB - CASAB variant FEAT_LSE
00 1 1 11111 CASB, CASAB, CASALB, CASLB - CASALB variant FEAT_LSE
01 0 0 11111 CASH, CASAH, CASALH, CASLH - CASH variant FEAT_LSE
01 0 1 11111 CASH, CASAH, CASALH, CASLH - CASLH variant FEAT_LSE
01 1 0 11111 CASH, CASAH, CASALH, CASLH - CASAH variant FEAT_LSE
01 1 1 11111 CASH, CASAH, CASALH, CASLH - CASALH variant FEAT_LSE
10 0 0 11111 CAS, CASA, CASAL, CASL - 32-bit CAS variant FEAT_LSE
10 0 1 11111 CAS, CASA, CASAL, CASL - 32-bit CASL variant FEAT_LSE
10 1 0 11111 CAS, CASA, CASAL, CASL - 32-bit CASA variant FEAT_LSE
10 1 1 11111 CAS, CASA, CASAL, CASL - 32-bit CASAL variant FEAT_LSE
11 0 0 11111 CAS, CASA, CASAL, CASL - 64-bit CAS variant FEAT_LSE
11 0 1 11111 CAS, CASA, CASAL, CASL - 64-bit CASL variant FEAT_LSE
11 1 0 11111 CAS, CASA, CASAL, CASL - 64-bit CASA variant FEAT_LSE
11 1 1 11111 CAS, CASA, CASAL, CASL - 64-bit CASAL variant FEAT_LSE
#LDAPR/STLR (unscaled immediate)
2 16
30 31
22 23
00 00 STLURB FEAT_LRCPC2
00 01 LDAPURB FEAT_LRCPC2
00 10 LDAPURSB - 64-bit variant FEAT_LRCPC2
00 11 LDAPURSB - 32-bit variant FEAT_LRCPC2
01 00 STLURH FEAT_LRCPC2
01 01 LDAPURH FEAT_LRCPC2
01 10 LDAPURSH - 64-bit variant FEAT_LRCPC2
01 11 LDAPURSH - 32-bit variant FEAT_LRCPC2
10 00 STLUR - 32-bit variant FEAT_LRCPC2
10 01 LDAPUR - 32-bit variant FEAT_LRCPC2
10 10 LDAPURSW FEAT_LRCPC2
10 11 Unallocated.
11 00 STLUR - 64-bit variant FEAT_LRCPC2
11 01 LDAPUR - 64-bit variant FEAT_LRCPC2
11 10 Unallocated.
11 11 Unallocated.
#Load register (literal)
2 8
30 31
26 26
00 0 LDR (literal) - 32-bit variant
00 1 LDR (literal, SIMD&FP) - 32-bit variant
01 0 LDR (literal) - 64-bit variant
01 1 LDR (literal, SIMD&FP) - 64-bit variant
10 0 LDRSW (literal)
10 1 LDR (literal, SIMD&FP) - 128-bit variant
11 0 PRFM (literal)
11 1 Unallocated.
#Memory Copy and Memory Set
3 122
26 26
22 23
12 15
0 00 0000 CPYFP, CPYFM, CPYFE - Prologue variant FEAT_MOPS
0 00 0001 CPYFPWT, CPYFMWT, CPYFEWT - Prologue variant FEAT_MOPS
0 00 0010 CPYFPRT, CPYFMRT, CPYFERT - Prologue variant FEAT_MOPS
0 00 0011 CPYFPT, CPYFMT, CPYFET - Prologue variant FEAT_MOPS
0 00 0100 CPYFPWN, CPYFMWN, CPYFEWN - Prologue variant FEAT_MOPS
0 00 0101 CPYFPWTWN, CPYFMWTWN, CPYFEWTWN - Prologue variant FEAT_MOPS
0 00 0110 CPYFPRTWN, CPYFMRTWN, CPYFERTWN - Prologue variant FEAT_MOPS
0 00 0111 CPYFPTWN, CPYFMTWN, CPYFETWN - Prologue variant FEAT_MOPS
0 00 1000 CPYFPRN, CPYFMRN, CPYFERN - Prologue variant FEAT_MOPS
0 00 1001 CPYFPWTRN, CPYFMWTRN, CPYFEWTRN - Prologue variant FEAT_MOPS
0 00 1010 CPYFPRTRN, CPYFMRTRN, CPYFERTRN - Prologue variant FEAT_MOPS
0 00 1011 CPYFPTRN, CPYFMTRN, CPYFETRN - Prologue variant FEAT_MOPS
0 00 1100 CPYFPN, CPYFMN, CPYFEN - Prologue variant FEAT_MOPS
0 00 1101 CPYFPWTN, CPYFMWTN, CPYFEWTN - Prologue variant FEAT_MOPS
0 00 1110 CPYFPRTN, CPYFMRTN, CPYFERTN - Prologue variant FEAT_MOPS
0 00 1111 CPYFPTN, CPYFMTN, CPYFETN - Prologue variant FEAT_MOPS
0 01 0000 CPYFP, CPYFM, CPYFE - Main variant FEAT_MOPS
0 01 0001 CPYFPWT, CPYFMWT, CPYFEWT - Main variant FEAT_MOPS
0 01 0010 CPYFPRT, CPYFMRT, CPYFERT - Main variant FEAT_MOPS
0 01 0011 CPYFPT, CPYFMT, CPYFET - Main variant FEAT_MOPS
0 01 0100 CPYFPWN, CPYFMWN, CPYFEWN - Main variant FEAT_MOPS
0 01 0101 CPYFPWTWN, CPYFMWTWN, CPYFEWTWN - Main variant FEAT_MOPS
0 01 0110 CPYFPRTWN, CPYFMRTWN, CPYFERTWN - Main variant FEAT_MOPS
0 01 0111 CPYFPTWN, CPYFMTWN, CPYFETWN - Main variant FEAT_MOPS
0 01 1000 CPYFPRN, CPYFMRN, CPYFERN - Main variant FEAT_MOPS
0 01 1001 CPYFPWTRN, CPYFMWTRN, CPYFEWTRN - Main variant FEAT_MOPS
0 01 1010 CPYFPRTRN, CPYFMRTRN, CPYFERTRN - Main variant FEAT_MOPS
0 01 1011 CPYFPTRN, CPYFMTRN, CPYFETRN - Main variant FEAT_MOPS
0 01 1100 CPYFPN, CPYFMN, CPYFEN - Main variant FEAT_MOPS
0 01 1101 CPYFPWTN, CPYFMWTN, CPYFEWTN - Main variant FEAT_MOPS
0 01 1110 CPYFPRTN, CPYFMRTN, CPYFERTN - Main variant FEAT_MOPS
0 01 1111 CPYFPTN, CPYFMTN, CPYFETN - Main variant FEAT_MOPS
0 10 0000 CPYFP, CPYFM, CPYFE - Epilogue variant FEAT_MOPS
0 10 0001 CPYFPWT, CPYFMWT, CPYFEWT - Epilogue variant FEAT_MOPS
0 10 0010 CPYFPRT, CPYFMRT, CPYFERT - Epilogue variant FEAT_MOPS
0 10 0011 CPYFPT, CPYFMT, CPYFET - Epilogue variant FEAT_MOPS
0 10 0100 CPYFPWN, CPYFMWN, CPYFEWN - Epilogue variant FEAT_MOPS
0 10 0101 CPYFPWTWN, CPYFMWTWN, CPYFEWTWN - Epilogue variant FEAT_MOPS
0 10 0110 CPYFPRTWN, CPYFMRTWN, CPYFERTWN - Epilogue variant FEAT_MOPS
0 10 0111 CPYFPTWN, CPYFMTWN, CPYFETWN - Epilogue variant FEAT_MOPS
0 10 1000 CPYFPRN, CPYFMRN, CPYFERN - Epilogue variant FEAT_MOPS
0 10 1001 CPYFPWTRN, CPYFMWTRN, CPYFEWTRN - Epilogue variant FEAT_MOPS
0 10 1010 CPYFPRTRN, CPYFMRTRN, CPYFERTRN - Epilogue variant FEAT_MOPS
0 10 1011 CPYFPTRN, CPYFMTRN, CPYFETRN - Epilogue variant FEAT_MOPS
0 10 1100 CPYFPN, CPYFMN, CPYFEN - Epilogue variant FEAT_MOPS
0 10 1101 CPYFPWTN, CPYFMWTN, CPYFEWTN - Epilogue variant FEAT_MOPS
0 10 1110 CPYFPRTN, CPYFMRTN, CPYFERTN - Epilogue variant FEAT_MOPS
0 10 1111 CPYFPTN, CPYFMTN, CPYFETN - Epilogue variant FEAT_MOPS
0 11 0000 SETP, SETM, SETE - Prologue variant FEAT_MOPS
0 11 0001 SETPT, SETMT, SETET - Prologue variant FEAT_MOPS
0 11 0010 SETPN, SETMN, SETEN - Prologue variant FEAT_MOPS
0 11 0011 SETPTN, SETMTN, SETETN - Prologue variant FEAT_MOPS
0 11 0100 SETP, SETM, SETE - Main variant FEAT_MOPS
0 11 0101 SETPT, SETMT, SETET - Main variant FEAT_MOPS
0 11 0110 SETPN, SETMN, SETEN - Main variant FEAT_MOPS
0 11 0111 SETPTN, SETMTN, SETETN - Main variant FEAT_MOPS
0 11 1000 SETP, SETM, SETE - Epilogue variant FEAT_MOPS
0 11 1001 SETPT, SETMT, SETET - Epilogue variant FEAT_MOPS
0 11 1010 SETPN, SETMN, SETEN - Epilogue variant FEAT_MOPS
0 11 1011 SETPTN, SETMTN, SETETN - Epilogue variant FEAT_MOPS
0 11 11xx Unallocated.
1 00 0000 CPYP, CPYM, CPYE - Prologue variant FEAT_MOPS
1 00 0001 CPYPWT, CPYMWT, CPYEWT - Prologue variant FEAT_MOPS
1 00 0010 CPYPRT, CPYMRT, CPYERT - Prologue variant FEAT_MOPS
1 00 0011 CPYPT, CPYMT, CPYET - Prologue variant FEAT_MOPS
1 00 0100 CPYPWN, CPYMWN, CPYEWN - Prologue variant FEAT_MOPS
1 00 0101 CPYPWTWN, CPYMWTWN, CPYEWTWN - Prologue variant FEAT_MOPS
1 00 0110 CPYPRTWN, CPYMRTWN, CPYERTWN - Prologue variant FEAT_MOPS
1 00 0111 CPYPTWN, CPYMTWN, CPYETWN - Prologue variant FEAT_MOPS
1 00 1000 CPYPRN, CPYMRN, CPYERN - Prologue variant FEAT_MOPS
1 00 1001 CPYPWTRN, CPYMWTRN, CPYEWTRN - Prologue variant FEAT_MOPS
1 00 1010 CPYPRTRN, CPYMRTRN, CPYERTRN - Prologue variant FEAT_MOPS
1 00 1011 CPYPTRN, CPYMTRN, CPYETRN - Prologue variant FEAT_MOPS
1 00 1100 CPYPN, CPYMN, CPYEN - Prologue variant FEAT_MOPS
1 00 1101 CPYPWTN, CPYMWTN, CPYEWTN - Prologue variant FEAT_MOPS
1 00 1110 CPYPRTN, CPYMRTN, CPYERTN - Prologue variant FEAT_MOPS
1 00 1111 CPYPTN, CPYMTN, CPYETN - Prologue variant FEAT_MOPS
1 01 0000 CPYP, CPYM, CPYE - Main variant FEAT_MOPS
1 01 0001 CPYPWT, CPYMWT, CPYEWT - Main variant FEAT_MOPS
1 01 0010 CPYPRT, CPYMRT, CPYERT - Main variant FEAT_MOPS
1 01 0011 CPYPT, CPYMT, CPYET - Main variant FEAT_MOPS
1 01 0100 CPYPWN, CPYMWN, CPYEWN - Main variant FEAT_MOPS
1 01 0101 CPYPWTWN, CPYMWTWN, CPYEWTWN - Main variant FEAT_MOPS
1 01 0110 CPYPRTWN, CPYMRTWN, CPYERTWN - Main variant FEAT_MOPS
1 01 0111 CPYPTWN, CPYMTWN, CPYETWN - Main variant FEAT_MOPS
1 01 1000 CPYPRN, CPYMRN, CPYERN - Main variant FEAT_MOPS
1 01 1001 CPYPWTRN, CPYMWTRN, CPYEWTRN - Main variant FEAT_MOPS
1 01 1010 CPYPRTRN, CPYMRTRN, CPYERTRN - Main variant FEAT_MOPS
1 01 1011 CPYPTRN, CPYMTRN, CPYETRN - Main variant FEAT_MOPS
1 01 1100 CPYPN, CPYMN, CPYEN - Main variant FEAT_MOPS
1 01 1101 CPYPWTN, CPYMWTN, CPYEWTN - Main variant FEAT_MOPS
1 01 1110 CPYPRTN, CPYMRTN, CPYERTN - Main variant FEAT_MOPS
1 01 1111 CPYPTN, CPYMTN, CPYETN - Main variant FEAT_MOPS
1 10 0000 CPYP, CPYM, CPYE - Epilogue variant FEAT_MOPS
1 10 0001 CPYPWT, CPYMWT, CPYEWT - Epilogue variant FEAT_MOPS
1 10 0010 CPYPRT, CPYMRT, CPYERT - Epilogue variant FEAT_MOPS
1 10 0011 CPYPT, CPYMT, CPYET - Epilogue variant FEAT_MOPS
1 10 0100 CPYPWN, CPYMWN, CPYEWN - Epilogue variant FEAT_MOPS
1 10 0101 CPYPWTWN, CPYMWTWN, CPYEWTWN - Epilogue variant FEAT_MOPS
1 10 0110 CPYPRTWN, CPYMRTWN, CPYERTWN - Epilogue variant FEAT_MOPS
1 10 0111 CPYPTWN, CPYMTWN, CPYETWN - Epilogue variant FEAT_MOPS
1 10 1000 CPYPRN, CPYMRN, CPYERN - Epilogue variant FEAT_MOPS
1 10 1001 CPYPWTRN, CPYMWTRN, CPYEWTRN - Epilogue variant FEAT_MOPS
1 10 1010 CPYPRTRN, CPYMRTRN, CPYERTRN - Epilogue variant FEAT_MOPS
1 10 1011 CPYPTRN, CPYMTRN, CPYETRN - Epilogue variant FEAT_MOPS
1 10 1100 CPYPN, CPYMN, CPYEN - Epilogue variant FEAT_MOPS
1 10 1101 CPYPWTN, CPYMWTN, CPYEWTN - Epilogue variant FEAT_MOPS
1 10 1110 CPYPRTN, CPYMRTN, CPYERTN - Epilogue variant FEAT_MOPS
1 10 1111 CPYPTN, CPYMTN, CPYETN - Epilogue variant FEAT_MOPS
1 11 0000 SETGP, SETGM, SETGE - Prologue variant FEAT_MOPS
1 11 0001 SETGPT, SETGMT, SETGET - Prologue variant FEAT_MOPS
1 11 0010 SETGPN, SETGMN, SETGEN - Prologue variant FEAT_MOPS
1 11 0011 SETGPTN, SETGMTN, SETGETN - Prologue variant FEAT_MOPS
1 11 0100 SETGP, SETGM, SETGE - Main variant FEAT_MOPS
1 11 0101 SETGPT, SETGMT, SETGET - Main variant FEAT_MOPS
1 11 0110 SETGPN, SETGMN, SETGEN - Main variant FEAT_MOPS
1 11 0111 SETGPTN, SETGMTN, SETGETN - Main variant FEAT_MOPS
1 11 1000 SETGP, SETGM, SETGE - Epilogue variant FEAT_MOPS
1 11 1001 SETGPT, SETGMT, SETGET - Epilogue variant FEAT_MOPS
1 11 1010 SETGPN, SETGMN, SETGEN - Epilogue variant FEAT_MOPS
1 11 1011 SETGPTN, SETGMTN, SETGETN - Epilogue variant FEAT_MOPS
1 11 11xx Unallocated.
#Load/store no-allocate pair (offset)
3 12
30 31
26 26
22 22
00 0 0 STNP - 32-bit variant
00 0 1 LDNP - 32-bit variant
00 1 0 STNP (SIMD&FP) - 32-bit variant
00 1 1 LDNP (SIMD&FP) - 32-bit variant
01 0 - Unallocated.
01 1 0 STNP (SIMD&FP) - 64-bit variant
01 1 1 LDNP (SIMD&FP) - 64-bit variant
10 0 0 STNP - 64-bit variant
10 0 1 LDNP - 64-bit variant
10 1 0 STNP (SIMD&FP) - 128-bit variant
10 1 1 LDNP (SIMD&FP) - 128-bit variant
11 - - Unallocated.
#Load/store register pair (post-indexed)
3 13
30 31
26 26
22 22
00 0 0 STP - 32-bit variant -
00 0 1 LDP - 32-bit variant -
00 1 0 STP (SIMD&FP) - 32-bit variant -
00 1 1 LDP (SIMD&FP) - 32-bit variant -
01 0 0 STGP FEAT_MTE
01 0 1 LDPSW -
01 1 0 STP (SIMD&FP) - 64-bit variant -
01 1 1 LDP (SIMD&FP) - 64-bit variant -
10 0 0 STP - 64-bit variant -
10 0 1 LDP - 64-bit variant -
10 1 0 STP (SIMD&FP) - 128-bit variant -
10 1 1 LDP (SIMD&FP) - 128-bit variant -
11 - - Unallocated.
#Load/store register pair (offset)
3 13
30 31
26 26
22 22
00 0 0 STP - 32-bit variant -
00 0 1 LDP - 32-bit variant -
00 1 0 STP (SIMD&FP) - 32-bit variant -
00 1 1 LDP (SIMD&FP) - 32-bit variant -
01 0 0 STGP FEAT_MTE
01 0 1 LDPSW -
01 1 0 STP (SIMD&FP) - 64-bit variant -
01 1 1 LDP (SIMD&FP) - 64-bit variant -
10 0 0 STP - 64-bit variant -
10 0 1 LDP - 64-bit variant -
10 1 0 STP (SIMD&FP) - 128-bit variant -
10 1 1 LDP (SIMD&FP) - 128-bit variant -
11 - - Unallocated.
#Load/store register pair (pre-indexed)
3 13
30 31
26 26
22 22
00 0 0 STP - 32-bit variant -
00 0 1 LDP - 32-bit variant -
00 1 0 STP (SIMD&FP) - 32-bit variant -
00 1 1 LDP (SIMD&FP) - 32-bit variant -
01 0 0 STGP FEAT_MTE
01 0 1 LDPSW -
01 1 0 STP (SIMD&FP) - 64-bit variant -
01 1 1 LDP (SIMD&FP) - 64-bit variant -
10 0 0 STP - 64-bit variant -
10 0 1 LDP - 64-bit variant -
10 1 0 STP (SIMD&FP) - 128-bit variant -
10 1 1 LDP (SIMD&FP) - 128-bit variant -
11 - - Unallocated.
#Load/store register (unscaled immediate)
3 27
30 31
26 26
22 23
x1 1 1x Unallocated.
00 0 00 STURB
00 0 01 LDURB
00 0 10 LDURSB - 64-bit variant
00 0 11 LDURSB - 32-bit variant
00 1 00 STUR (SIMD&FP) - 8-bit variant
00 1 01 LDUR (SIMD&FP) - 8-bit variant
00 1 10 STUR (SIMD&FP) - 128-bit variant
00 1 11 LDUR (SIMD&FP) - 128-bit variant
01 0 00 STURH
01 0 01 LDURH
01 0 10 LDURSH - 64-bit variant
01 0 11 LDURSH - 32-bit variant
01 1 00 STUR (SIMD&FP) - 16-bit variant
01 1 01 LDUR (SIMD&FP) - 16-bit variant
1x 0 11 Unallocated.
1x 1 1x Unallocated.
10 0 00 STUR - 32-bit variant
10 0 01 LDUR - 32-bit variant
10 0 10 LDURSW
10 1 00 STUR (SIMD&FP) - 32-bit variant
10 1 01 LDUR (SIMD&FP) - 32-bit variant
11 0 00 STUR - 64-bit variant
11 0 01 LDUR - 64-bit variant
11 0 10 PRFUM
11 1 00 STUR (SIMD&FP) - 64-bit variant
11 1 01 LDUR (SIMD&FP) - 64-bit variant
#Load/store register (immediate post-indexed)
3 27
30 31
26 26
22 23
x1 1 1x Unallocated.
00 0 00 STRB (immediate)
00 0 01 LDRB (immediate)
00 0 10 LDRSB (immediate) - 64-bit variant
00 0 11 LDRSB (immediate) - 32-bit variant
00 1 00 STR (immediate, SIMD&FP) - 8-bit variant
00 1 01 LDR (immediate, SIMD&FP) - 8-bit variant
00 1 10 STR (immediate, SIMD&FP) - 128-bit variant
00 1 11 LDR (immediate, SIMD&FP) - 128-bit variant
01 0 00 STRH (immediate)
01 0 01 LDRH (immediate)
01 0 10 LDRSH (immediate) - 64-bit variant
01 0 11 LDRSH (immediate) - 32-bit variant
01 1 00 STR (immediate, SIMD&FP) - 16-bit variant
01 1 01 LDR (immediate, SIMD&FP) - 16-bit variant
1x 0 11 Unallocated.
1x 1 1x Unallocated.
10 0 00 STR (immediate) - 32-bit variant
10 0 01 LDR (immediate) - 32-bit variant
10 0 10 LDRSW (immediate)
10 1 00 STR (immediate, SIMD&FP) - 32-bit variant
10 1 01 LDR (immediate, SIMD&FP) - 32-bit variant
11 0 00 STR (immediate) - 64-bit variant
11 0 01 LDR (immediate) - 64-bit variant
11 0 10 Unallocated.
11 1 00 STR (immediate, SIMD&FP) - 64-bit variant
11 1 01 LDR (immediate, SIMD&FP) - 64-bit variant
#Load/store register (unprivileged)
3 16
30 31
26 26
22 23
- 1 - Unallocated.
00 0 00 STTRB
00 0 01 LDTRB
00 0 10 LDTRSB - 64-bit variant
00 0 11 LDTRSB - 32-bit variant
01 0 00 STTRH
01 0 01 LDTRH
01 0 10 LDTRSH - 64-bit variant
01 0 11 LDTRSH - 32-bit variant
1x 0 11 Unallocated.
10 0 00 STTR - 32-bit variant
10 0 01 LDTR - 32-bit variant
10 0 10 LDTRSW
11 0 00 STTR - 64-bit variant
11 0 01 LDTR - 64-bit variant
11 0 10 Unallocated.
#Load/store register (immediate pre-indexed)
3 27
30 31
26 26
22 23
x1 1 1x Unallocated.
00 0 00 STRB (immediate)
00 0 01 LDRB (immediate)
00 0 10 LDRSB (immediate) - 64-bit variant
00 0 11 LDRSB (immediate) - 32-bit variant
00 1 00 STR (immediate, SIMD&FP) - 8-bit variant
00 1 01 LDR (immediate, SIMD&FP) - 8-bit variant
00 1 10 STR (immediate, SIMD&FP) - 128-bit variant
00 1 11 LDR (immediate, SIMD&FP) - 128-bit variant
01 0 00 STRH (immediate)
01 0 01 LDRH (immediate)
01 0 10 LDRSH (immediate) - 64-bit variant
01 0 11 LDRSH (immediate) - 32-bit variant
01 1 00 STR (immediate, SIMD&FP) - 16-bit variant
01 1 01 LDR (immediate, SIMD&FP) - 16-bit variant
1x 0 11 Unallocated.
1x 1 1x Unallocated.
10 0 00 STR (immediate) - 32-bit variant
10 0 01 LDR (immediate) - 32-bit variant
10 0 10 LDRSW (immediate)
10 1 00 STR (immediate, SIMD&FP) - 32-bit variant
10 1 01 LDR (immediate, SIMD&FP) - 32-bit variant
11 0 00 STR (immediate) - 64-bit variant
11 0 01 LDR (immediate) - 64-bit variant
11 0 10 Unallocated.
11 1 00 STR (immediate, SIMD&FP) - 64-bit variant
11 1 01 LDR (immediate, SIMD&FP) - 64-bit variant
#Atomic memory operations
7 180
30 31
26 26
23 23
22 22
16 20
15 15
12 14
- 0 - - - 1 11x Unallocated.
- 0 0 - - 1 100 Unallocated.
- 0 0 1 - 1 001 Unallocated.
- 0 0 1 - 1 010 Unallocated.
- 0 0 1 - 1 011 Unallocated.
- 0 0 1 - 1 101 Unallocated.
- 0 1 0 - 1 001 Unallocated.
- 0 1 0 - 1 010 Unallocated.
- 0 1 0 - 1 011 Unallocated.
- 0 1 0 - 1 101 Unallocated.
- 0 1 1 - 1 001 Unallocated.
- 0 1 1 - 1 010 Unallocated.
- 0 1 1 - 1 011 Unallocated.
- 0 1 1 - 1 100 Unallocated.
- 0 0 1 - 1 101 Unallocated.
- 1 - - - - - Unallocated.
00 0 0 0 - 0 000 LDADDB, LDADDAB, LDADDALB, LDADDLB - LDADDB variant FEAT_LSE
00 0 0 0 - 0 001 LDCLRB, LDCLRAB, LDCLRALB, LDCLRLB - LDCLRB variant FEAT_LSE
00 0 0 0 - 0 010 LDEORB, LDEORAB, LDEORALB, LDEORLB - LDEORB variant FEAT_LSE
00 0 0 0 - 0 011 LDSETB, LDSETAB, LDSETALB, LDSETLB - LDSETB variant FEAT_LSE
00 0 0 0 - 0 100 LDSMAXB, LDSMAXAB, LDSMAXALB, LDSMAXLB - LDSMAXB variant FEAT_LSE
00 0 0 0 - 0 101 LDSMINB, LDSMINAB, LDSMINALB, LDSMINLB - LDSMINB variant FEAT_LSE
00 0 0 0 - 0 110 LDUMAXB, LDUMAXAB, LDUMAXALB, LDUMAXLB - LDUMAXB variant FEAT_LSE
00 0 0 0 - 0 111 LDUMINB, LDUMINAB, LDUMINALB, LDUMINLB - LDUMINB variant FEAT_LSE
00 0 0 0 - 1 000 SWPB, SWPAB, SWPALB, SWPLB - SWPB variant FEAT_LSE
00 0 0 0 - 1 001 Unallocated.
00 0 0 0 - 1 010 Unallocated.
00 0 0 0 - 1 011 Unallocated.
00 0 0 0 - 1 101 Unallocated.
00 0 0 1 - 0 000 LDADDB, LDADDAB, LDADDALB, LDADDLB - LDADDLB variant FEAT_LSE
00 0 0 1 - 0 001 LDCLRB, LDCLRAB, LDCLRALB, LDCLRLB - LDCLRLB variant FEAT_LSE
00 0 0 1 - 0 010 LDEORB, LDEORAB, LDEORALB, LDEORLB - LDEORLB variant FEAT_LSE
00 0 0 1 - 0 011 LDSETB, LDSETAB, LDSETALB, LDSETLB - LDSETLB variant FEAT_LSE
00 0 0 1 - 0 100 LDSMAXB, LDSMAXAB, LDSMAXALB, LDSMAXLB - LDSMAXLB variant FEAT_LSE
00 0 0 1 - 0 101 LDSMINB, LDSMINAB, LDSMINALB, LDSMINLB - LDSMINLB variant FEAT_LSE
00 0 0 1 - 0 110 LDUMAXB, LDUMAXAB, LDUMAXALB, LDUMAXLB - LDUMAXLB variant FEAT_LSE
00 0 0 1 - 0 111 LDUMINB, LDUMINAB, LDUMINALB, LDUMINLB - LDUMINLB variant FEAT_LSE
00 0 0 1 - 1 000 SWPB, SWPAB, SWPALB, SWPLB - SWPLB variant FEAT_LSE
00 0 1 0 - 0 000 LDADDB, LDADDAB, LDADDALB, LDADDLB - LDADDAB variant FEAT_LSE
00 0 1 0 - 0 001 LDCLRB, LDCLRAB, LDCLRALB, LDCLRLB - LDCLRAB variant FEAT_LSE
00 0 1 0 - 0 010 LDEORB, LDEORAB, LDEORALB, LDEORLB - LDEORAB variant FEAT_LSE
00 0 1 0 - 0 011 LDSETB, LDSETAB, LDSETALB, LDSETLB - LDSETAB variant FEAT_LSE
00 0 1 0 - 0 100 LDSMAXB, LDSMAXAB, LDSMAXALB, LDSMAXLB - LDSMAXAB variant FEAT_LSE
00 0 1 0 - 0 101 LDSMINB, LDSMINAB, LDSMINALB, LDSMINLB - LDSMINAB variant FEAT_LSE
00 0 1 0 - 0 110 LDUMAXB, LDUMAXAB, LDUMAXALB, LDUMAXLB - LDUMAXAB variant FEAT_LSE
00 0 1 0 - 0 111 LDUMINB, LDUMINAB, LDUMINALB, LDUMINLB - LDUMINAB variant FEAT_LSE
00 0 1 0 - 1 000 SWPB, SWPAB, SWPALB, SWPLB - SWPAB variant FEAT_LSE
00 0 1 0 - 1 100 LDAPRB FEAT_LRCPC
00 0 1 1 - 0 000 LDADDB, LDADDAB, LDADDALB, LDADDLB - LDADDALB variant FEAT_LSE
00 0 1 1 - 0 001 LDCLRB, LDCLRAB, LDCLRALB, LDCLRLB - LDCLRALB variant FEAT_LSE
00 0 1 1 - 0 010 LDEORB, LDEORAB, LDEORALB, LDEORLB - LDEORALB variant FEAT_LSE
00 0 1 1 - 0 011 LDSETB, LDSETAB, LDSETALB, LDSETLB - LDSETALB variant FEAT_LSE
00 0 1 1 - 0 100 LDSMAXB, LDSMAXAB, LDSMAXALB, LDSMAXLB - LDSMAXALB variant FEAT_LSE
00 0 1 1 - 0 101 LDSMINB, LDSMINAB, LDSMINALB, LDSMINLB - LDSMINALB variant FEAT_LSE
00 0 1 1 - 0 110 LDUMAXB, LDUMAXAB, LDUMAXALB, LDUMAXLB - LDUMAXALB variant FEAT_LSE
00 0 1 1 - 0 111 LDUMINB, LDUMINAB, LDUMINALB, LDUMINLB - LDUMINALB variant FEAT_LSE
00 0 1 1 - 1 000 SWPB, SWPAB, SWPALB, SWPLB - SWPALB variant FEAT_LSE
01 0 0 0 - 0 000 LDADDH, LDADDAH, LDADDALH, LDADDLH - LDADDH variant FEAT_LSE
01 0 0 0 - 0 001 LDCLRH, LDCLRAH, LDCLRALH, LDCLRLH - LDCLRH variant FEAT_LSE
01 0 0 0 - 0 010 LDEORH, LDEORAH, LDEORALH, LDEORLH - LDEORH variant FEAT_LSE
01 0 0 0 - 0 011 LDSETH, LDSETAH, LDSETALH, LDSETLH - LDSETH variant FEAT_LSE
01 0 0 0 - 0 100 LDSMAXH, LDSMAXAH, LDSMAXALH, LDSMAXLH - LDSMAXH variant FEAT_LSE
01 0 0 0 - 0 101 LDSMINH, LDSMINAH, LDSMINALH, LDSMINLH - LDSMINH variant FEAT_LSE
01 0 0 0 - 0 110 LDUMAXH, LDUMAXAH, LDUMAXALH, LDUMAXLH - LDUMAXH variant FEAT_LSE
01 0 0 0 - 0 111 LDUMINH, LDUMINAH, LDUMINALH, LDUMINLH - LDUMINH variant FEAT_LSE
01 0 0 0 - 1 000 SWPH, SWPAH, SWPALH, SWPLH - SWPH variant FEAT_LSE
01 0 0 0 - 1 001 Unallocated.
01 0 0 0 - 1 010 Unallocated.
01 0 0 0 - 1 011 Unallocated.
01 0 0 0 - 1 101 Unallocated.
01 0 0 1 - 0 000 LDADDH, LDADDAH, LDADDALH, LDADDLH - LDADDLH variant FEAT_LSE
01 0 0 1 - 0 001 LDCLRH, LDCLRAH, LDCLRALH, LDCLRLH - LDCLRLH variant FEAT_LSE
01 0 0 1 - 0 010 LDEORH, LDEORAH, LDEORALH, LDEORLH - LDEORLH variant FEAT_LSE
01 0 0 1 - 0 011 LDSETH, LDSETAH, LDSETALH, LDSETLH - LDSETLH variant FEAT_LSE
01 0 0 1 - 0 100 LDSMAXH, LDSMAXAH, LDSMAXALH, LDSMAXLH - LDSMAXLH variant FEAT_LSE
01 0 0 1 - 0 101 LDSMINH, LDSMINAH, LDSMINALH, LDSMINLH - LDSMINLH variant FEAT_LSE
01 0 0 1 - 0 110 LDUMAXH, LDUMAXAH, LDUMAXALH, LDUMAXLH - LDUMAXLH variant FEAT_LSE
01 0 0 1 - 0 111 LDUMINH, LDUMINAH, LDUMINALH, LDUMINLH - LDUMINLH variant FEAT_LSE
01 0 0 1 - 1 000 SWPH, SWPAH, SWPALH, SWPLH - SWPLH variant FEAT_LSE
01 0 1 0 - 0 000 LDADDH, LDADDAH, LDADDALH, LDADDLH - LDADDAH variant FEAT_LSE
01 0 1 0 - 0 001 LDCLRH, LDCLRAH, LDCLRALH, LDCLRLH - LDCLRAH variant FEAT_LSE
01 0 1 0 - 0 010 LDEORH, LDEORAH, LDEORALH, LDEORLH - LDEORAH variant FEAT_LSE
01 0 1 0 - 0 011 LDSETH, LDSETAH, LDSETALH, LDSETLH - LDSETAH variant FEAT_LSE
01 0 1 0 - 0 100 LDSMAXH, LDSMAXAH, LDSMAXALH, LDSMAXLH - LDSMAXAH variant FEAT_LSE
01 0 1 0 - 0 101 LDSMINH, LDSMINAH, LDSMINALH, LDSMINLH - LDSMINAH variant FEAT_LSE
01 0 1 0 - 0 110 LDUMAXH, LDUMAXAH, LDUMAXALH, LDUMAXLH - LDUMAXAH variant FEAT_LSE
01 0 1 0 - 0 111 LDUMINH, LDUMINAH, LDUMINALH, LDUMINLH - LDUMINAH variant FEAT_LSE
01 0 1 0 - 1 000 SWPH, SWPAH, SWPALH, SWPLH - SWPAH variant FEAT_LSE
01 0 1 0 - 1 100 LDAPRH FEAT_LRCPC
01 0 1 1 - 0 000 LDADDH, LDADDAH, LDADDALH, LDADDLH - LDADDALH variant FEAT_LSE
01 0 1 1 - 0 001 LDCLRH, LDCLRAH, LDCLRALH, LDCLRLH - LDCLRALH variant FEAT_LSE
01 0 1 1 - 0 010 LDEORH, LDEORAH, LDEORALH, LDEORLH - LDEORALH variant FEAT_LSE
01 0 1 1 - 0 011 LDSETH, LDSETAH, LDSETALH, LDSETLH - LDSETALH variant FEAT_LSE
01 0 1 1 - 0 100 LDSMAXH, LDSMAXAH, LDSMAXALH, LDSMAXLH - LDSMAXALH variant FEAT_LSE
01 0 1 1 - 0 101 LDSMINH, LDSMINAH, LDSMINALH, LDSMINLH - LDSMINALH variant FEAT_LSE
01 0 1 1 - 0 110 LDUMAXH, LDUMAXAH, LDUMAXALH, LDUMAXLH - LDUMAXALH variant FEAT_LSE
01 0 1 1 - 0 111 LDUMINH, LDUMINAH, LDUMINALH, LDUMINLH - LDUMINALH variant FEAT_LSE
01 0 1 1 - 1 000 SWPH, SWPAH, SWPALH, SWPLH - SWPALH variant FEAT_LSE
10 0 0 0 - 0 000 LDADD, LDADDA, LDADDAL, LDADDL - 32-bit LDADD variant FEAT_LSE
10 0 0 0 - 0 001 LDCLR, LDCLRA, LDCLRAL, LDCLRL - 32-bit LDCLR variant FEAT_LSE
10 0 0 0 - 0 010 LDEOR, LDEORA, LDEORAL, LDEORL - 32-bit LDEOR variant FEAT_LSE
10 0 0 0 - 0 011 LDSET, LDSETA, LDSETAL, LDSETL - 32-bit LDSET variant FEAT_LSE
10 0 0 0 - 0 100 LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL - 32-bit LDSMAX variant FEAT_LSE
10 0 0 0 - 0 101 LDSMIN, LDSMINA, LDSMINAL, LDSMINL - 32-bit LDSMIN variant FEAT_LSE
10 0 0 0 - 0 110 LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL - 32-bit LDUMAX variant FEAT_LSE
10 0 0 0 - 0 111 LDUMIN, LDUMINA, LDUMINAL, LDUMINL - 32-bit LDUMIN variant FEAT_LSE
10 0 0 0 - 1 000 SWP, SWPA, SWPAL, SWPL - 32-bit SWP variant FEAT_LSE
10 0 0 0 - 1 001 Unallocated.
10 0 0 0 - 1 010 Unallocated.
10 0 0 0 - 1 011 Unallocated.
10 0 0 0 - 1 101 Unallocated.
10 0 0 1 - 0 000 LDADD, LDADDA, LDADDAL, LDADDL - 32-bit LDADDL variant FEAT_LSE
10 0 0 1 - 0 001 LDCLR, LDCLRA, LDCLRAL, LDCLRL - 32-bit LDCLRL variant FEAT_LSE
10 0 0 1 - 0 010 LDEOR, LDEORA, LDEORAL, LDEORL - 32-bit LDEORL variant FEAT_LSE
10 0 0 1 - 0 011 LDSET, LDSETA, LDSETAL, LDSETL - 32-bit LDSETL variant FEAT_LSE
10 0 0 1 - 0 100 LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL - 32-bit LDSMAXL variant FEAT_LSE
10 0 0 1 - 0 101 LDSMIN, LDSMINA, LDSMINAL, LDSMINL - 32-bit LDSMINL variant FEAT_LSE
10 0 0 1 - 0 110 LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL - 32-bit LDUMAXL variant FEAT_LSE
10 0 0 1 - 0 111 LDUMIN, LDUMINA, LDUMINAL, LDUMINL - 32-bit LDUMINL variant FEAT_LSE
10 0 0 1 - 1 000 SWP, SWPA, SWPAL, SWPL - 32-bit SWPL variant FEAT_LSE
10 0 1 0 - 0 000 LDADD, LDADDA, LDADDAL, LDADDL - 32-bit LDADDA variant FEAT_LSE
10 0 1 0 - 0 001 LDCLR, LDCLRA, LDCLRAL, LDCLRL - 32-bit LDCLRA variant FEAT_LSE
10 0 1 0 - 0 010 LDEOR, LDEORA, LDEORAL, LDEORL - 32-bit LDEORA variant FEAT_LSE
10 0 1 0 - 0 011 LDSET, LDSETA, LDSETAL, LDSETL - 32-bit LDSETA variant FEAT_LSE
10 0 1 0 - 0 100 LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL - 32-bit LDSMAXA variant FEAT_LSE
10 0 1 0 - 0 101 LDSMIN, LDSMINA, LDSMINAL, LDSMINL - 32-bit LDSMINA variant FEAT_LSE
10 0 1 0 - 0 110 LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL - 32-bit LDUMAXA variant FEAT_LSE
10 0 1 0 - 0 111 LDUMIN, LDUMINA, LDUMINAL, LDUMINL - 32-bit LDUMINA variant FEAT_LSE
10 0 1 0 - 1 000 SWP, SWPA, SWPAL, SWPL - 32-bit SWPA variant FEAT_LSE
10 0 1 0 - 1 100 LDAPR - 32-bit variant FEAT_LRCPC
10 0 1 1 - 0 000 LDADD, LDADDA, LDADDAL, LDADDL - 32-bit LDADDAL variant FEAT_LSE
10 0 1 1 - 0 001 LDCLR, LDCLRA, LDCLRAL, LDCLRL - 32-bit LDCLRAL variant FEAT_LSE
10 0 1 1 - 0 010 LDEOR, LDEORA, LDEORAL, LDEORL - 32-bit LDEORAL variant FEAT_LSE
10 0 1 1 - 0 011 LDSET, LDSETA, LDSETAL, LDSETL - 32-bit LDSETAL variant FEAT_LSE
10 0 1 1 - 0 100 LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL - 32-bit LDSMAXAL variant FEAT_LSE
10 0 1 1 - 0 101 LDSMIN, LDSMINA, LDSMINAL, LDSMINL - 32-bit LDSMINAL variant FEAT_LSE
10 0 1 1 - 0 110 LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL - 32-bit LDUMAXAL variant FEAT_LSE
10 0 1 1 - 0 111 LDUMIN, LDUMINA, LDUMINAL, LDUMINL -32-bit LDUMINAL variant FEAT_LSE
10 0 1 1 - 1 000 SWP, SWPA, SWPAL, SWPL - 32-bit SWPALvariant FEAT_LSE
11 0 0 0 - 0 000 LDADD, LDADDA, LDADDAL, LDADDL - 64-bit LDADD variant FEAT_LSE
11 0 0 0 - 0 001 LDCLR, LDCLRA, LDCLRAL, LDCLRL - 64-bit LDCLR variant FEAT_LSE
11 0 0 0 - 0 010 LDEOR, LDEORA, LDEORAL, LDEORL - 64-bit LDEOR variant FEAT_LSE
11 0 0 0 - 0 011 LDSET, LDSETA, LDSETAL, LDSETL - 64-bit LDSET variant FEAT_LSE
11 0 0 0 - 0 100 LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL - 64-bit LDSMAX variant FEAT_LSE
11 0 0 0 - 0 101 LDSMIN, LDSMINA, LDSMINAL, LDSMINL - 64-bit LDSMIN variant FEAT_LSE
11 0 0 0 - 0 110 LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL - 64-bit LDUMAX variant FEAT_LSE
11 0 0 0 - 0 111 LDUMIN, LDUMINA, LDUMINAL, LDUMINL - 64-bit LDUMIN variant FEAT_LSE
11 0 0 0 - 1 000 SWP, SWPA, SWPAL, SWPL - 64-bit SWP variant FEAT_LSE
11 0 0 0 - 1 010 ST64BV0 FEAT_LS64_ACCDATA
11 0 0 0 - 1 011 ST64BV FEAT_LS64_V
11 0 0 0 11111 1 001 ST64B FEAT_LS64
11 0 0 0 11111 1 101 LD64B FEAT_LS64
11 0 0 1 - 0 000 LDADD, LDADDA, LDADDAL, LDADDL - 64-bit LDADDL variant FEAT_LSE
11 0 0 1 - 0 001 LDCLR, LDCLRA, LDCLRAL, LDCLRL - 64-bit LDCLRL variant FEAT_LSE
11 0 0 1 - 0 010 LDEOR, LDEORA, LDEORAL, LDEORL - 64-bit LDEORL variant FEAT_LSE
11 0 0 1 - 0 011 LDSET, LDSETA, LDSETAL, LDSETL - 64-bit LDSETL variant FEAT_LSE
11 0 0 1 - 0 100 LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL - 64-bit LDSMAXL variant FEAT_LSE
11 0 0 1 - 0 101 LDSMIN, LDSMINA, LDSMINAL, LDSMINL - 64-bit LDSMINL variant FEAT_LSE
11 0 0 1 - 0 110 LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL - 64-bit LDUMAXL variant FEAT_LSE
11 0 0 1 - 0 111 LDUMIN, LDUMINA, LDUMINAL, LDUMINL - 64-bit LDUMINL variant FEAT_LSE
11 0 0 1 - 1 000 SWP, SWPA, SWPAL, SWPL - 64-bit SWPL variant FEAT_LSE
11 0 1 0 - 0 000 LDADD, LDADDA, LDADDAL, LDADDL - 64-bit LDADDA variant FEAT_LSE
11 0 1 0 - 0 001 LDCLR, LDCLRA, LDCLRAL, LDCLRL - 64-bit LDCLRA variant FEAT_LSE
11 0 1 0 - 0 010 LDEOR, LDEORA, LDEORAL, LDEORL - 64-bit LDEORA variant FEAT_LSE
11 0 1 0 - 0 011 LDSET, LDSETA, LDSETAL, LDSETL - 64-bit LDSETA variant FEAT_LSE
11 0 1 0 - 0 100 LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL - 64-bit LDSMAXA variant FEAT_LSE
11 0 1 0 - 0 101 LDSMIN, LDSMINA, LDSMINAL, LDSMINL - 64-bit LDSMINA variant FEAT_LSE
11 0 1 0 - 0 110 LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL - 64-bit LDUMAXA variant FEAT_LSE
11 0 1 0 - 0 111 LDUMIN, LDUMINA, LDUMINAL, LDUMINL - 64-bit LDUMINA variant FEAT_LSE
11 0 1 0 - 1 000 SWP, SWPA, SWPAL, SWPL - 64-bit SWPA variant FEAT_LSE
11 0 1 0 - 1 100 LDAPR - 64-bit variant FEAT_LRCPC
11 0 1 1 - 0 000 LDADD, LDADDA, LDADDAL, LDADDL - 64-bit LDADDAL variant FEAT_LSE
11 0 1 1 - 0 001 LDCLR, LDCLRA, LDCLRAL, LDCLRL - 64-bit LDCLRAL variant FEAT_LSE
11 0 1 1 - 0 010 LDEOR, LDEORA, LDEORAL, LDEORL - 64-bit LDEORAL variant FEAT_LSE
11 0 1 1 - 0 011 LDSET, LDSETA, LDSETAL, LDSETL - 64-bit LDSETAL variant FEAT_LSE
11 0 1 1 - 0 100 LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL - 64-bit LDSMAXAL variant FEAT_LSE
11 0 1 1 - 0 101 LDSMIN, LDSMINA, LDSMINAL, LDSMINL - 64-bit LDSMINAL variant FEAT_LSE
11 0 1 1 - 0 110 LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL - 64-bit LDUMAXAL variant FEAT_LSE
11 0 1 1 - 0 111 LDUMIN, LDUMINA, LDUMINAL, LDUMINL - 64-bit LDUMINAL variant FEAT_LSE
11 0 1 1 - 1 000 SWP, SWPA, SWPAL, SWPL - 64-bit SWPAL variant FEAT_LSE
#Load/store register (register offset)
4 33
30 31
26 26
22 23
13 15
x1 1 1x - Unallocated.
00 0 00 !=011 STRB (register) - Extended register variant
00 0 00 011 STRB (register) - Shifted register variant
00 0 01 !=011 LDRB (register) - Extended register variant
00 0 01 011 LDRB (register) - Shifted register variant
00 0 10 !=011 LDRSB (register) - 64-bit with extended register offset variant
00 0 10 011 LDRSB (register) - 64-bit with shifted register offset variant
00 0 11 !=011 LDRSB (register) - 32-bit with extended register offset variant
00 0 11 011 LDRSB (register) - 32-bit with shifted register offset variant
00 1 00 !=011 STR (register, SIMD&FP)
00 1 00 011 STR (register, SIMD&FP)
00 1 01 !=011 LDR (register, SIMD&FP)
00 1 01 011 LDR (register, SIMD&FP)
00 1 10 - STR (register, SIMD&FP)
00 1 11 - LDR (register, SIMD&FP)
01 0 00 - STRH (register)
01 0 01 - LDRH (register)
01 0 10 - LDRSH (register) - 64-bit variant
01 0 11 - LDRSH (register) - 32-bit variant
01 1 00 - STR (register, SIMD&FP)
01 1 01 - LDR (register, SIMD&FP)
1x 0 11 - Unallocated.
1x 1 1x - Unallocated.
10 0 00 - STR (register) - 32-bit variant
10 0 01 - LDR (register) - 32-bit variant
10 0 10 - LDRSW (register)
10 1 00 - STR (register, SIMD&FP)
10 1 01 - LDR (register, SIMD&FP)
11 0 00 - STR (register) - 64-bit variant
11 0 01 - LDR (register) - 64-bit variant
11 0 10 - PRFM (register)
11 1 00 - STR (register, SIMD&FP)
11 1 01 - LDR (register, SIMD&FP)
#Load/store register (pac)
4 6
30 31
26 26
23 23
11 11
!=11 - - - Unallocated.
11 0 0 0 LDRAA, LDRAB - Key A, offset variant FEAT_PAuth
11 0 0 1 LDRAA, LDRAB - Key A, pre-indexed variant FEAT_PAuth
11 0 1 0 LDRAA, LDRAB - Key B, offset variant FEAT_PAuth
11 0 1 1 LDRAA, LDRAB - Key B, pre-indexed variant FEAT_PAuth
11 1 - - Unallocated.
#Load/store register (unsigned immediate)
3 27
30 31
26 26
22 23
x1 1 1x Unallocated.
00 0 00 STRB (immediate)
00 0 01 LDRB (immediate)
00 0 10 LDRSB (immediate) - 64-bit variant
00 0 11 LDRSB (immediate) - 32-bit variant
00 1 00 STR (immediate, SIMD&FP) - 8-bit variant
00 1 01 LDR (immediate, SIMD&FP) - 8-bit variant
00 1 10 STR (immediate, SIMD&FP) - 128-bit variant
00 1 11 LDR (immediate, SIMD&FP) - 128-bit variant
01 0 00 STRH (immediate)
01 0 01 LDRH (immediate)
01 0 10 LDRSH (immediate) - 64-bit variant
01 0 11 LDRSH (immediate) - 32-bit variant
01 1 00 STR (immediate, SIMD&FP) - 16-bit variant
01 1 01 LDR (immediate, SIMD&FP) - 16-bit variant
1x 0 11 Unallocated.
1x 1 1x Unallocated.
10 0 00 STR (immediate) - 32-bit variant
10 0 01 LDR (immediate) - 32-bit variant
10 0 10 LDRSW (immediate)
10 1 00 STR (immediate, SIMD&FP) - 32-bit variant
10 1 01 LDR (immediate, SIMD&FP) - 32-bit variant
11 0 00 STR (immediate) - 64-bit variant
11 0 01 LDR (immediate) - 64-bit variant
11 0 10 PRFM (immediate)
11 1 00 STR (immediate, SIMD&FP) - 64-bit variant
11 1 01 LDR (immediate, SIMD&FP) - 64-bit variant
#Data Processing -- Register
4 12
30 30
28 28
21 24
10 15
0 1 0110 - Data-processing (2 source)
1 1 0110 - Data-processing (1 source)
- 0 0xxx - Logical (shifted register)
- 0 1xx0 - Add/subtract (shifted register)
- 0 1xx1 - Add/subtract (extended register)
- 1 0000 000000 Add/subtract (with carry)
- 1 0000 x00001 Rotate right into flags
- 1 0000 xx0010 Evaluate into flags
- 1 0010 xxxx0x Conditional compare (register)
- 1 0010 xxxx1x Conditional compare (immediate)
- 1 0100 - Conditional select
- 1 1xxx - Data-processing (3 source)
#Data-processing (2 source)
3 41
31 31
29 29
10 15
- - 000001 Unallocated.
- - 011xxx Unallocated.
- - 1xxxxx Unallocated.
- 0 00011x Unallocated.
- 0 001101 Unallocated.
- 0 00111x Unallocated.
- 1 00001x Unallocated.
- 1 0001xx Unallocated.
- 1 001xxx Unallocated.
- 1 01xxxx Unallocated.
0 - 000000 Unallocated.
0 0 000010 UDIV - 32-bit variant -
0 0 000011 SDIV - 32-bit variant -
0 0 00010x Unallocated.
0 0 001000 LSLV - 32-bit variant -
0 0 001001 LSRV - 32-bit variant -
0 0 001010 ASRV - 32-bit variant -
0 0 001011 RORV - 32-bit variant -
0 0 001100 Unallocated.
0 0 010x11 Unallocated.
0 0 010000 CRC32B, CRC32H, CRC32W, CRC32X - CRC32B variant FEAT_CRC32
0 0 010001 CRC32B, CRC32H, CRC32W, CRC32X - CRC32H variant FEAT_CRC32
0 0 010010 CRC32B, CRC32H, CRC32W, CRC32X - CRC32W variant FEAT_CRC32
0 0 010100 CRC32CB, CRC32CH, CRC32CW, CRC32CX - CRC32CB variant FEAT_CRC32
0 0 010101 CRC32CB, CRC32CH, CRC32CW, CRC32CX - CRC32CH variant FEAT_CRC32
0 0 010110 CRC32CB, CRC32CH, CRC32CW, CRC32CX - CRC32CW variant FEAT_CRC32
1 0 000000 SUBP FEAT_MTE
1 0 000010 UDIV - 64-bit variant -
1 0 000011 SDIV - 64-bit variant -
1 0 000100 IRG FEAT_MTE
1 0 000101 GMI FEAT_MTE
1 0 001000 LSLV - 64-bit variant -
1 0 001001 LSRV - 64-bit variant -
1 0 001010 ASRV - 64-bit variant -
1 0 001011 RORV - 64-bit variant -
1 0 001100 PACGA FEAT_PAuth
1 0 010xx0 Unallocated.
1 0 010x0x Unallocated.
1 0 010011 CRC32B, CRC32H, CRC32W, CRC32X - CRC32X variant FEAT_CRC32
1 0 010111 CRC32CB, CRC32CH, CRC32CW, CRC32CX - CRC32CX variant FEAT_CRC32
1 1 000000 SUBPS FEAT_MTE
#Data-processing (1 source)
5 43
31 31
29 29
16 20
10 15
5 9
- - - 1xxxxx - Unallocated.
- - xxx1x - - Unallocated.
- - xx1xx - - Unallocated.
- - x1xxx - - Unallocated.
- - 1xxxx - - Unallocated.
- 0 00000 00011x - Unallocated.
- 0 00000 001xxx - Unallocated.
- 0 00000 01xxxx - Unallocated.
- 1 - - - Unallocated.
0 - 00001 - - Unallocated. 
0 0 00000 000000 - RBIT - 32-bit variant -
0 0 00000 000001 - REV16 - 32-bit variant -
0 0 00000 000010 - REV - 32-bit variant -
0 0 00000 000011 - Unallocated.
0 0 00000 000100 - CLZ - 32-bit variant -
0 0 00000 000101 - CLS - 32-bit variant -
1 0 00000 000000 - RBIT - 64-bit variant -
1 0 00000 000001 - REV16 - 64-bit variant -
1 0 00000 000010 - REV32 -
1 0 00000 000011 - REV - 64-bit variant -
1 0 00000 000100 - CLZ - 64-bit variant -
1 0 00000 000101 - CLS - 64-bit variant -
1 0 00001 000000 - PACIA, PACIA1716, PACIASP, PACIAZ, PACIZA - PACIA variant FEAT_PAuth
1 0 00001 000001 - PACIB, PACIB1716, PACIBSP, PACIBZ, PACIZB - PACIB variant FEAT_PAuth
1 0 00001 000010 - PACDA, PACDZA - PACDA variant FEAT_PAuth
1 0 00001 000011 - PACDB, PACDZB - PACDB variant FEAT_PAuth
1 0 00001 000100 - AUTIA, AUTIA1716, AUTIASP, AUTIAZ, AUTIZA - AUTIA variant FEAT_PAuth
1 0 00001 000101 - AUTIB, AUTIB1716, AUTIBSP, AUTIBZ, AUTIZB - AUTIB variant FEAT_PAuth
1 0 00001 000110 - AUTDA, AUTDZA - AUTDA variant FEAT_PAuth
1 0 00001 000111 - AUTDB, AUTDZB - AUTDB variant FEAT_PAuth
1 0 00001 001000 11111 PACIA, PACIA1716, PACIASP, PACIAZ, PACIZA - PACIZA variant FEAT_PAuth
1 0 00001 001001 11111 PACIB, PACIB1716, PACIBSP, PACIBZ, PACIZB - PACIZB variant FEAT_PAuth
1 0 00001 001010 11111 PACDA, PACDZA - PACDZA variant FEAT_PAuth
1 0 00001 001011 11111 PACDB, PACDZB - PACDZB variant FEAT_PAuth
1 0 00001 001100 11111 AUTIA, AUTIA1716, AUTIASP, AUTIAZ, AUTIZA - AUTIZA variant FEAT_PAuth
1 0 00001 001101 11111 AUTIB, AUTIB1716, AUTIBSP, AUTIBZ, AUTIZB - AUTIZB variant FEAT_PAuth
1 0 00001 001110 11111 AUTDA, AUTDZA - AUTDZA variant FEAT_PAuth
1 0 00001 001111 11111 AUTDB, AUTDZB - AUTDZB variant FEAT_PAuth
1 0 00001 010000 11111 XPACD, XPACI, XPACLRI - XPACI variant FEAT_PAuth
1 0 00001 010001 11111 XPACD, XPACI, XPACLRI - XPACD variant FEAT_PAuth
1 0 00001 01001x - Unallocated.
1 0 00001 0101xx - Unallocated.
1 0 00001 011xxx - Unallocated.
#Logical (shifted register)
4 17
31 31
29 30
21 21
10 15
0 - - 1xxxxx Unallocated.
0 00 0 - AND (shifted register) - 32-bit variant
0 00 1 - BIC (shifted register) - 32-bit variant
0 01 0 - ORR (shifted register) - 32-bit variant
0 01 1 - ORN (shifted register) - 32-bit variant
0 10 0 - EOR (shifted register) - 32-bit variant
0 10 1 - EON (shifted register) - 32-bit variant
0 11 0 - ANDS (shifted register) - 32-bit variant
0 11 1 - BICS (shifted register) - 32-bit variant
1 00 0 - AND (shifted register) - 64-bit variant
1 00 1 - BIC (shifted register) - 64-bit variant
1 01 0 - ORR (shifted register) - 64-bit variant
1 01 1 - ORN (shifted register) - 64-bit variant
1 10 0 - EOR (shifted register) - 64-bit variant
1 10 1 - EON (shifted register) - 64-bit variant
1 11 0 - ANDS (shifted register) - 64-bit variant
1 11 1 - BICS (shifted register) - 64-bit variant
#Add/subtract (shifted register)
5 10
31 31
30 30
29 29
22 23
10 15
- - - 11 - Unallocated.
0 - - - 1xxxxx Unallocated.
0 0 0 - - ADD (shifted register) - 32-bit variant
0 0 1 - - ADDS (shifted register) - 32-bit variant
0 1 0 - - SUB (shifted register) - 32-bit variant
0 1 1 - - SUBS (shifted register) - 32-bit variant
1 0 0 - - ADD (shifted register) - 64-bit variant
1 0 1 - - ADDS (shifted register) - 64-bit variant
1 1 0 - - SUB (shifted register) - 64-bit variant
1 1 1 - - SUBS (shifted register) - 64-bit variant
#Add/subtract (extended register)
5 12
31 31
30 30
29 29
22 23
10 12
- - - - 1x1 Unallocated.
- - - - 11x Unallocated.
- - - x1 - Unallocated.
- - - 1x - Unallocated.
0 0 0 00 - ADD (extended register) - 32-bit variant
0 0 1 00 - ADDS (extended register) - 32-bit variant
0 1 0 00 - SUB (extended register) - 32-bit variant
0 1 1 00 - SUBS (extended register) - 32-bit variant
1 0 0 00 - ADD (extended register) - 64-bit variant
1 0 1 00 - ADDS (extended register) - 64-bit variant
1 1 0 00 - SUB (extended register) - 64-bit variant
1 1 1 00 - SUBS (extended register) - 64-bit variant
#Add/subtract (with carry)
3 8
31 31
30 30
29 29
0 0 0 ADC - 32-bit variant
0 0 1 ADCS - 32-bit variant
0 1 0 SBC - 32-bit variant
0 1 1 SBCS - 32-bit variant
1 0 0 ADC - 64-bit variant
1 0 1 ADCS - 64-bit variant
1 1 0 SBC - 64-bit variant
1 1 1 SBCS - 64-bit variant
#Rotate right into flags
4 5
31 31
30 30
29 29
4 4
0 - - - Unallocated.
1 0 0 - Unallocated.
1 0 1 0 RMIF FEAT_FlagM
1 0 1 1 Unallocated.
1 1 - - Unallocated.
#Evaluate into flags
7 8
31 31
30 30
29 29
15 20
14 14
4 4
0 3
0 0 0 - - - - Unallocated.
0 0 1 !=000000 - - - Unallocated.
0 0 1 000000 - 0 !=1101 Unallocated.
0 0 1 000000 - 1 - Unallocated.
0 0 1 000000 0 0 1101 SETF8, SETF16 - SETF8 variant FEAT_FlagM
0 0 1 000000 1 0 1101 SETF8, SETF16 - SETF16 variant FEAT_FlagM
0 1 - - - - - Unallocated.
1 - - - - - - Unallocated.
#Conditional compare (register)
5 7
31 31
30 30
29 29
10 10
4 4
- - - - 1 Unallocated.
- - - 1 - Unallocated.
- - 0 - - Unallocated.
0 0 1 0 0 CCMN (register) - 32-bit variant
0 1 1 0 0 CCMP (register) - 32-bit variant
1 0 1 0 0 CCMN (register) - 64-bit variant
1 1 1 0 0 CCMP (register) - 64-bit variant
#Conditional compare (immediate)
5 7
31 31
30 30
29 29
10 10
4 4
- - - - 1 Unallocated.
- - - 1 - Unallocated.
- - 0 - - Unallocated.
0 0 1 0 0 CCMN (immediate) - 32-bit variant
0 1 1 0 0 CCMP (immediate) - 32-bit variant
1 0 1 0 0 CCMN (immediate) - 64-bit variant
1 1 1 0 0 CCMP (immediate) - 64-bit variant
#Conditional select
4 10
31 31
30 30
29 29
10 11
- - - 1x Unallocated.
- - 1 - Unallocated.
0 0 0 00 CSEL - 32-bit variant
0 0 0 01 CSINC - 32-bit variant
0 1 0 00 CSINV - 32-bit variant
0 1 0 01 CSNEG - 32-bit variant
1 0 0 00 CSEL - 64-bit variant
1 0 0 01 CSINC - 64-bit variant
1 1 0 00 CSINV - 64-bit variant
1 1 0 01 CSNEG - 64-bit variant
#Data-processing (3 source)
4 23
31 31
29 30
21 23
15 15
- 00 010 1 Unallocated.
- 00 011 - Unallocated.
- 00 100 - Unallocated.
- 00 110 1 Unallocated.
- 00 111 - Unallocated.
- 01 - - Unallocated.
- 1x - - Unallocated.
0 00 000 0 MADD - 32-bit variant
0 00 000 1 MSUB - 32-bit variant
0 00 001 0 Unallocated.
0 00 001 1 Unallocated.
0 00 010 0 Unallocated.
0 00 101 0 Unallocated.
0 00 101 1 Unallocated.
0 00 110 0 Unallocated.
1 00 000 0 MADD - 64-bit variant
1 00 000 1 MSUB - 64-bit variant
1 00 001 0 SMADDL
1 00 001 1 SMSUBL
1 00 010 0 SMULH
1 00 101 0 UMADDL
1 00 101 1 UMSUBL
1 00 110 0 UMULH
#Data Processing -- Scalar Floating-Point and Advanced SIMD
4 62
28 31
23 24
19 22
10 18
0000 0x x101 00xxxxx10 Unallocated.
0010 0x x101 00xxxxx10 Unallocated.
0100 0x x101 00xxxxx10 Cryptographic AES -
0101 0x x0xx xxx0xxx00 Cryptographic three-register SHA -
0101 0x x0xx xxx0xxx10 Unallocated.
0101 0x x101 00xxxxx10 Cryptographic two-register SHA -
0110 0x x101 00xxxxx10 Unallocated.
0111 0x x0xx xxx0xxxx0 Unallocated.
0111 0x x101 00xxxxx10 Unallocated.
01x1 00 00xx xxx0xxxx1 Advanced SIMD scalar copy -
01x1 01 00xx xxx0xxxx1 Unallocated.
01x1 0x 0111 00xxxxx10 Unallocated.
01x1 0x 10xx xxx00xxx1 Advanced SIMD scalar three same FP16 -
01x1 0x 10xx xxx01xxx1 Unallocated.
01x1 0x 1111 00xxxxx10 Advanced SIMD scalar two-register miscellaneous FP16 -
01x1 0x x0xx xxx1xxxx0 Unallocated.
01x1 0x x0xx xxx1xxxx1 Advanced SIMD scalar three same extra -
01x1 0x x100 00xxxxx10 Advanced SIMD scalar two-register miscellaneous -
01x1 0x x110 00xxxxx10 Advanced SIMD scalar pairwise -
01x1 0x x1xx 1xxxxxx10 Unallocated.
01x1 0x x1xx x1xxxxx10 Unallocated.
01x1 0x x1xx xxxxxxx00 Advanced SIMD scalar three different -
01x1 0x x1xx xxxxxxxx1 Advanced SIMD scalar three same -
01x1 10 - xxxxxxxx1 Advanced SIMD scalar shift by immediate -
01x1 11 - xxxxxxxx1 Unallocated.
01x1 1x - xxxxxxxx0 Advanced SIMD scalar x indexed element -
0x00 0x x0xx xxx0xxx00 Advanced SIMD table lookup -
0x00 0x x0xx xxx0xxx10 Advanced SIMD permute -
0x10 0x x0xx xxx0xxxx0 Advanced SIMD extract -
0xx0 00 00xx xxx0xxxx1 Advanced SIMD copy -
0xx0 01 00xx xxx0xxxx1 Unallocated.
0xx0 0x 0111 00xxxxx10 Unallocated.
0xx0 0x 10xx xxx00xxx1 Advanced SIMD three same (FP16) -
0xx0 0x 10xx xxx01xxx1 Unallocated.
0xx0 0x 1111 00xxxxx10 Advanced SIMD two-register miscellaneous (FP16) -
0xx0 0x x0xx xxx1xxxx0 Unallocated.
0xx0 0x x0xx xxx1xxxx1 Advanced SIMD three-register extension -
0xx0 0x x100 00xxxxx10 Advanced SIMD two-register miscellaneous -
0xx0 0x x110 00xxxxx10 Advanced SIMD across lanes -
0xx0 0x x1xx 1xxxxxx10 Unallocated.
0xx0 0x x1xx x1xxxxx10 Unallocated.
0xx0 0x x1xx xxxxxxx00 Advanced SIMD three different -
0xx0 0x x1xx xxxxxxxx1 Advanced SIMD three same -
0xx0 10 0000 xxxxxxxx1 Advanced SIMD modified immediate -
0xx0 10 !=0000 xxxxxxxx1 Advanced SIMD shift by immediate -
0xx0 11 - xxxxxxxx1 Unallocated.
0xx0 1x - xxxxxxxx0 Advanced SIMD vector x indexed element -
1100 00 10xx xxx10xxxx Cryptographic three-register, imm2 -
1100 00 11xx xxx1x00xx Cryptographic three-register SHA 512 -
1100 00 - xxx0xxxxx Cryptographic four-register -
1100 01 00xx - XAR FEAT_SHA3
1100 01 1000 0001000xx Cryptographic two-register SHA 512 -
1xx0 1x - - Unallocated.
x0x1 0x x0xx - Conversion between floating-point and fixed-point -
x0x1 0x x1xx xxx000000 Conversion between floating-point and integer -
x0x1 0x x1xx xxxx10000 Floating-point data-processing (1 source) -
x0x1 0x x1xx xxxxx1000 Floating-point compare -
x0x1 0x x1xx xxxxxx100 Floating-point immediate -
x0x1 0x x1xx xxxxxxx01 Floating-point conditional compare -
x0x1 0x x1xx xxxxxxx10 Floating-point data-processing (2 source) -
x0x1 0x x1xx xxxxxxx11 Floating-point conditional select -
x0x1 1x - - Floating-point data-processing (3 source) -
#Cryptographic AES -
2 9
22 23
12 16
- x1xxx Unallocated.
- 000xx Unallocated.
- 1xxxx Unallocated.
x1 - Unallocated.
00 00100 AESE FEAT_AES
00 00101 AESD FEAT_AES
00 00110 AESMC FEAT_AES
00 00111 AESIMC FEAT_AES
1x - Unallocated.
#Cryptographic three-register SHA -
2 10
22 23
12 14
- 111 Unallocated.
x1 - Unallocated.
00 000 SHA1C FEAT_SHA1
00 001 SHA1P FEAT_SHA1
00 010 SHA1M FEAT_SHA1
00 011 SHA1SU0 FEAT_SHA1
00 100 SHA256H FEAT_SHA256
00 101 SHA256H2 FEAT_SHA256
00 110 SHA256SU1 FEAT_SHA256
1x - Unallocated.
#Cryptographic two-register SHA -
2 9
22 23
12 16
- xx1xx Unallocated.
- x1xxx Unallocated.
- 1xxxx Unallocated.
x1 - Unallocated.
00 00000 SHA1H FEAT_SHA1
00 00001 SHA1SU1 FEAT_SHA1
00 00010 SHA256SU0 FEAT_SHA256
00 00011 Unallocated.
1x - Unallocated.
#Advanced SIMD scalar copy -
2 6
29 29
11 14
0 xxx1 Unallocated.
0 xx1x Unallocated.
0 x1xx Unallocated.
0 0000 DUP (element)
0 1xxx Unallocated.
1 - Unallocated.
#Advanced SIMD scalar three same FP16 -
3 17
29 29
23 23
11 13
- - 110 Unallocated.
- 1 011 Unallocated.
0 0 011 FMULX FEAT_FP16
0 0 100 FCMEQ (register) FEAT_FP16
0 0 101 Unallocated.
0 0 111 FRECPS FEAT_FP16
0 1 100 Unallocated.
0 1 101 Unallocated.
0 1 111 FRSQRTS FEAT_FP16
1 0 011 Unallocated.
1 0 100 FCMGE (register) FEAT_FP16
1 0 101 FACGE FEAT_FP16
1 0 111 Unallocated.
1 1 010 FABD FEAT_FP16
1 1 100 FCMGT (register) FEAT_FP16
1 1 101 FACGT FEAT_FP16
1 1 111 Unallocated.
#Advanced SIMD scalar two-register miscellaneous FP16 -
3 31
29 29
23 23
12 16
- - 00xxx Unallocated.
- - 010xx Unallocated.
- - 10xxx Unallocated.
- - 1100x Unallocated.
- - 11110 Unallocated.
- 0 011xx Unallocated.
- 0 11111 Unallocated.
- 1 01111 Unallocated.
- 1 11100 Unallocated.
0 0 11010 FCVTNS (vector) FEAT_FP16
0 0 11011 FCVTMS (vector) FEAT_FP16
0 0 11100 FCVTAS (vector) FEAT_FP16
0 0 11101 SCVTF (vector, integer) FEAT_FP16
0 1 01100 FCMGT (zero) FEAT_FP16
0 1 01101 FCMEQ (zero) FEAT_FP16
0 1 01110 FCMLT (zero) FEAT_FP16
0 1 11010 FCVTPS (vector) FEAT_FP16
0 1 11011 FCVTZS (vector, integer) FEAT_FP16
0 1 11101 FRECPE FEAT_FP16
0 1 11111 FRECPX FEAT_FP16
1 0 11010 FCVTNU (vector) FEAT_FP16
1 0 11011 FCVTMU (vector) FEAT_FP16
1 0 11100 FCVTAU (vector) FEAT_FP16
1 0 11101 UCVTF (vector, integer) FEAT_FP16
1 1 01100 FCMGE (zero) FEAT_FP16
1 1 01101 FCMLE (zero) FEAT_FP16
1 1 01110 Unallocated.
1 1 11010 FCVTPU (vector) FEAT_FP16
1 1 11011 FCVTZU (vector, integer) FEAT_FP16
1 1 11101 FRSQRTE FEAT_FP16
1 1 11111 Unallocated.
#Advanced SIMD scalar three same extra -
2 7
29 29
11 14
- 001x Unallocated.
- 01xx Unallocated.
- 1xxx Unallocated.
0 0000 Unallocated.
0 0001 Unallocated.
1 0000 SQRDMLAH (vector) FEAT_RDM
1 0001 SQRDMLSH (vector) FEAT_RDM
#Advanced SIMD scalar two-register miscellaneous -
3 55
29 29
22 23
12 16
- - 0000x Unallocated.
- - 00010 Unallocated.
- - 0010x Unallocated.
- - 00110 Unallocated.
- - 01111 Unallocated.
- - 1000x Unallocated.
- - 10011 Unallocated.
- - 10101 Unallocated.
- - 10111 Unallocated.
- - 1100x Unallocated.
- - 11110 Unallocated.
- 0x 011xx Unallocated.
- 0x 11111 Unallocated.
- 1x 10110 Unallocated.
- 1x 11100 Unallocated.
0 - 00011 SUQADD
0 - 00111 SQABS
0 - 01000 CMGT (zero)
0 - 01001 CMEQ (zero)
0 - 01010 CMLT (zero)
0 - 01011 ABS
0 - 10010 Unallocated.
0 - 10100 SQXTN, SQXTN2
0 0x 10110 Unallocated.
0 0x 11010 FCVTNS (vector)
0 0x 11011 FCVTMS (vector)
0 0x 11100 FCVTAS (vector)
0 0x 11101 SCVTF (vector, integer)
0 1x 01100 FCMGT (zero)
0 1x 01101 FCMEQ (zero)
0 1x 01110 FCMLT (zero)
0 1x 11010 FCVTPS (vector)
0 1x 11011 FCVTZS (vector, integer)
0 1x 11101 FRECPE
0 1x 11111 FRECPX
1 - 00011 USQADD
1 - 00111 SQNEG
1 - 01000 CMGE (zero)
1 - 01001 CMLE (zero)
1 - 01010 Unallocated.
1 - 01011 NEG (vector)
1 - 10010 SQXTUN, SQXTUN2
1 - 10100 UQXTN, UQXTN2
1 0x 10110 FCVTXN, FCVTXN2
1 0x 11010 FCVTNU (vector)
1 0x 11011 FCVTMU (vector)
1 0x 11100 FCVTAU (vector)
1 0x 11101 UCVTF (vector, integer)
1 1x 01100 FCMGE (zero)
1 1x 01101 FCMLE (zero)
1 1x 01110 Unallocated.
1 1x 11010 FCVTPU (vector)
1 1x 11011 FCVTZU (vector, integer)
1 1x 11101 FRSQRTE
1 1x 11111 Unallocated.
#Advanced SIMD scalar pairwise -
3 20
29 29
22 23
12 16
- - 00xxx Unallocated.
- - 010xx Unallocated.
- - 01110 Unallocated.
- - 10xxx Unallocated.
- - 1100x Unallocated.
- - 11010 Unallocated.
- - 111xx Unallocated.
- 1x 01101 Unallocated.
0 - 11011 ADDP (scalar) -
0 0x 01100 FMAXNMP (scalar) - Encoding FEAT_FP16
0 0x 01101 FADDP (scalar) - Encoding FEAT_FP16
0 0x 01111 FMAXP (scalar) - Encoding FEAT_FP16
0 1x 01100 FMINNMP (scalar) - Encoding FEAT_FP16
0 1x 01111 FMINP (scalar) - Encoding FEAT_FP16
1 - 11011 Unallocated.
1 0x 01100 FMAXNMP (scalar) - Encoding -
1 0x 01101 FADDP (scalar) - Encoding -
1 0x 01111 FMAXP (scalar) - Encoding -
1 1x 01100 FMINNMP (scalar) - Encoding -
1 1x 01111 FMINP (scalar) - Encoding -
#Advanced SIMD scalar three different -
2 12
29 29
12 15
- 00xx Unallocated.
- 01xx Unallocated.
- 1000 Unallocated.
- 1010 Unallocated.
- 1100 Unallocated.
- 111x Unallocated.
0 1001 SQDMLAL, SQDMLAL2 (vector)
0 1011 SQDMLSL, SQDMLSL2 (vector)
0 1101 SQDMULL, SQDMULL2 (vector)
1 1001 Unallocated.
1 1011 Unallocated.
1 1101 Unallocated.
#Advanced SIMD scalar three same -
3 64
29 29
22 23
11 15
- - 00000 Unallocated.
- - 0001x Unallocated.
- - 00100 Unallocated.
- - 011xx Unallocated.
- - 1001x Unallocated.
- 1x 11011 Unallocated.
0 - 00001 SQADD
0 - 00101 SQSUB
0 - 00110 CMGT (register)
0 - 00111 CMGE (register)
0 - 01000 SSHL
0 - 01001 SQSHL (register)
0 - 01010 SRSHL
0 - 01011 SQRSHL
0 - 10000 ADD (vector)
0 - 10001 CMTST
0 - 10100 Unallocated.
0 - 10101 Unallocated.
0 - 10110 SQDMULH (vector)
0 - 10111 Unallocated.
0 0x 11000 Unallocated.
0 0x 11001 Unallocated.
0 0x 11010 Unallocated.
0 0x 11011 FMULX
0 0x 11100 FCMEQ (register)
0 0x 11101 Unallocated.
0 0x 11110 Unallocated.
0 0x 11111 FRECPS
0 1x 11000 Unallocated.
0 1x 11001 Unallocated.
0 1x 11010 Unallocated.
0 1x 11100 Unallocated.
0 1x 11101 Unallocated.
0 1x 11110 Unallocated.
0 1x 11111 FRSQRTS
1 - 00001 UQADD
1 - 00101 UQSUB
1 - 00110 CMHI (register)
1 - 00111 CMHS (register)
1 - 01000 USHL
1 - 01001 UQSHL (register)
1 - 01010 URSHL
1 - 01011 UQRSHL
1 - 10000 SUB (vector)
1 - 10001 CMEQ (register)
1 - 10100 Unallocated.
1 - 10101 Unallocated.
1 - 10110 SQRDMULH (vector)
1 - 10111 Unallocated.
1 0x 11000 Unallocated.
1 0x 11001 Unallocated.
1 0x 11010 Unallocated.
1 0x 11011 Unallocated.
1 0x 11100 FCMGE (register)
1 0x 11101 FACGE
1 0x 11110 Unallocated.
1 0x 11111 Unallocated.
1 1x 11000 Unallocated.
1 1x 11001 Unallocated.
1 1x 11010 FABD
1 1x 11100 FCMGT (register)
1 1x 11101 FACGT
1 1x 11110 Unallocated.
1 1x 11111 Unallocated.
#Advanced SIMD scalar shift by immediate -
3 41
29 29
19 22
11 15
- !=0000 00001 Unallocated.
- !=0000 00011 Unallocated.
- !=0000 00101 Unallocated.
- !=0000 00111 Unallocated.
- !=0000 01001 Unallocated.
- !=0000 01011 Unallocated.
- !=0000 01101 Unallocated.
- !=0000 01111 Unallocated.
- !=0000 101xx Unallocated.
- !=0000 110xx Unallocated.
- !=0000 11101 Unallocated.
- !=0000 11110 Unallocated.
- 0000 - Unallocated.
0 !=0000 00000 SSHR
0 !=0000 00010 SSRA
0 !=0000 00100 SRSHR
0 !=0000 00110 SRSRA
0 !=0000 01000 Unallocated.
0 !=0000 01010 SHL
0 !=0000 01100 Unallocated.
0 !=0000 01110 SQSHL (immediate)
0 !=0000 10000 Unallocated.
0 !=0000 10001 Unallocated.
0 !=0000 10010 SQSHRN, SQSHRN2
0 !=0000 10011 SQRSHRN, SQRSHRN2
0 !=0000 11100 SCVTF (vector, fixed-point)
0 !=0000 11111 FCVTZS (vector, fixed-point)
1 !=0000 00000 USHR
1 !=0000 00010 USRA
1 !=0000 00100 URSHR
1 !=0000 00110 URSRA
1 !=0000 01000 SRI
1 !=0000 01010 SLI
1 !=0000 01100 SQSHLU
1 !=0000 01110 UQSHL (immediate)
1 !=0000 10000 SQSHRUN, SQSHRUN2
1 !=0000 10001 SQRSHRUN, SQRSHRUN2
1 !=0000 10010 UQSHRN, UQSHRN2
1 !=0000 10011 UQRSHRN, UQRSHRN2
1 !=0000 11100 UCVTF (vector, fixed-point)
1 !=0000 11111 FCVTZU (vector, fixed-point)
#Advanced SIMD scalar x indexed element -
3 34
29 29
22 23
12 15
- - 0000 Unallocated.
- - 0010 Unallocated.
- - 0100 Unallocated.
- - 0110 Unallocated.
- - 1000 Unallocated.
- - 1010 Unallocated.
- - 1110 Unallocated.
- 01 0001 Unallocated.
- 01 0101 Unallocated.
- 01 1001 Unallocated.
0 - 0011 SQDMLAL, SQDMLAL2 (by element) -
0 - 0111 SQDMLSL, SQDMLSL2 (by element) -
0 - 1011 SQDMULL, SQDMULL2 (by element) -
0 - 1100 SQDMULH (by element) -
0 - 1101 SQRDMULH (by element) -
0 - 1111 Unallocated.
0 00 0001 FMLA (by element) - Encoding FEAT_FP16
0 00 0101 FMLS (by element) - Encoding FEAT_FP16
0 00 1001 FMUL (by element) - Encoding FEAT_FP16
0 1x 0001 FMLA (by element) - Encoding -
0 1x 0101 FMLS (by element) - Encoding -
0 1x 1001 FMUL (by element) - Encoding -
1 - 0011 Unallocated.
1 - 0111 Unallocated.
1 - 1011 Unallocated.
1 - 1100 Unallocated.
1 - 1101 SQRDMLAH (by element) FEAT_RDM
1 - 1111 SQRDMLSH (by element) FEAT_RDM
1 00 0001 Unallocated.
1 00 0101 Unallocated.
1 00 1001 FMULX (by element) - Encoding FEAT_FP16
1 1x 0001 Unallocated.
1 1x 0101 Unallocated.
1 1x 1001 FMULX (by element) - Encoding -
#Advanced SIMD table lookup -
3 10
22 23
13 14
12 12
x1 - - Unallocated.
00 00 0 TBL - Single register table variant
00 00 1 TBX - Single register table variant
00 01 0 TBL - Two register table variant
00 01 1 TBX - Two register table variant
00 10 0 TBL - Three register table variant
00 10 1 TBX - Three register table variant
00 11 0 TBL - Four register table variant
00 11 1 TBX - Four register table variant
1x - - Unallocated.
#Advanced SIMD permute -
1 8
12 14
000 Unallocated.
001 UZP1
010 TRN1
011 ZIP1
100 Unallocated.
101 UZP2
110 TRN2
111 ZIP2
#Advanced SIMD extract -
1 3
22 23
x1 Unallocated.
00 EXT
1x Unallocated.
#Advanced SIMD copy -
4 15
30 30
29 29
16 20
11 14
- - x0000 - Unallocated.
- 0 - 0000 DUP (element)
- 0 - 0001 DUP (general)
- 0 - 0010 Unallocated.
- 0 - 0100 Unallocated.
- 0 - 0110 Unallocated.
- 0 - 1xxx Unallocated.
0 0 - 0011 Unallocated.
0 0 - 0101 SMOV
0 0 - 0111 UMOV
0 1 - - Unallocated.
1 0 - 0011 INS (general)
1 0 - 0101 SMOV
1 0 x1000 0111 UMOV
1 1 - - INS (element)
#Advanced SIMD three same (FP16) -
3 32
29 29
23 23
11 13
0 0 000 FMAXNM (vector) FEAT_FP16
0 0 001 FMLA (vector) FEAT_FP16
0 0 010 FADD (vector) FEAT_FP16
0 0 011 FMULX FEAT_FP16
0 0 100 FCMEQ (register) FEAT_FP16
0 0 101 Unallocated.
0 0 110 FMAX (vector) FEAT_FP16
0 0 111 FRECPS FEAT_FP16
0 1 000 FMINNM (vector) FEAT_FP16
0 1 001 FMLS (vector) FEAT_FP16
0 1 010 FSUB (vector) FEAT_FP16
0 1 011 Unallocated.
0 1 100 Unallocated.
0 1 101 Unallocated.
0 1 110 FMIN (vector) FEAT_FP16
0 1 111 FRSQRTS FEAT_FP16
1 0 000 FMAXNMP (vector) FEAT_FP16
1 0 001 Unallocated.
1 0 010 FADDP (vector) FEAT_FP16
1 0 011 FMUL (vector) FEAT_FP16
1 0 100 FCMGE (register) FEAT_FP16
1 0 101 FACGE FEAT_FP16
1 0 110 FMAXP (vector) FEAT_FP16
1 0 111 FDIV (vector) FEAT_FP16
1 1 000 FMINNMP (vector) FEAT_FP16
1 1 001 Unallocated.
1 1 010 FABD FEAT_FP16
1 1 011 Unallocated.
1 1 100 FCMGT (register) FEAT_FP16
1 1 101 FACGT FEAT_FP16
1 1 110 FMINP (vector) FEAT_FP16
1 1 111 Unallocated.
#Advanced SIMD two-register miscellaneous (FP16) -
3 39
29 29
23 23
12 16
- - 00xxx Unallocated.
- - 010xx Unallocated.
- - 10xxx Unallocated.
- - 11110 Unallocated.
- 0 011xx Unallocated.
- 0 11111 Unallocated.
- 1 11100 Unallocated.
0 0 11000 FRINTN (vector) FEAT_FP16
0 0 11001 FRINTM (vector) FEAT_FP16
0 0 11010 FCVTNS (vector) FEAT_FP16
0 0 11011 FCVTMS (vector) FEAT_FP16
0 0 11100 FCVTAS (vector) FEAT_FP16
0 0 11101 SCVTF (vector, integer) FEAT_FP16
0 1 01100 FCMGT (zero) FEAT_FP16
0 1 01101 FCMEQ (zero) FEAT_FP16
0 1 01110 FCMLT (zero) FEAT_FP16
0 1 01111 FABS (vector) FEAT_FP16
0 1 11000 FRINTP (vector) FEAT_FP16
0 1 11001 FRINTZ (vector) FEAT_FP16
0 1 11010 FCVTPS (vector) FEAT_FP16
0 1 11011 FCVTZS (vector, integer) FEAT_FP16
0 1 11101 FRECPE FEAT_FP16
0 1 11111 Unallocated.
1 0 11000 FRINTA (vector) FEAT_FP16
1 0 11001 FRINTX (vector) FEAT_FP16
1 0 11010 FCVTNU (vector) FEAT_FP16
1 0 11011 FCVTMU (vector) FEAT_FP16
1 0 11100 FCVTAU (vector) FEAT_FP16
1 0 11101 UCVTF (vector, integer) FEAT_FP16
1 1 01100 FCMGE (zero) FEAT_FP16
1 1 01101 FCMLE (zero) FEAT_FP16
1 1 01110 Unallocated.
1 1 01111 FNEG (vector) FEAT_FP16
1 1 11000 Unallocated.
1 1 11001 FRINTI (vector) FEAT_FP16
1 1 11010 FCVTPU (vector) FEAT_FP16
1 1 11011 FCVTZU (vector, integer) FEAT_FP16
1 1 11101 FRSQRTE FEAT_FP16
1 1 11111 FSQRT (vector) FEAT_FP16
#Advanced SIMD three-register extension -
4 28
30 30
29 29
22 23
11 14
- - 0x 0011 Unallocated.
- - 11 0011 Unallocated.
- 0 - 0000 Unallocated.
- 0 - 0001 Unallocated.
- 0 - 0010 SDOT (vector) FEAT_DotProd
- 0 - 1xxx Unallocated.
- 0 10 0011 USDOT (vector) FEAT_I8MM
- 1 - 0000 SQRDMLAH (vector) FEAT_RDM
- 1 - 0001 SQRDMLSH (vector) FEAT_RDM
- 1 - 0010 UDOT (vector) FEAT_DotProd
- 1 - 10xx FCMLA FEAT_FCMA
- 1 - 11x0 FCADD FEAT_FCMA
- 1 00 1101 Unallocated.
- 1 00 1111 Unallocated.
- 1 01 1111 BFDOT (vector) FEAT_BF16
- 1 1x 1101 Unallocated.
- 1 10 0011 Unallocated.
- 1 10 1111 Unallocated.
- 1 11 1111 BFMLALB, BFMLALT (vector) FEAT_BF16
0 - - 01xx Unallocated.
0 1 01 1101 Unallocated.
1 - 0x 01xx Unallocated.
1 - 1x 011x Unallocated.
1 0 10 0100 SMMLA (vector) FEAT_I8MM
1 0 10 0101 USMMLA (vector) FEAT_I8MM
1 1 01 1101 BFMMLA FEAT_BF16
1 1 10 0100 UMMLA (vector) FEAT_I8MM
1 1 10 0101 Unallocated.
#Advanced SIMD two-register miscellaneous -
3 82
29 29
22 23
12 16
- - 1000x Unallocated.
- - 10101 Unallocated.
- 0x 011xx Unallocated.
- 1x 10111 Unallocated.
- 1x 11110 Unallocated.
- 11 10110 Unallocated.
0 - 00000 REV64 -
0 - 00001 REV16 (vector) -
0 - 00010 SADDLP -
0 - 00011 SUQADD -
0 - 00100 CLS (vector) -
0 - 00101 CNT -
0 - 00110 SADALP -
0 - 00111 SQABS -
0 - 01000 CMGT (zero) -
0 - 01001 CMEQ (zero) -
0 - 01010 CMLT (zero) -
0 - 01011 ABS -
0 - 10010 XTN, XTN2 -
0 - 10011 Unallocated.
0 - 10100 SQXTN, SQXTN2 -
0 0x 10110 FCVTN, FCVTN2 -
0 0x 10111 FCVTL, FCVTL2 -
0 0x 11000 FRINTN (vector) -
0 0x 11001 FRINTM (vector) -
0 0x 11010 FCVTNS (vector) -
0 0x 11011 FCVTMS (vector) -
0 0x 11100 FCVTAS (vector) -
0 0x 11101 SCVTF (vector, integer) -
0 0x 11110 FRINT32Z (vector) FEAT_FRINTTS
0 0x 11111 FRINT64Z (vector) FEAT_FRINTTS
0 1x 01100 FCMGT (zero) -
0 1x 01101 FCMEQ (zero) -
0 1x 01110 FCMLT (zero) -
0 1x 01111 FABS (vector) -
0 1x 11000 FRINTP (vector) -
0 1x 11001 FRINTZ (vector) -
0 1x 11010 FCVTPS (vector) -
0 1x 11011 FCVTZS (vector, integer) -
0 1x 11100 URECPE -
0 1x 11101 FRECPE -
0 1x 11111 Unallocated.
0 10 10110 BFCVTN, BFCVTN2 FEAT_BF16
1 - 00000 REV32 (vector) -
1 - 00001 Unallocated.
1 - 00010 UADDLP -
1 - 00011 USQADD -
1 - 00100 CLZ (vector) -
1 - 00110 UADALP -
1 - 00111 SQNEG -
1 - 01000 CMGE (zero) -
1 - 01001 CMLE (zero) -
1 - 01010 Unallocated.
1 - 01011 NEG (vector) -
1 - 10010 SQXTUN, SQXTUN2 -
1 - 10011 SHLL, SHLL2 -
1 - 10100 UQXTN, UQXTN2 -
1 0x 10110 FCVTXN, FCVTXN2 -
1 0x 10111 Unallocated.
1 0x 11000 FRINTA (vector) -
1 0x 11001 FRINTX (vector) -
1 0x 11010 FCVTNU (vector) -
1 0x 11011 FCVTMU (vector) -
1 0x 11100 FCVTAU (vector) -
1 0x 11101 UCVTF (vector, integer) -
1 0x 11110 FRINT32X (vector) FEAT_FRINTTS
1 0x 11111 FRINT64X (vector) FEAT_FRINTTS
1 00 00101 NOT -
1 01 00101 RBIT (vector) -
1 1x 00101 Unallocated.
1 1x 01100 FCMGE (zero) -
1 1x 01101 FCMLE (zero) -
1 1x 01110 Unallocated.
1 1x 01111 FNEG (vector) -
1 1x 11000 Unallocated.
1 1x 11001 FRINTI (vector) -
1 1x 11010 FCVTPU (vector) -
1 1x 11011 FCVTZU (vector, integer) -
1 1x 11100 URSQRTE -
1 1x 11101 FRSQRTE -
1 1x 11111 FSQRT (vector) -
1 10 10110 Unallocated.
#Advanced SIMD across lanes -
3 30
29 29
22 23
12 16
- - 0000x Unallocated.
- - 00010 Unallocated.
- - 001xx Unallocated.
- - 0100x Unallocated.
- - 01011 Unallocated.
- - 01101 Unallocated.
- - 01110 Unallocated.
- - 10xxx Unallocated.
- - 1100x Unallocated.
- - 111xx Unallocated.
0 - 00011 SADDLV -
0 - 01010 SMAXV -
0 - 11010 SMINV -
0 - 11011 ADDV -
0 00 01100 FMAXNMV - Encoding FEAT_FP16
0 00 01111 FMAXV - Encoding FEAT_FP16
0 01 01100 Unallocated.
0 01 01111 Unallocated.
0 10 01100 FMINNMV - Encoding FEAT_FP16
0 10 01111 FMINV - Encoding FEAT_FP16
0 11 01100 Unallocated.
0 11 01111 Unallocated.
1 - 00011 UADDLV -
1 - 01010 UMAXV -
1 - 11010 UMINV -
1 - 11011 Unallocated.
1 0x 01100 FMAXNMV - Encoding -
1 0x 01111 FMAXV - Encoding -
1 1x 01100 FMINNMV - Encoding -
1 1x 01111 FMINV - Encoding -
#Advanced SIMD three different -
2 31
29 29
12 15
- 1111 Unallocated.
0 0000 SADDL, SADDL2
0 0001 SADDW, SADDW2
0 0010 SSUBL, SSUBL2
0 0011 SSUBW, SSUBW2
0 0100 ADDHN, ADDHN2
0 0101 SABAL, SABAL2
0 0110 SUBHN, SUBHN2
0 0111 SABDL, SABDL2
0 1000 SMLAL, SMLAL2 (vector)
0 1001 SQDMLAL, SQDMLAL2 (vector)
0 1010 SMLSL, SMLSL2 (vector)
0 1011 SQDMLSL, SQDMLSL2 (vector)
0 1100 SMULL, SMULL2 (vector)
0 1101 SQDMULL, SQDMULL2 (vector)
0 1110 PMULL, PMULL2
1 0000 UADDL, UADDL2
1 0001 UADDW, UADDW2
1 0010 USUBL, USUBL2
1 0011 USUBW, USUBW2
1 0100 RADDHN, RADDHN2
1 0101 UABAL, UABAL2
1 0110 RSUBHN, RSUBHN2
1 0111 UABDL, UABDL2
1 1000 UMLAL, UMLAL2 (vector)
1 1001 Unallocated.
1 1010 UMLSL, UMLSL2 (vector)
1 1011 Unallocated.
1 1100 UMULL, UMULL2 (vector)
1 1101 Unallocated.
1 1110 Unallocated.
#Advanced SIMD three same -
3 90
29 29
22 23
11 15
0 - 00000 SHADD -
0 - 00001 SQADD -
0 - 00010 SRHADD -
0 - 00100 SHSUB -
0 - 00101 SQSUB -
0 - 00110 CMGT (register) -
0 - 00111 CMGE (register) -
0 - 01000 SSHL -
0 - 01001 SQSHL (register) -
0 - 01010 SRSHL -
0 - 01011 SQRSHL -
0 - 01100 SMAX -
0 - 01101 SMIN -
0 - 01110 SABD -
0 - 01111 SABA -
0 - 10000 ADD (vector) -
0 - 10001 CMTST -
0 - 10010 MLA (vector) -
0 - 10011 MUL (vector) -
0 - 10100 SMAXP -
0 - 10101 SMINP -
0 - 10110 SQDMULH (vector) -
0 - 10111 ADDP (vector) -
0 0x 11000 FMAXNM (vector) -
0 0x 11001 FMLA (vector) -
0 0x 11010 FADD (vector) -
0 0x 11011 FMULX -
0 0x 11100 FCMEQ (register) -
0 0x 11110 FMAX (vector) -
0 0x 11111 FRECPS -
0 00 00011 AND (vector) -
0 00 11101 FMLAL, FMLAL2 (vector) - Encoding FEAT_FHM
0 01 00011 BIC (vector, register) -
0 01 11101 Unallocated.
0 1x 11000 FMINNM (vector) -
0 1x 11001 FMLS (vector) -
0 1x 11010 FSUB (vector) -
0 1x 11011 Unallocated.
0 1x 11100 Unallocated.
0 1x 11110 FMIN (vector) -
0 1x 11111 FRSQRTS -
0 10 00011 ORR (vector, register) -
0 10 11101 FMLSL, FMLSL2 (vector) - Encoding FEAT_FHM
0 11 00011 ORN (vector) -
0 11 11101 Unallocated.
1 - 00000 UHADD -
1 - 00001 UQADD -
1 - 00010 URHADD -
1 - 00100 UHSUB -
1 - 00101 UQSUB -
1 - 00110 CMHI (register) -
1 - 00111 CMHS (register) -
1 - 01000 USHL -
1 - 01001 UQSHL (register) -
1 - 01010 URSHL -
1 - 01011 UQRSHL -
1 - 01100 UMAX -
1 - 01101 UMIN -
1 - 01110 UABD -
1 - 01111 UABA -
1 - 10000 SUB (vector) -
1 - 10001 CMEQ (register) -
1 - 10010 MLS (vector) -
1 - 10011 PMUL -
1 - 10100 UMAXP -
1 - 10101 UMINP -
1 - 10110 SQRDMULH (vector) -
1 - 10111 Unallocated.
1 0x 11000 FMAXNMP (vector) -
1 0x 11010 FADDP (vector) -
1 0x 11011 FMUL (vector) -
1 0x 11100 FCMGE (register) -
1 0x 11101 FACGE -
1 0x 11110 FMAXP (vector) -
1 0x 11111 FDIV (vector) -
1 00 00011 EOR (vector) -
1 00 11001 FMLAL, FMLAL2 (vector) - Encoding FEAT_FHM
1 01 00011 BSL -
1 01 11001 Unallocated.
1 1x 11000 FMINNMP (vector) -
1 1x 11010 FABD -
1 1x 11011 Unallocated.
1 1x 11100 FCMGT (register) -
1 1x 11101 FACGT -
1 1x 11110 FMINP (vector) -
1 1x 11111 Unallocated.
1 10 00011 BIT -
1 10 11001 FMLSL, FMLSL2 (vector) - Encoding FEAT_FHM
1 11 00011 BIF -
1 11 11001 Unallocated.
#Advanced SIMD modified immediate -
4 22 
30 30
29 29
12 15
11 11
- 0 0xxx 1 Unallocated.
- 0 0xx0 0 MOVI - 32-bit shifted immediate variant -
- 0 0xx1 0 ORR (vector, immediate) - 32-bit variant -
- 0 10xx 1 Unallocated.
- 0 10x0 0 MOVI - 16-bit shifted immediate variant -
- 0 10x1 0 ORR (vector, immediate) - 16-bit variant -
- 0 110x 0 MOVI - 32-bit shifting ones variant -
- 0 110x 1 Unallocated.
- 0 1110 0 MOVI - 8-bit variant -
- 0 1110 1 Unallocated.
- 0 1111 0 FMOV (vector, immediate) - Single-precision variant -
- 0 1111 1 FMOV (vector, immediate) - Encoding FEAT_FP16
- 1 - 1 Unallocated.
- 1 0xx0 0 MVNI - 32-bit shifted immediate variant -
- 1 0xx1 0 BIC (vector, immediate) - 32-bit variant -
- 1 10x0 0 MVNI - 16-bit shifted immediate variant -
- 1 10x1 0 BIC (vector, immediate) - 16-bit variant -
- 1 110x 0 MVNI - 32-bit shifting ones variant -
0 1 1110 0 MOVI - 64-bit scalar variant -
0 1 1111 0 Unallocated.
1 1 1110 0 MOVI - 64-bit vector variant -
1 1 1111 0 FMOV (vector, immediate) - Double-precision variant -
#Advanced SIMD shift by immediate -
2 43
29 29
11 15
- 00001 Unallocated.
- 00011 Unallocated.
- 00101 Unallocated.
- 00111 Unallocated.
- 01001 Unallocated.
- 01011 Unallocated.
- 01101 Unallocated.
- 01111 Unallocated.
- 10101 Unallocated.
- 1011x Unallocated.
- 110xx Unallocated.
- 11101 Unallocated.
- 11110 Unallocated.
0 00000 SSHR
0 00010 SSRA
0 00100 SRSHR
0 00110 SRSRA
0 01000 Unallocated.
0 01010 SHL
0 01100 Unallocated.
0 01110 SQSHL (immediate)
0 10000 SHRN, SHRN2
0 10001 RSHRN, RSHRN2
0 10010 SQSHRN, SQSHRN2
0 10011 SQRSHRN, SQRSHRN2
0 10100 SSHLL, SSHLL2
0 11100 SCVTF (vector, fixed-point)
0 11111 FCVTZS (vector, fixed-point)
1 00000 USHR
1 00010 USRA
1 00100 URSHR
1 00110 URSRA
1 01000 SRI
1 01010 SLI
1 01100 SQSHLU
1 01110 UQSHL (immediate)
1 10000 SQSHRUN, SQSHRUN2
1 10001 SQRSHRUN, SQRSHRUN2
1 10010 UQSHRN, UQSHRN2
1 10011 UQRSHRN, UQRSHRN2
1 10100 USHLL, USHLL2
1 11100 UCVTF (vector, fixed-point)
1 11111 FCVTZU (vector, fixed-point)
#Advanced SIMD vector x indexed element -
3 56
29 29
22 23
12 15
- 01 1001 Unallocated.
0 - 0010 SMLAL, SMLAL2 (by element) -
0 - 0011 SQDMLAL, SQDMLAL2 (by element) -
0 - 0110 SMLSL, SMLSL2 (by element) -
0 - 0111 SQDMLSL, SQDMLSL2 (by element) -
0 - 1000 MUL (by element) -
0 - 1010 SMULL, SMULL2 (by element) -
0 - 1011 SQDMULL, SQDMULL2 (by element) -
0 - 1100 SQDMULH (by element) -
0 - 1101 SQRDMULH (by element) -
0 - 1110 SDOT (by element) FEAT_DotProd
0 0x 0000 Unallocated.
0 0x 0100 Unallocated.
0 00 0001 FMLA (by element) - Encoding FEAT_FP16
0 00 0101 FMLS (by element) - Encoding FEAT_FP16
0 00 1001 FMUL (by element) - Encoding FEAT_FP16
0 00 1111 SUDOT (by element) FEAT_I8MM
0 01 0001 Unallocated.
0 01 0101 Unallocated.
0 01 1111 BFDOT (by element) FEAT_BF16
0 1x 0001 FMLA (by element) - Encoding -
0 1x 0101 FMLS (by element) - Encoding -
0 1x 1001 FMUL (by element) - Encoding -
0 10 0000 FMLAL, FMLAL2 (by element) - Encoding FEAT_FHM
0 10 0100 FMLSL, FMLSL2 (by element) - Encoding FEAT_FHM
0 10 1111 USDOT (by element) FEAT_I8MM
0 11 0000 Unallocated.
0 11 0100 Unallocated.
0 11 1111 BFMLALB, BFMLALT (by element) FEAT_BF16
1 - 0000 MLA (by element) -
1 - 0010 UMLAL, UMLAL2 (by element) -
1 - 0100 MLS (by element) -
1 - 0110 UMLSL, UMLSL2 (by element) -
1 - 1010 UMULL, UMULL2 (by element) -
1 - 1011 Unallocated.
1 - 1101 SQRDMLAH (by element) FEAT_RDM
1 - 1110 UDOT (by element) FEAT_DotProd
1 - 1111 SQRDMLSH (by element) FEAT_RDM
1 0x 1000 Unallocated.
1 0x 1100 Unallocated.
1 00 0001 Unallocated.
1 00 0011 Unallocated.
1 00 0101 Unallocated.
1 00 0111 Unallocated.
1 00 1001 FMULX (by element) - Encoding FEAT_FP16
1 01 0xx1 FCMLA (by element) FEAT_FCMA
1 1x 1001 FMULX (by element) - Encoding -
1 10 0xx1 FCMLA (by element) FEAT_FCMA
1 10 1000 FMLAL, FMLAL2 (by element) - Encoding FEAT_FHM
1 10 1100 FMLSL, FMLSL2 (by element) - Encoding FEAT_FHM
1 11 0001 Unallocated.
1 11 0011 Unallocated.
1 11 0101 Unallocated.
1 11 0111 Unallocated.
1 11 1000 Unallocated.
1 11 1100 Unallocated.
#Cryptographic three-register, imm2 -
1 4
10 11
00 SM3TT1A FEAT_SM3
01 SM3TT1B FEAT_SM3
10 SM3TT2A FEAT_SM3
11 SM3TT2B FEAT_SM3
#Cryptographic three-register SHA 512 -
2 8
14 14
10 11
0 00 SHA512H FEAT_SHA512
0 01 SHA512H2 FEAT_SHA512
0 10 SHA512SU1 FEAT_SHA512
0 11 RAX1 FEAT_SHA3
1 00 SM3PARTW1 FEAT_SM3
1 01 SM3PARTW2 FEAT_SM3
1 10 SM4EKEY FEAT_SM4
1 11 Unallocated.
#Cryptographic four-register -
1 4
21 22
00 EOR3 FEAT_SHA3
01 BCAX FEAT_SHA3
10 SM3SS1 FEAT_SM3
11 Unallocated.
#Cryptographic two-register SHA 512 -
1 3
10 11
00 SHA512SU0 FEAT_SHA512
01 SM4E FEAT_SM4
1x Unallocated.
#Conversion between floating-point and fixed-point -
6 32
31 31
29 29
22 23
19 20
16 18
10 15
- - - - 1xx - Unallocated.
- - - x0 00x - Unallocated.
- - - x1 01x - Unallocated.
- - - 0x 00x - Unallocated.
- - - 1x 01x - Unallocated.
- - 10 - - - Unallocated.
- 1 - - - - Unallocated.
0 - - - - 0xxxxx Unallocated.
0 0 00 00 010 - SCVTF (scalar, fixed-point) - 32-bit to single-precision variant -
0 0 00 00 011 - UCVTF (scalar, fixed-point) - 32-bit to single-precision variant -
0 0 00 11 000 - FCVTZS (scalar, fixed-point) - Single-precision to 32-bit variant -
0 0 00 11 001 - FCVTZU (scalar, fixed-point) - Single-precision to 32-bit variant -
0 0 01 00 010 - SCVTF (scalar, fixed-point) - 32-bit to double-precision variant -
0 0 01 00 011 - UCVTF (scalar, fixed-point) - 32-bit to double-precision variant -
0 0 01 11 000 - FCVTZS (scalar, fixed-point) - Double-precision to 32-bit variant -
0 0 01 11 001 - FCVTZU (scalar, fixed-point) - Double-precision to 32-bit variant -
0 0 11 00 010 - SCVTF (scalar, fixed-point) - 32-bit to half-precision variant FEAT_FP16
0 0 11 00 011 - UCVTF (scalar, fixed-point) - 32-bit to half-precision variant FEAT_FP16
0 0 11 11 000 - FCVTZS (scalar, fixed-point) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 11 001 - FCVTZU (scalar, fixed-point) - Half-precision to 32-bit variant FEAT_FP16
1 0 00 00 010 - SCVTF (scalar, fixed-point) - 64-bit to single-precision variant -
1 0 00 00 011 - UCVTF (scalar, fixed-point) - 64-bit to single-precision variant -
1 0 00 11 000 - FCVTZS (scalar, fixed-point) - Single-precision to 64-bit variant -
1 0 00 11 001 - FCVTZU (scalar, fixed-point) - Single-precision to 64-bit variant -
1 0 01 00 010 - SCVTF (scalar, fixed-point) - 64-bit to double-precision variant -
1 0 01 00 011 - UCVTF (scalar, fixed-point) - 64-bit to double-precision variant -
1 0 01 11 000 - FCVTZS (scalar, fixed-point) - Double-precision to 64-bit variant -
1 0 01 11 001 - FCVTZU (scalar, fixed-point) - Double-precision to 64-bit variant -
1 0 11 00 010 - SCVTF (scalar, fixed-point) - 64-bit to half-precision variant FEAT_FP16
1 0 11 00 011 - UCVTF (scalar, fixed-point) - 64-bit to half-precision variant FEAT_FP16
1 0 11 11 000 - FCVTZS (scalar, fixed-point) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 11 001 - FCVTZU (scalar, fixed-point) - Half-precision to 64-bit variant FEAT_FP16
#Conversion between floating-point and integer -
5 101
31 31
29 29
22 23
19 20
16 18
- - - x1 01x Unallocated.
- - - x1 10x Unallocated.
- - - 1x 01x Unallocated.
- - - 1x 10x Unallocated.
- 0 10 - 0xx Unallocated.
- 0 10 - 10x Unallocated.
- 1 - - - Unallocated.
0 0 00 x1 11x Unallocated.
0 0 00 00 000 FCVTNS (scalar) - Single-precision to 32-bit variant -
0 0 00 00 001 FCVTNU (scalar) - Single-precision to 32-bit variant -
0 0 00 00 010 SCVTF (scalar, integer) - 32-bit to single-precision variant -
0 0 00 00 011 UCVTF (scalar, integer) - 32-bit to single-precision variant -
0 0 00 00 100 FCVTAS (scalar) - Single-precision to 32-bit variant -
0 0 00 00 101 FCVTAU (scalar) - Single-precision to 32-bit variant -
0 0 00 00 110 FMOV (general) - Single-precision to 32-bit variant -
0 0 00 00 111 FMOV (general) - 32-bit to single-precision variant -
0 0 00 01 000 FCVTPS (scalar) - Single-precision to 32-bit variant -
0 0 00 01 001 FCVTPU (scalar) - Single-precision to 32-bit variant -
0 0 00 1x 11x Unallocated.
0 0 00 10 000 FCVTMS (scalar) - Single-precision to 32-bit variant -
0 0 00 10 001 FCVTMU (scalar) - Single-precision to 32-bit variant -
0 0 00 11 000 FCVTZS (scalar, integer) - Single-precision to 32-bit variant -
0 0 00 11 001 FCVTZU (scalar, integer) - Single-precision to 32-bit variant -
0 0 01 0x 11x Unallocated.
0 0 01 00 000 FCVTNS (scalar) - Double-precision to 32-bit variant -
0 0 01 00 001 FCVTNU (scalar) - Double-precision to 32-bit variant -
0 0 01 00 010 SCVTF (scalar, integer) - 32-bit to double-precision variant -
0 0 01 00 011 UCVTF (scalar, integer) - 32-bit to double-precision variant -
0 0 01 00 100 FCVTAS (scalar) - Double-precision to 32-bit variant -
0 0 01 00 101 FCVTAU (scalar) - Double-precision to 32-bit variant -
0 0 01 01 000 FCVTPS (scalar) - Double-precision to 32-bit variant -
0 0 01 01 001 FCVTPU (scalar) - Double-precision to 32-bit variant -
0 0 01 10 000 FCVTMS (scalar) - Double-precision to 32-bit variant -
0 0 01 10 001 FCVTMU (scalar) - Double-precision to 32-bit variant -
0 0 01 10 11x Unallocated.
0 0 01 11 000 FCVTZS (scalar, integer) - Double-precision to 32-bit variant -
0 0 01 11 001 FCVTZU (scalar, integer) - Double-precision to 32-bit variant -
0 0 01 11 110 FJCVTZS FEAT_JSCVT
0 0 01 11 111 Unallocated.
0 0 10 - 11x Unallocated.
0 0 11 00 000 FCVTNS (scalar) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 00 001 FCVTNU (scalar) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 00 010 SCVTF (scalar, integer) - 32-bit to half-precision variant FEAT_FP16
0 0 11 00 011 UCVTF (scalar, integer) - 32-bit to half-precision variant FEAT_FP16
0 0 11 00 100 FCVTAS (scalar) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 00 101 FCVTAU (scalar) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 00 110 FMOV (general) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 00 111 FMOV (general) - 32-bit to half-precision variant FEAT_FP16
0 0 11 01 000 FCVTPS (scalar) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 01 001 FCVTPU (scalar) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 10 000 FCVTMS (scalar) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 10 001 FCVTMU (scalar) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 11 000 FCVTZS (scalar, integer) - Half-precision to 32-bit variant FEAT_FP16
0 0 11 11 001 FCVTZU (scalar, integer) - Half-precision to 32-bit variant FEAT_FP16
1 0 00 - 11x Unallocated.
1 0 00 00 000 FCVTNS (scalar) - Single-precision to 64-bit variant -
1 0 00 00 001 FCVTNU (scalar) - Single-precision to 64-bit variant -
1 0 00 00 010 SCVTF (scalar, integer) - 64-bit to single-precision variant -
1 0 00 00 011 UCVTF (scalar, integer) - 64-bit to single-precision variant -
1 0 00 00 100 FCVTAS (scalar) - Single-precision to 64-bit variant -
1 0 00 00 101 FCVTAU (scalar) - Single-precision to 64-bit variant -
1 0 00 01 000 FCVTPS (scalar) - Single-precision to 64-bit variant -
1 0 00 01 001 FCVTPU (scalar) - Single-precision to 64-bit variant -
1 0 00 10 000 FCVTMS (scalar) - Single-precision to 64-bit variant -
1 0 00 10 001 FCVTMU (scalar) - Single-precision to 64-bit variant -
1 0 00 11 000 FCVTZS (scalar, integer) - Single-precision to 64-bit variant -
1 0 00 11 001 FCVTZU (scalar, integer) - Single-precision to 64-bit variant -
1 0 01 x1 11x Unallocated.
1 0 01 00 000 FCVTNS (scalar) - Double-precision to 64-bit variant -
1 0 01 00 001 FCVTNU (scalar) - Double-precision to 64-bit variant -
1 0 01 00 010 SCVTF (scalar, integer) - 64-bit to double-precision variant -
1 0 01 00 011 UCVTF (scalar, integer) - 64-bit to double-precision variant -
1 0 01 00 100 FCVTAS (scalar) - Double-precision to 64-bit variant -
1 0 01 00 101 FCVTAU (scalar) - Double-precision to 64-bit variant -
1 0 01 00 110 FMOV (general) - Double-precision to 64-bit variant -
1 0 01 00 111 FMOV (general) - 64-bit to double-precision variant -
1 0 01 01 000 FCVTPS (scalar) - Double-precision to 64-bit variant -
1 0 01 01 001 FCVTPU (scalar) - Double-precision to 64-bit variant -
1 0 01 1x 11x Unallocated.
1 0 01 10 000 FCVTMS (scalar) - Double-precision to 64-bit variant -
1 0 01 10 001 FCVTMU (scalar) - Double-precision to 64-bit variant -
1 0 01 11 000 FCVTZS (scalar, integer) - Double-precision to 64-bit variant -
1 0 01 11 001 FCVTZU (scalar, integer) - Double-precision to 64-bit variant -
1 0 10 x0 11x Unallocated.
1 0 10 01 110 FMOV (general) - Top half of 128-bit to 64-bit variant -
1 0 10 01 111 FMOV (general) - 64-bit to top half of 128-bit variant -
1 0 10 1x 11x Unallocated.
1 0 11 00 000 FCVTNS (scalar) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 00 001 FCVTNU (scalar) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 00 010 SCVTF (scalar, integer) - 64-bit to half-precision variant FEAT_FP16
1 0 11 00 011 UCVTF (scalar, integer) - 64-bit to half-precision variant FEAT_FP16
1 0 11 00 100 FCVTAS (scalar) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 00 101 FCVTAU (scalar) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 00 110 FMOV (general) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 00 111 FMOV (general) - 64-bit to half-precision variant FEAT_FP16
1 0 11 01 000 FCVTPS (scalar) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 01 001 FCVTPU (scalar) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 10 000 FCVTMS (scalar) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 10 001 FCVTMU (scalar) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 11 000 FCVTZS (scalar, integer) - Half-precision to 64-bit variant FEAT_FP16
1 0 11 11 001 FCVTZU (scalar, integer) - Half-precision to 64-bit variant FEAT_FP16
#Floating-point data-processing (1 source) -
4 64
31 31
29 29
22 23
15 20
- - - 1xxxxx Unallocated.
- 1 - - Unallocated.
0 0 00 000000 FMOV (register) - Single-precision variant -
0 0 00 000001 FABS (scalar) - Single-precision variant -
0 0 00 000010 FNEG (scalar) - Single-precision variant -
0 0 00 000011 FSQRT (scalar) - Single-precision variant -
0 0 00 000100 Unallocated.
0 0 00 000101 FCVT - Single-precision to double-precision variant -
0 0 00 000110 Unallocated.
0 0 00 000111 FCVT - Single-precision to half-precision variant -
0 0 00 001000 FRINTN (scalar) - Single-precision variant -
0 0 00 001001 FRINTP (scalar) - Single-precision variant -
0 0 00 001010 FRINTM (scalar) - Single-precision variant -
0 0 00 001011 FRINTZ (scalar) - Single-precision variant -
0 0 00 001100 FRINTA (scalar) - Single-precision variant -
0 0 00 001101 Unallocated.
0 0 00 001110 FRINTX (scalar) - Single-precision variant -
0 0 00 001111 FRINTI (scalar) - Single-precision variant -
0 0 00 010000 FRINT32Z (scalar) - Single-precision variant FEAT_FRINTTS
0 0 00 010001 FRINT32X (scalar) - Single-precision variant FEAT_FRINTTS
0 0 00 010010 FRINT64Z (scalar) - Single-precision variant FEAT_FRINTTS
0 0 00 010011 FRINT64X (scalar) - Single-precision variant FEAT_FRINTTS
0 0 00 0101xx Unallocated.
0 0 00 011xxx Unallocated.
0 0 01 000000 FMOV (register) - Double-precision variant -
0 0 01 000001 FABS (scalar) - Double-precision variant -
0 0 01 000010 FNEG (scalar) - Double-precision variant -
0 0 01 000011 FSQRT (scalar) - Double-precision variant -
0 0 01 000100 FCVT - Double-precision to single-precision variant -
0 0 01 000101 Unallocated.
0 0 01 000110 BFCVT FEAT_BF16
0 0 01 000111 FCVT - Double-precision to half-precision variant -
0 0 01 001000 FRINTN (scalar) - Double-precision variant -
0 0 01 001001 FRINTP (scalar) - Double-precision variant -
0 0 01 001010 FRINTM (scalar) - Double-precision variant -
0 0 01 001011 FRINTZ (scalar) - Double-precision variant -
0 0 01 001100 FRINTA (scalar) - Double-precision variant -
0 0 01 001101 Unallocated.
0 0 01 001110 FRINTX (scalar) - Double-precision variant -
0 0 01 001111 FRINTI (scalar) - Double-precision variant -
0 0 01 010000 FRINT32Z (scalar) - Double-precision variant FEAT_FRINTTS
0 0 01 010001 FRINT32X (scalar) - Double-precision variant FEAT_FRINTTS
0 0 01 010010 FRINT64Z (scalar) - Double-precision variant FEAT_FRINTTS
0 0 01 010011 FRINT64X (scalar) - Double-precision variant FEAT_FRINTTS
0 0 01 0101xx Unallocated.
0 0 01 011xxx Unallocated.
0 0 10 0xxxxx Unallocated.
0 0 11 000000 FMOV (register) - Half-precision variant FEAT_FP16
0 0 11 000001 FABS (scalar) - Half-precision variant FEAT_FP16
0 0 11 000010 FNEG (scalar) - Half-precision variant FEAT_FP16
0 0 11 000011 FSQRT (scalar) - Half-precision variant FEAT_FP16
0 0 11 000100 FCVT - Half-precision to single-precision variant -
0 0 11 000101 FCVT - Half-precision to double-precision variant -
0 0 11 00011x Unallocated.
0 0 11 001000 FRINTN (scalar) - Half-precision variant FEAT_FP16
0 0 11 001001 FRINTP (scalar) - Half-precision variant FEAT_FP16
0 0 11 001010 FRINTM (scalar) - Half-precision variant FEAT_FP16
0 0 11 001011 FRINTZ (scalar) - Half-precision variant FEAT_FP16
0 0 11 001100 FRINTA (scalar) - Half-precision variant FEAT_FP16
0 0 11 001101 Unallocated.
0 0 11 001110 FRINTX (scalar) - Half-precision variant FEAT_FP16
0 0 11 001111 FRINTI (scalar) - Half-precision variant FEAT_FP16
0 0 11 01xxxx Unallocated.
1 - - - Unallocated.
#Floating-point compare -
5 20
31 31
29 29
22 23
14 15
0 4
- - - - xxxx1 Unallocated.
- - - - xxx1x Unallocated.
- - - - xx1xx Unallocated.
- - - x1 - Unallocated.
- - - 1x - Unallocated.
- - 10 - - Unallocated.
- 1 - - - Unallocated.
0 0 00 00 00000 FCMP -
0 0 00 00 01000 FCMP -
0 0 00 00 10000 FCMPE -
0 0 00 00 11000 FCMPE -
0 0 01 00 00000 FCMP -
0 0 01 00 01000 FCMP -
0 0 01 00 10000 FCMPE -
0 0 01 00 11000 FCMPE -
0 0 11 00 00000 FCMP FEAT_FP16
0 0 11 00 01000 FCMP FEAT_FP16
0 0 11 00 10000 FCMPE FEAT_FP16
0 0 11 00 11000 FCMPE FEAT_FP16
1 - - - - Unallocated.
#Floating-point immediate -
4 11
31 31
29 29
22 23
5 9
- - - xxxx1 Unallocated.
- - - xxx1x Unallocated.
- - - xx1xx Unallocated.
- - - x1xxx Unallocated.
- - - 1xxxx Unallocated.
- - 10 - Unallocated.
- 1 - - Unallocated.
0 0 00 00000 FMOV (scalar, immediate) - Single-precision variant -
0 0 01 00000 FMOV (scalar, immediate) - Double-precision variant -
0 0 11 00000 FMOV (scalar, immediate) - Half-precision variant FEAT_FP16
1 - - - Unallocated.
#Floating-point conditional compare -
4 9
31 31
29 29
22 23
4 4
- - 10 - Unallocated.
- 1 - - Unallocated.
0 0 00 0 FCCMP - Single-precision variant -
0 0 00 1 FCCMPE - Single-precision variant -
0 0 01 0 FCCMP - Double-precision variant -
0 0 01 1 FCCMPE - Double-precision variant -
0 0 11 0 FCCMP - Half-precision variant FEAT_FP16
0 0 11 1 FCCMPE - Half-precision variant FEAT_FP16
1 - - - Unallocated.
#Floating-point data-processing (2 source) -
4 33 
31 31
29 29
22 23
12 15
- - - 1xx1 Unallocated.
- - - 1x1x Unallocated.
- - - 11xx Unallocated.
- - 10 - Unallocated.
- 1 - - Unallocated.
0 0 00 0000 FMUL (scalar) - Single-precision variant -
0 0 00 0001 FDIV (scalar) - Single-precision variant -
0 0 00 0010 FADD (scalar) - Single-precision variant -
0 0 00 0011 FSUB (scalar) - Single-precision variant -
0 0 00 0100 FMAX (scalar) - Single-precision variant -
0 0 00 0101 FMIN (scalar) - Single-precision variant -
0 0 00 0110 FMAXNM (scalar) - Single-precision variant -
0 0 00 0111 FMINNM (scalar) - Single-precision variant -
0 0 00 1000 FNMUL (scalar) - Single-precision variant -
0 0 01 0000 FMUL (scalar) - Double-precision variant -
0 0 01 0001 FDIV (scalar) - Double-precision variant -
0 0 01 0010 FADD (scalar) - Double-precision variant -
0 0 01 0011 FSUB (scalar) - Double-precision variant -
0 0 01 0100 FMAX (scalar) - Double-precision variant -
0 0 01 0101 FMIN (scalar) - Double-precision variant -
0 0 01 0110 FMAXNM (scalar) - Double-precision variant -
0 0 01 0111 FMINNM (scalar) - Double-precision variant -
0 0 01 1000 FNMUL (scalar) - Double-precision variant -
0 0 11 0000 FMUL (scalar) - Half-precision variant FEAT_FP16
0 0 11 0001 FDIV (scalar) - Half-precision variant FEAT_FP16
0 0 11 0010 FADD (scalar) - Half-precision variant FEAT_FP16
0 0 11 0011 FSUB (scalar) - Half-precision variant FEAT_FP16
0 0 11 0100 FMAX (scalar) - Half-precision variant FEAT_FP16
0 0 11 0101 FMIN (scalar) - Half-precision variant FEAT_FP16
0 0 11 0110 FMAXNM (scalar) - Half-precision variant FEAT_FP16
0 0 11 0111 FMINNM (scalar) - Half-precision variant FEAT_FP16
0 0 11 1000 FNMUL (scalar) - Half-precision variant FEAT_FP16
1 - - - Unallocated.
#Floating-point conditional select -
3 6
31 31
29 29
22 23
- - 10 Unallocated.
- 1 - Unallocated.
0 0 00 FCSEL - Single-precision variant -
0 0 01 FCSEL - Double-precision variant -
0 0 11 FCSEL - Half-precision variant FEAT_FP16
1 - - Unallocated.
#Floating-point data-processing (3 source) -
5 15
31 31
29 29
22 23
21 21
15 15
- - 10 - - Unallocated.
- 1 - - - Unallocated.
0 0 00 0 0 FMADD - Single-precision variant -
0 0 00 0 1 FMSUB - Single-precision variant -
0 0 00 1 0 FNMADD - Single-precision variant -
0 0 00 1 1 FNMSUB - Single-precision variant -
0 0 01 0 0 FMADD - Double-precision variant -
0 0 01 0 1 FMSUB - Double-precision variant -
0 0 01 1 0 FNMADD - Double-precision variant -
0 0 01 1 1 FNMSUB - Double-precision variant -
0 0 11 0 0 FMADD - Half-precision variant FEAT_FP16
0 0 11 0 1 FMSUB - Half-precision variant FEAT_FP16
0 0 11 1 0 FNMADD - Half-precision variant FEAT_FP16
0 0 11 1 1 FNMSUB - Half-precision variant FEAT_FP16
1 - - - - Unallocated.
