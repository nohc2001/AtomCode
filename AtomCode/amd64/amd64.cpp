#include <iostream>

using namespace std;

/*
type0 : 
" Eb, Gb",
" Ev, Gv",
" Gb, Eb",
" Gv, Ev",
" AL, lb",
" rAx, lz",

type1 : 
" eAX",
" eCX",
" eDX",
" eBX",
" eSP",
" eBP",
" eSI",
" eDI",

type2 : 
" rAX/r8",
" rCX/r9",
" rDX/r10",
" rBX/r11",
" rSP/r12",
" rBP/r13",
" rSI/r14",
" rDI/r15",

type3 :
" Eb, Gb"
" Ev, Gv"
*/

/*
todo : 
1. �𸣴� �ϸ�� ������ �����ϰ� �ش� ���� �ּ��ϱ�. 
*/
char OneByteOpcode_DecodingTable[255][32] = {
"ADD Eb, Gb",//00  ���ϱ�
"ADD Ev, Gv",
"ADD Gb, Eb",
"ADD Gv, Ev",
"ADD AL, lb",
"ADD rAx, lz",
"PUSH ES^i64",
"POP ES^i64",
"OR Eb, Gb",//08
"OR Ev, Gv",
"OR Gb, Eb",
"OR Gv, Ev",
"OR AL, lb",
"OR rAx, lz",
"PUSH CS^i64",
"2byte Escape", // goto 2byte opcode decoding table
"ADC Eb, Gb",//10   ĳ���÷��׿� ������ �ִ� ���ϱ�
"ADC Ev, Gv",
"ADC Gb, Eb",
"ADC Gv, Ev",
"ADC AL, lb",
"ADC rAx, lz",
"PUSH SS^i64",
"POP SS^i64",
"SBB Eb, Gb",//18   ����� �����϶� ĳ���÷��׿����ִ� ����
"SBB Ev, Gv",
"SBB Gb, Eb",
"SBB Gv, Ev",
"SBB AL, lb",
"SBB rAx, lz",
"PUSH DS^i64",
"POP DS^i64",
"AND Eb, Gb",//20
"AND Ev, Gv",
"AND Gb, Eb",
"AND Gv, Ev",
"AND AL, lb",
"AND rAx, lz",
"SEG=ES(Prefix)",
"DAA^i64",
"SUB Eb, Gb",//28    ����
"SUB Ev, Gv",
"SUB Gb, Eb",
"SUB Gv, Ev",
"SUB AL, lb",
"SUB rAx, lz",
"SEG=SS(Prefix)",
"DAS^i64",
"XOR Eb, Gb",//30
"XOR Ev, Gv",
"XOR Gb, Eb",
"XOR Gv, Ev",
"XOR AL, lb",
"XOR rAx, lz",
"SEG=CS(Prefix)",
"AAA^i64",
"CMP Eb, Gb",//38   �ΰ� �� �� �÷��� ����
"CMP Ev, Gv",
"CMP Gb, Eb",
"CMP Gv, Ev",
"CMP AL, lb",
"CMP rAx, lz",
"SEG=DS(Prefix)",
"AAS^i64",
"INC eAX", //40   += 1;
"INC eCX",
"INC eDX",
"INC eBX",
"INC eSP",
"INC eBP",
"INC eSI",
"INC eDI",
"DEC eAX", //48   -= 1;
"DEC eCX",
"DEC eDX",
"DEC eBX",
"DEC eSP",
"DEC eBP",
"DEC eSI",
"DEC eDI",
"PUSH rAX/r8",//50
"PUSH rCX/r9",
"PUSH rDX/r10",
"PUSH rBX/r11",
"PUSH rSP/r12",
"PUSH rBP/r13",
"PUSH rSI/r14",
"PUSH rDI/r15",
"POP rAX/r8",//58
"POP rCX/r9",
"POP rDX/r10",
"POP rBX/r11",
"POP rSP/r12",
"POP rBP/r13",
"POP rSI/r14",
"POP rDI/r15",
"PUSHA^i64 / PUSHAD^i64", //60 ��� ���뷹�����͸� ���ÿ� Ǫ���Ѵ�.
"POPA^i64 / POPAD^i64", //61 ���ÿ� ����� ���뷹�����Ͱ��� �ε�
"BOUND^i64 Gv, Ma", //62 ?? ��踦 �������� �迭 �ε��� �˻�
"APRL Ew, Gw / MOVSXD Gv, Ev",//63
"PUSH^d64 lz",//68
"IMUL Gv, Ev, lz",//69
"PUSH^d64 lb",//6A
"IMUL Gv, Ev, lb",//6B
"INS/INSB Yb, Dx",
"INS/INSW/INSD Yz, DX",
"OUTS/OUTSB DX, Xb",
"OUTS/OUTSW/OUTSD DX, Xz",
"JO Jb", // 70 jumps -> �ڿ� "opcode�� CB�� �ٴ´�."
"JNO Jb",
"JB/JNAE/JC Jb",
"JNB/JAE/JNC Jb",
"JZ/JE Jb",
"JNZ/JNE Jb",
"JBE/JNA Jb",
"JNBE/JA Jb",
"JS Jb",
"JNS Jb",
"JP/JPE Jb",
"JNP/JPO Jb",
"JL/JNGE Jb",
"JNL/JGE Jb",
"JLE/JNG Jb",
"JNLE/JG Jb",
"ImmGrp1^1A Eb, lb",//80
"ImmGrp1^1A Ev, lz",
"ImmGrp1^1A Eb, lb^i64",
"ImmGrp1^1A Ev, lb",
"TEST",
"XCHG",
"Unallocated",
"MOV Eb, Gb", // 88
"MOV Ev, Gv",
"MOV Gb, Eb",
"MOV Gv, Ev",
"MOV Ev, Sw",
"LEA Gv, M",
"MOV Sw, Ew",
"POP^d64"
"NOP/XCHG rAX/r8", // 90
"XCHG rCX/r9",
"XCHG rDX/r10",
"XCHG rBX/r11",
"XCHG rSP/r12",
"XCHG rBP/r13",
"XCHG rSI/r14",
"XCHG rDI/r15",
"CBW/CWDE/CDQE",//98
"CWD/CDQ/CQO",
"farCALL^i64 Ap",
"FWAIT/WAIT",
"PUSHF/PUSHD/PUSHQ^d64/PUSHFv",
"POPF/POPD/POPQ^d64/POPFv",
"SAHF",
"LAHF",
"MOV AL, Ob",//A0
"MOV rAX, Ov",
"MOV Ob, AL",
"MOV Ov, rAX",
"MOVS/MOVSB Yb, Xb",
"MOVS/MOVSW/MOVSD/MOVSQ Xv, Yv",
"CMPS/CMPSB Xb, Yb",
"CMPS/CMPSW/CMPSD Xv, Yv",
"TEST AL, lb",//A8
"TEST rAX, lz",
"STOS/STOSB Yb, AL",
"STOS/STOSW/STOSD/STOSQ Yv, rAX",
"LODS/LODSB, AL, Xb",
"LODS/LODSW/LODSD/LODSQ rAX, Xv",
"SCAS/SCASB AL, Yb",
"SACS/SCASW/SCASD/SCASQ rAX, Yv",
"MOV AL/r8, lb",//B0
"MOV CL/r9, lb",
"MOV DL/r10, lb",
"MOV BL/r11, lb",
"MOV SP/r12, lb",
"MOV BP/r13, lb",
"MOV SI/r14, lb",
"MOV DI/r15, lb",
"MOV rAX/r8, ls",//B8
"MOV rCX/r9, ls",
"MOV rDX/r10, ls",
"MOV rBX/r11, ls",
"MOV rSP/r12, ls",
"MOV rBP/r13, ls",
"MOV rSI/r14, ls",
"MOV rDI/r15, ls",
"ShiftGrp2^1A Eb, lb", // C0
"ShiftGrp2^1A Ev, lv",
"nearRET lw",
"nearRET",
"LES Gz, Mp", // VEX2byte
"LDS Gz, Mp", // VEX1byte
"Grp11^1A-MOV Eb, lb",
"Grp11^1A-MOV Eb, lb",
"ENTER lw, lb", // C8
"LEAVE",
"farRET lw",
"farRET",
"INT3",
"INT lb",
"INTO",
"IRETD/IRETQ",
"ShiftGrp2^1A Eb, 1", // D0
"ShiftGrp2^1A Ev, 1",
"ShiftGrp2^1A Eb, CL",
"ShiftGrp2^1A Ev, CL",
"AAM lb",
"AAD lb",
"Unallocated",
"XLAT/XLATB",
"ESC", // D8 escape to coprocessor instruction set
"ESC",
"ESC",
"ESC",
"ESC",
"ESC",
"ESC",
"ESC",
"LOOPNE/LOOPNZ Jb",//E0
"LOOPE/LOOPZ Jb",
"LOOP Jb",
"JrCXZ Jb",
"IN AL, lb",
"IN eAX, lb",
"OUT lb, AL",
"OUT lb, eAX",
"nearCALL Jz",//E8
"nearJMP Jz",
"farJMP Ap",
"shortJMP Jb",
"IN AL, DX",
"IN eAX, DX",
"OUT DX, AL",
"OUT DX, eAX",
"Unallocated"//F0
"INT1",//F1
"Unallocated",
"Unallocated",
"HLT",
"CMC",
"UnaryGrp3^1A Eb",
"UnaryGrp3^1A Ev",
"CLC",//F8
"STC",
"CLI",
"STI",
"CLD",
"STD",
"GrpINC/DEC 4^1A",
"GrpINC/DEC 5^1A" //FF
};

char TwoByteOpcode_DecodingTable[256][32] = {
	"Grp6^1A",//00
	"Grp7^1A",
	"LAR Gv, Ew",
	"LSL Gv, Ew",
	"Unallocated",
	"SYSCALL",
	"CLTS",
	"SYSRET",
	"INVD",
	"WBINVD",
	"Unallocated",
	"2byteIllegalOpcodeUD2",
	"Unallocated",
	"PREFETCHW Ev",
	"Unallocated",
	"Unallocated",

	"__66F3F2",//10
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",

	"MOV Rd, Cd",//20
	"MOV Rd, Dd",
	"MOV Cd, Rd",
	"MOV Dd, Rd",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",

	"WRMSR",//30
	"RDTSC",
	"RDMSR",
	"RDPMC",
	"SYSENTER",
	"SYSEXIT",
	"Unallocated",
	"GETSEC",
	"3byteEscapeA4", // 3byte opcode table A-4�� ����
	"Unallocated",
	"3byteEscapeA5", // 3byte opcode table A-5�� ����
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"CMOVO Gv, Ev",//40
	"CMOVNO Gv, Ev",
	"CMOVB/CMOVC/CMOVNAE Gv, Ev",
	"CMOVAE/CMOVNB/CMOVNC Gv, Ev",
	"CMOVE/CMOVZ Gv, Ev",
	"CMOVNE/CMOVNZ Gv, Ev",
	"CMOVBE/CMOVNA Gv, Ev",
	"CMOVA/CMOVNBE Gv, Ev",
	"CMOVS Gv, Ev",
	"CMOVNS Gv, Ev",
	"CMOVP/CMOVPE Gv, Ev",
	"CMOVNP/CMOVPO Gv, Ev",
	"CMOVL/CMOVNGE Gv, Ev",
	"CMOVNL/CMOVGE Gv, Ev",
	"CMOVLE/CMOVNG Gv, Ev",
	"CMOVNLE/CMOVG Gv, Ev",

	"__66F3F2",//50
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",

	"__66F3",//60
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",
	"__66F3",

	"__66F3F2",//70
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",

	"JO Jz",//80
	"JNO Jz",
	"JB/JCNAE Jz",
	"JAE/JNB/JNC Jz",
	"JE/JZ Jz",
	"JNE/JNZ Jz",
	"JBE/JNA Jz",
	"JA/JNBE Jz",
	"JS Jz",
	"JNS Jz",
	"JP/JPE Jz",
	"JNP/JPO Jz",
	"JL/JNGE Jz",
	"JNL/JGE Jz",
	"JLE/JNG Jz",
	"JNLE/JG Jz",

	"SETO Eb",//90
	"SETNO Eb",
	"SETB/SETC/SETNAE Eb",
	"SETAE/SETNB/SETNC Eb",
	"SETE/SETZ Eb",
	"SETNE/SETNZ Eb",
	"SETBE/SETNA Eb",
	"SETA/SESTNBE Eb",
	"SETS Eb",
	"SETNS Eb",
	"SETP/SETPE Eb",
	"SETNP/SETPO Eb",
	"SETL/SETNGE Eb",
	"SETNL/SETGE Eb",
	"SETLE/SETNG Eb",
	"SETNLG/SETG Eb",

	"PUSH FS",//A0
	"POP FS",
	"CPUID",
	"BT Ev, Gv",
	"SHLD Ev, Gv, lb",
	"SHLD Ev, Gv, CL",
	"Unallocated",
	"Unallocated",
	"PUSH GS",
	"POP GS",
	"RSM",
	"BTS Ev, Gv",
	"SHRD Ev, Gv, lb",
	"SHRD Ev, Gv, CL",
	"Grp15^1A^1C",
	"IMUL Gv, Ev",

	"CMPXCHG Eb, Gb",//B0
	"CMPXCHG Ev, Gv",
	"LSS Gv, Mp",
	"BTR Ev, Gv",
	"LFS Gv, Mp",
	"LGS Gv, Mp",
	"MOVZX Gv, Eb",
	"MOVZX Gv, Ew",
	"__F3",
	"Grp10^1A_InvalidOpcode^1B",
	"Grp8^1A Ev, lb",
	"BTC Ev, Gv",
	"__F3",
	"__F3",
	"MOVSX Gv, Eb",
	"MOVSX Gv, Ew",

	"XADD Eb, Gb",//C0
	"XADD Ev, Gv",
	"__66F3F2",
	"MOVNTI My, Gy",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"Grp9^1A",
	"BSWAP RAX/EAX/R8/R8D",
	"BSWAP RCX/ECX/R9/R9D",
	"BSWAP RDX/EDX/R10/R10D",
	"BSWAP RBX/EBX/R11/R11D",
	"BSWAP RSP/ESP/R12/R12D",
	"BSWAP RBP/EBP/R13/R13D",
	"BSWAP RSI/ESI/R14/R14D",
	"BSWAP RDIX/EDI/R15/R15D",

	"__66F3F2",//D0
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",

	"__66F3F2",//E0
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",
	"__66F3F2",

	"__66F2",//E0
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
	"__66F2",
};

char TwoByteOpcode_DecodingTable__[256][32] = {
	"Unallocated",//00
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"VMOVUPS Vps, Wps",//10
	"VMOVUPS Wps, Vps",
	"VMOVLPS Vq, Hq, Mq", // VMOVHLPS Vq, Hq, Uq �� ��
	"VMOVLPS Mq, Vq",
	"VUNPCKLPS Vx, Hx, Wx",
	"VUNPCKHPS Vx, Hx, Wx",
	"VMOVHPS Vdq, Hq, Mq",
	"VMOVHPS Mq, Vq",
	"Unallocated",
	"Unallocated",
	"BNDLDX",
	"BNDSTX",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//20
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//30
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//40
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"VMOVMSKPS Gy, Ups",//50
	"VSQRTPS Vps, Wps",
	"VRSQRTPS Vps, Wps",
	"VECCPPS Vps, Wps",
	"VANDPS Vps, Hps, Wps",
	"VANDNPS Vps, Hps, Wps",
	"VORPS Vps, Hps, Wps",
	"VXORPS Vps, Hps, Wps",
	"VADDPS Vps, Hps, Wps",
	"VMULPS Vps, Hps, Wps",
	"VCVTPS2PD Vpd, Wps",
	"VCTDQ2PS Vps, Wdq",
	"VSUBPS Vps, Hps, Wps",
	"VMINPS Vps, Hps, Wps",
	"VDIVPS Vps, Hps, Wps",
	"VMAXPS Vps, Hps, Wps",

	"PUNPCKLBW Pq, Qd",//60
	"PUNPCKLWD Pq, Qd",
	"PUNPCKLDQ Pq, Qd",
	"PACKSSWB Pq, Qq",
	"PCMPGTB Pq, Qq",
	"PCMPGTW Pq, Qq",
	"PCMPGTD Pq, Qq",
	"PACKUSWB Pq, Qq",
	"PUNPCKHBW Pq, Qd",
	"PUNPCKHWD Pq, Qd",
	"PUNPCKHDQ Pq, Qd",
	"PACKSSDW Pq, Qd",
	"Unallocated",
	"Unallocated",
	"MOVD/MOVQ Pd, Ev",
	"MOVq Pq, Qq",

	"PSHUFW Pq, Qq, lb",//70
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"PCMPEQB Pq, Qq",
	"PCMPEQW Pq, Qq",
	"PCMPEQD Pq, Qq",
	"EMMS_VZEROUPPER_VZEROALL",
	"VMREAD Ey, Gy",
	"VMWRITE Gy, Ey",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"MOVD/MOVQ Ey, Pd",
	"MOVQ Qq, Pq",

	"Unallocated",//80
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//90
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//A0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//B0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"XADD Eb, Gb",//C0
	"XADD Ev, Gv",
	"VCMPPS Vps, Hps, Wps, lb",
	"MOVNTI My, Gy",
	"PINSRW Pq, Ry/Mw, lb",
	"PEXTRW Gd, Nq, lb",
	"VSHUFPS Vps, Hps, Wps, lb",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//D0
	"PSRAW Pq, Qq",
	"PSRAD Pq, Qq",
	"PAVGW Pq, Qq",
	"PMULHUW Pq, Qq",
	"PMULHW Pq, Qq",
	"Unallocated",
	"MOVNTQ Mq, Pq",
	"PSUBSUB Pq, Qq",
	"PSUBUSW Pq, Qq",
	"PMINUB Pq, Qq",
	"PAND Pq, Qq",
	"PADDUSB Pq, Qq",
	"PADDUSW Pq, Qq",
	"PMAXUB Pq, Qq",
	"PANDN Pq, Qq",

	"PAVGB Pq, Qq",//E0
	"PSRAW Pq, Qq",
	"PSRAD Pq, Qq",
	"PAVGW Pq, Qq",
	"PMULHUW Pq, Qq",
	"PMULHW Pq, Qq",
	"Unallocated",
	"MOVTQ Mq, Pq",
	"PSUBSB Pq, Qq",
	"PSUBSW Pq, Qq",
	"PMINSW Pq, Qq",
	"POR Pq, Qq",
	"PADDSB Pq, Qq",
	"PADDSW Pq, Qq",
	"PMAXSW Pq, Qq",
	"PXOR Pq, Qq",

	"Unallocated",//F0
	"PSLLW Pq, Qq",
	"PSLLD Pq, Qq",
	"PSLLQ Pq, Qq",
	"PMULUDQ Pq, Qq",
	"PMADDWD Pq, Qq",
	"PSADBW Pq, Qq",
	"MASKMOVQ Pq, Nq",
	"PSUBB Pq, Qq",
	"PSUBW Pq, Qq",
	"PSUBD Pq, Qq",
	"PSUBQ Pq, Qq",
	"PADDB Pq, Qq",
	"PADDW Pq, Qq",
	"PADDD Pq, Qq",
	"Unallocated",
};
char TwoByteOpcode_DecodingTable66[256][32] = {
	"Unallocated",//00
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"VMOVUPD Vpd, Wpd",//10
	"VMOVUPD Wpd, Vpd",
	"VMOVLPD Vqm Hq, Mq",
	"VMOVLPD Mq, Vq",
	"VUNPCKLPD Vx, Hx, Wx",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//20
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//30
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//40
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//50
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//60
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//70
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//80
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//90
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//A0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//B0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//C0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//D0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//E0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//F0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
};
char TwoByteOpcode_DecodingTableF3[256][32] = {
	"Unallocated",//00
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//10
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//20
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//30
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//40
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//50
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//60
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//70
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//80
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//90
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//A0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//B0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//C0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//D0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//E0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//F0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
};
char TwoByteOpcode_DecodingTableF2[256][32] = {
	"Unallocated",//00
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//10
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//20
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//30
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//40
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//50
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//60
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//70
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//80
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//90
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//A0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//B0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//C0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//D0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//E0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",

	"Unallocated",//F0
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
	"Unallocated",
};


int main() {

	return 0;
}